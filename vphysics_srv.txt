         U abort@@GLIBC_2.0
         U access@@GLIBC_2.0
         U __acosf_finite@@GLIBC_2.15
         U __acos_finite@@GLIBC_2.15
00150310 t add_fdes
001afa48 d adds.8776
         U __asin_finite@@GLIBC_2.15
         U __atan2f_finite@@GLIBC_2.15
         U __atan2_finite@@GLIBC_2.15
         U atan@@GLIBC_2.0
00150b50 t base_from_cb_data.isra.4
0014fe90 t base_from_object.isra.3
001afa50 A __bss_start
         U cbrtf@@GLIBC_2.0
         U chdir@@GLIBC_2.0
         U chmod@@GLIBC_2.0
         U chown@@GLIBC_2.1
001501a0 t classify_object_over_fdes
         U closedir@@GLIBC_2.0
001afa60 b completed.6767
         U cosf@@GLIBC_2.0
         U cos@@GLIBC_2.0
0006e3c0 T CreateInterface
         U __ctype_b_loc@@GLIBC_2.3
         U __ctype_tolower_loc@@GLIBC_2.3
         U __ctype_toupper_loc@@GLIBC_2.3
001b11e0 B cvar
         U __cxa_atexit@@GLIBC_2.1.3
         w __cxa_finalize@@GLIBC_2.1.3
         U __cxa_guard_abort@@CXXABI_1.3
         U __cxa_guard_acquire@@CXXABI_1.3
         U __cxa_guard_release@@CXXABI_1.3
         U __cxa_pure_virtual@@CXXABI_1.3
00151440 t __deregister_frame
00151430 t __deregister_frame_info
00151320 t __deregister_frame_info_bases
0002ebc0 t deregister_tm_clones
         U DevMsg
         U dlclose@@GLIBC_2.0
         U dlerror@@GLIBC_2.0
         U dl_iterate_phdr@@GLIBC_2.2.4
         U dlopen@@GLIBC_2.1
         U dlsym@@GLIBC_2.0
0002ec50 t __do_global_dtors_aux
001aaebc t __do_global_dtors_aux_fini_array_entry
001ab040 d __dso_handle
001bfdb8 b dwarf_reg_size_table
001aaec4 a _DYNAMIC
         U __dynamic_cast@@CXXABI_1.3
001afa50 A _edata
001bfee0 A _end
         U __errno_location@@GLIBC_2.0
         U Error
0014d1c0 t execute_cfa_program
0014e2d0 t execute_stack_op
         U exit@@GLIBC_2.0
         U __exp_finite@@GLIBC_2.15
         U fclose@@GLIBC_2.1
001500f0 t fde_mixed_encoding_compare
0014fef0 t fde_single_encoding_compare
0014fa70 t fde_unencoded_compare
         U fflush@@GLIBC_2.0
         U fgets@@GLIBC_2.0
00151708 T _fini
         U fopen64@@GLIBC_2.1
         U fopen@@GLIBC_2.1
0016a1e0 r Four_2ToThe21s
0016a1d0 r Four_2ToThe22s
0016a1c0 r Four_2ToThe23s
0016a1b0 r Four_2ToThe24s
0016a190 r Four_Epsilons
0016a180 r Four_FLT_MAX
0016a210 r Four_Fours
0016a170 r Four_Negative_FLT_MAX
0016a1f0 r Four_NegativeOnes
0016a240 r Four_Ones
0016a200 r Four_Origin
0016a1a0 r Four_Point225s
0016a260 r Four_PointFives
0016a220 r Four_Threes
0016a230 r Four_Twos
0016a250 r Four_Zeros
         U __fprintf_chk@@GLIBC_2.3.4
         U fputc@@GLIBC_2.0
         U fputs@@GLIBC_2.0
0014faa0 t frame_downheap
0002eca0 t frame_dummy
001aae0c t __frame_dummy_init_array_entry
001a7f20 r __FRAME_END__
001bfe00 b frame_hdr_cache
001bfdf8 b frame_hdr_cache_head
0014fb70 t frame_heapsort
0014f4e0 t __frame_state_for
         U free@@GLIBC_2.0
         U freopen@@GLIBC_2.0
         U fwrite@@GLIBC_2.0
001ac1fc d g_EmptyCollisionListener
0014fd90 t get_cie_encoding
         U GetCPUInformation
         U getcwd@@GLIBC_2.0
         U getenv@@GLIBC_2.0
001b7880 b g_fDeferDeleteMindist
001aec20 d g_IVPToHLDir
001b5130 b global_friction_counter
001aaff4 a _GLOBAL_OFFSET_TABLE_
0002e620 t _GLOBAL__sub_I_cvar
0002ead0 t _GLOBAL__sub_I_Four_PointFives
0002e140 t _GLOBAL__sub_I_g_MeshFrameLocksPool
0002da40 t _GLOBAL__sub_I_g_PhysicsCollision
0002d7f0 t _GLOBAL__sub_I_g_PhysicsUnits
0002dde0 t _GLOBAL__sub_I_g_SurfaceDatabase
0002e420 t _GLOBAL__sub_I_g_VPhysPtrSaveRestoreOps
0002e8b0 t _GLOBAL__sub_I_ivp_mindist_settings
0002eb00 t _GLOBAL__sub_I_lineartovertex
0002e940 t _GLOBAL__sub_I_s_bMathlibInitialized
0002e650 t _GLOBAL__sub_I_s_StringCharConversion
0002e250 t _GLOBAL__sub_I_stdafx.cpp
0002e2a0 t _GLOBAL__sub_I__Z11InitLeafmapP17IVP_Compact_LedgeP9leafmap_t
0002d8e0 t _GLOBAL__sub_I__Z13vphysics_initv
0002d7c0 t _GLOBAL__sub_I__Z17ParseFileInternalPKcPcPbP14characterset_tj
0002dcf0 t _GLOBAL__sub_I__Z18GetOppositeSynapseP20IVP_Synapse_Friction
0002d840 t _GLOBAL__sub_I__Z19PackLedgeIntoBufferP12packedhull_tR10CUtlBufferPK17IVP_Compact_LedgeRK17virtualmeshlist_t
0002db40 t _GLOBAL__sub_I__Z29TransformHLWorldToHavanaLocalRK6VectorP15IVP_Real_Object
0002df80 t _GLOBAL__sub_I__Z31ComputePDControllerCoefficientsPffff
0002e3d0 t _GLOBAL__sub_I__Z9nexttokenPcPKcc
0002ea80 t _GLOBAL__sub_I__Z9_SSE_Sqrtf
0002e5f0 t _GLOBAL__sub_I__Z9_V_memsetPKciPvii
0002e6f0 t _GLOBAL__sub_I__ZN10CUtlString11AllocMemoryEj
0002e720 t _GLOBAL__sub_I__ZN10CUtlSymbol14s_pSymbolTableE
0002e530 t _GLOBAL__sub_I__ZN14ConCommandBase18s_pConCommandBasesE
0002ded0 t _GLOBAL__sub_I__ZN14CPhysicsObjectC2Ev
0002e5c0 t _GLOBAL__sub_I__ZN16CDataManagerBaseC2Ej
0002d9f0 t _GLOBAL__sub_I__ZN16CPhysics_AirboatC2EP15IVP_EnvironmentPK23IVP_Template_Car_SystemP17IPhysicsGameTrace
0002dd90 t _GLOBAL__sub_I__ZN17CFrictionSnapshotC2EP15IVP_Real_Object
0002e770 t _GLOBAL__sub_I__ZN18IVP_Freeze_ManagerC2Ev
0002e7c0 t _GLOBAL__sub_I__ZN19IVP_Friction_Solver30test_gauss_solution_suggestionEPdPiiP12IVP_U_Memory
0002e9c0 t _GLOBAL__sub_I__ZN22CPolyhedron_AllocByNew7ReleaseEv
0002e830 t _GLOBAL__sub_I__ZN22IVP_BetterDebugmanager19enable_debug_outputE15IVP_DEBUG_CLASS
0002dd40 t _GLOBAL__sub_I__ZN23CPhysicsFluidControllerC2EP17CBuoyancyAttacherP29IVP_Liquid_Surface_DescriptorP14CPhysicsObjecti
0002e7f0 t _GLOBAL__sub_I__ZN26IVP_Controller_Independent10empty_listE
0002dff0 t _GLOBAL__sub_I__ZN30vphysics_save_cphysicsspring_t9m_DataMapE
0002de70 t _GLOBAL__sub_I__ZN32vphysics_save_motioncontroller_t9m_DataMapE
0002dca0 t _GLOBAL__sub_I__ZN34CPhysics_Car_System_Raycast_WheelsC2EP15IVP_EnvironmentPK23IVP_Template_Car_System
0002e050 t _GLOBAL__sub_I__ZN34vphysics_save_cvehiclecontroller_t9m_DataMapE
0002e8d0 t _GLOBAL__sub_I__ZN8IVP_BallC2EP11IVP_ClusterPK17IVP_Template_BallPK24IVP_Template_Real_ObjectPK10IVP_U_QuatPK11IVP_U_Point
0002e500 t _GLOBAL__sub_I__ZN9CByteswap23SwapFieldToTargetEndianEPvS0_P17typedescription_t
001b0af0 b g_MeshFrameLocksPool
         w __gmon_start__
001b7890 b g_pCurrentMindist
001b11d0 b g_pCVar
001afee0 b g_PhysicsCollision
001ab058 d g_PhysicsInternal
001ab044 d g_PhysicsUnits
001b0ae0 b g_pMeshFrameLocks
001b11c0 b g_pProcessUtils
001b11b0 b g_pUtlSortVectorQSortContext
0016a160 r g_SIMD_0123
0016a110 r g_SIMD_AllOnesMask
0016a150 r g_SIMD_clear_signmask
0016a120 r g_SIMD_clear_wmask
0016a0c0 r g_SIMD_ComponentMask
0016a100 r g_SIMD_Low16BitsMask
0016a130 r g_SIMD_lsbmask
0016a140 r g_SIMD_signmask
0016a080 r g_SIMD_SkipTailMask
001b03a0 b g_SurfaceDatabase
001b0be0 b g_VisitHashPool
001b0cc4 b g_VPhysPtrSaveRestoreOps
001b0cc0 b g_VPhysPtrUtlVectorSaveRestoreOps
         U g_VProfCurrentProfile
         U __gxx_personality_v0@@CXXABI_1.3
         U HushAsserts
00151680 t __i686.get_pc_thunk.bx
         U iconv_close@@GLIBC_2.1
         U iconv@@GLIBC_2.1
         U iconv_open@@GLIBC_2.1
0002d578 T _init
0014da90 t init_dwarf_reg_size_table
         U isspace@@GLIBC_2.0
         U iswspace@@GLIBC_2.0
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
001b5118 b IVP_CLS
001b7870 b ivp_debug_indent
001b5180 b ivp_debugmanager
001b3914 b ivp_debug_sf_indent
001b38e0 b ivp_debug_sf_last_node_was_terminal
001b3900 b ivp_debug_sf_max_treedepth
001b38f0 b ivp_debug_sf_n_nodes_with_one_terminal
001b3910 b ivp_debug_sf_treedepth
001aeda0 d IVP_Hash_crctab
001b78a0 b ivp_mindist_settings
001aaec0 d __JCR_END__
001aaec0 d __JCR_LIST__
         w _Jv_RegisterClasses
0014d319 t .L122
0014d314 t .L19
0014e0c7 t .L191
0014e0bb t .L192
0014e097 t .L195
0014e0af t .L196
0014de90 t .L197
0014df08 t .L198
0014d321 t .L21
0014d38d t .L22
0014de88 t .L223
0014e205 t .L226
0014e1f7 t .L227
0014d3ab t .L23
0014e240 t .L230
0014e1e9 t .L231
0014df1d t .L232
0014e1dc t .L233
0014d3c9 t .L24
0014d3e6 t .L25
0014d448 t .L26
0014d48a t .L27
0014d4ca t .L28
0014d4f4 t .L29
0014d563 t .L30
0014d596 t .L31
0014d5bf t .L32
0014e3c0 t .L325
0014e410 t .L328
0014e400 t .L329
0014d621 t .L33
0014e3f0 t .L330
0014e3e0 t .L331
0014e3d0 t .L332
0014e338 t .L334
0014e378 t .L336
0014e6f0 t .L337
0014e6d8 t .L338
0014e6b8 t .L339
0014d661 t .L34
0014e7a8 t .L340
0014e788 t .L341
0014e5c0 t .L342
0014e590 t .L343
0014e668 t .L344
0014e630 t .L345
0014e600 t .L346
0014e5f0 t .L347
0014e6a8 t .L348
0014e388 t .L349
0014d697 t .L35
0014e540 t .L350
0014e4e0 t .L351
0014e720 t .L352
0014e458 t .L354
0014d6d8 t .L36
0014e9de t .L367
0014e9d2 t .L368
0014d738 t .L37
0014e9b0 t .L371
0014e9c6 t .L372
0014e7e1 t .L373
0014e83c t .L374
0014d788 t .L38
0014d7dc t .L39
0014d7ff t .L40
0014d86b t .L41
0014e931 t .L415
0014e93a t .L417
0014e948 t .L418
0014e951 t .L419
0014d8c0 t .L42
0014e8e1 t .L420
0014e8eb t .L421
0014e8f4 t .L422
0014e8fd t .L423
0014e906 t .L424
0014e90f t .L425
0014e918 t .L426
0014e921 t .L427
0014e970 t .L428
0014e980 t .L429
0014d98d t .L43
0014e990 t .L430
0014e9a0 t .L431
0014e960 t .L432
0014d920 t .L44
0014e3c8 t .L440
0014eb8a t .L523
0014ecc8 t .L524
0014ec98 t .L526
0014ebe0 t .L527
0014eb68 t .L528
0014ec40 t .L529
0014da21 t .L56
0014d9ff t .L57
0014da08 t .L60
0014da18 t .L61
0014fd68 t .L61
0014d9bc t .L62
0014d9eb t .L63
0014fd20 t .L64
0014fd58 t .L65
0014fd08 t .L68
0014fcf8 t .L69
0014fcb0 t .L70
0014fce8 t .L71
         U lchown@@GLIBC_2.0
0014ff80 t linear_search_fdes
001b8040 b lineartolightmap
001b9040 b lineartovertex
         U link@@GLIBC_2.0
         U localtime@@GLIBC_2.0
         U __log_finite@@GLIBC_2.15
         U __longjmp_chk@@GLIBC_2.11
00151690 t lstat
00151690 t __lstat
         U __lxstat64@@GLIBC_2.2
         U __lxstat@@GLIBC_2.0
         U malloc@@GLIBC_2.0
001bfde0 b marker.8514
00166c40 R MAX_OBJECT_ROT_SPEED
         U mbstowcs@@GLIBC_2.0
         U memalign@@GLIBC_2.0
         U memcmp@@GLIBC_2.0
         U memcpy@@GLIBC_2.0
         U memmove@@GLIBC_2.0
         U __memset_chk@@GLIBC_2.3.4
         U memset@@GLIBC_2.0
         U mkdir@@GLIBC_2.0
         U mkfifo@@GLIBC_2.0
001516c0 t mknod
001516c0 t __mknod
         U mount@@GLIBC_2.0
         U Msg
00169dc4 r nanmask
001aed54 d n_physical_pops
001bfec0 b object_mutex
001bfdb4 b once_regsizes.8974
         U open64@@GLIBC_2.2
         U opendir@@GLIBC_2.0
         U open@@GLIBC_2.0
001b71c0 b p_error_buffer
001af5e0 d pfFastCos
001af5e4 d pfFastSinCos
001af5f0 d pfInvRSquared
001af620 d pfRSqrt
001af610 d pfRSqrtFast
001af630 d pfSqrt
001af604 d pfVectorNormalize
001af600 d pfVectorNormalizeFast
001ab260 d physcollision
001ac208 d physprops
         U Plat_IsInDebugSession
         U Plat_localtime
001af640 d power2_n
         U __pow_finite@@GLIBC_2.15
001b5110 b P_Pop_Eps
001b5100 b P_Pop_Scal_Eps
001b50f0 b P_Pop_Too_Flat_Eps
         U __printf_chk@@GLIBC_2.3.4
         w __pthread_key_create@@GLIBC_2.0
         U pthread_mutexattr_init@@GLIBC_2.0
         U pthread_mutexattr_settype@@GLIBC_2.1
         U pthread_mutex_destroy@@GLIBC_2.0
         U pthread_mutex_init@@GLIBC_2.0
         U pthread_mutex_lock@@GLIBC_2.0
         U pthread_mutex_unlock@@GLIBC_2.0
         w pthread_once@@GLIBC_2.0
         U putchar@@GLIBC_2.0
         U puts@@GLIBC_2.0
001b4320 b qhmem
001b3940 b qh_qh
001b43a0 b qh_qhstat
001aed30 d qh_rand_seed
001aed44 d qh_version
         U qsort@@GLIBC_2.0
0007e000 t qsort_s
         U rand@@GLIBC_2.0
         U readdir@@GLIBC_2.0
0014fc70 t read_encoded_value_with_base
0014d170 t read_sleb128
0014fa20 t read_sleb128
         U realloc@@GLIBC_2.0
         U realpath@@GLIBC_2.3
001511d0 t __register_frame
001511a0 t __register_frame_info
00151100 t __register_frame_info_bases
001512b0 t __register_frame_info_table
00151220 t __register_frame_info_table_bases
001512e0 t __register_frame_table
0002ec00 t register_tm_clones
         U rename@@GLIBC_2.0
         U rmdir@@GLIBC_2.0
001b7ed0 b s_bMathlibInitialized
         U scandir@@GLIBC_2.0
00150440 t search_object
001bfed8 b seen_objects
0002eb30 t set_fast_math
         U _setjmp@@GLIBC_2.0
         U sincosf@@GLIBC_2.1
         U sincos@@GLIBC_2.1
001b7aa0 b SinCosTable
         U sinf@@GLIBC_2.0
         U sin@@GLIBC_2.0
0014fc00 t size_of_encoded_value
001b1220 b s_NoEscConversion
         U __sprintf_chk@@GLIBC_2.3.4
         U sscanf@@GLIBC_2.0
001b1b40 b s_StringCharConversion
         U __stack_chk_fail@@GLIBC_2.4
00151650 t stat
00151650 t __stat
         U stderr@@GLIBC_2.0
         U stdout@@GLIBC_2.0
         U strcasecmp@@GLIBC_2.0
         U strcasestr@@GLIBC_2.1
         U __strcat_chk@@GLIBC_2.3.4
         U strchr@@GLIBC_2.0
         U strcmp@@GLIBC_2.0
         U __strcpy_chk@@GLIBC_2.3.4
         U strcpy@@GLIBC_2.0
         U strdup@@GLIBC_2.0
         U strftime@@GLIBC_2.0
         U strlen@@GLIBC_2.0
         U strncasecmp@@GLIBC_2.0
         U __strncat_chk@@GLIBC_2.3.4
         U strncat@@GLIBC_2.0
         U strncpy@@GLIBC_2.0
         U strpbrk@@GLIBC_2.0
         U strrchr@@GLIBC_2.0
         U strstr@@GLIBC_2.0
         U strtod@@GLIBC_2.0
         U strtok@@GLIBC_2.0
         U strtol@@GLIBC_2.0
         U strtoul@@GLIBC_2.0
001bfdf0 b subs.8777
         U symlink@@GLIBC_2.0
         U tanf@@GLIBC_2.0
         U tan@@GLIBC_2.0
001bfde4 b terminator.8620
         U ThreadGetCurrentId
         U ThreadInterlockedAssignIf
         U ThreadInterlockedAssignIf64
         U ThreadInterlockedExchange
         U ThreadInterlockedIncrement
         U time@@GLIBC_2.0
001afa50 d __TMC_END__
         U tolower@@GLIBC_2.0
         U toupper@@GLIBC_2.0
         U towlower@@GLIBC_2.0
         U towupper@@GLIBC_2.0
0014d040 t __udivdi3
         U unlink@@GLIBC_2.0
001bfedc b unseen_objects
0014f980 t _Unwind_Backtrace
0014f5b0 t _Unwind_DebugHook
0014f960 t _Unwind_DeleteException
0014f480 t _Unwind_FindEnclosingFunction
00151470 t _Unwind_Find_FDE
0014f730 t _Unwind_ForcedUnwind
0014f0f0 t _Unwind_ForcedUnwind_Phase2
0014f3b0 t _Unwind_GetCFA
0014f4c0 t _Unwind_GetDataRelBase
0014f360 t _Unwind_GetGR
0014f420 t _Unwind_GetIP
0014f430 t _Unwind_GetIPInfo
0014f460 t _Unwind_GetLanguageSpecificData
0014f470 t _Unwind_GetRegionStart
0014f4d0 t _Unwind_GetTextRelBase
00150bb0 t _Unwind_IteratePhdrCallback
0014f5c0 t _Unwind_RaiseException
0014f020 t _Unwind_RaiseException_Phase2
0014f7e0 t _Unwind_Resume
0014f8a0 t _Unwind_Resume_or_Rethrow
0014f3c0 t _Unwind_SetGR
0014f450 t _Unwind_SetIP
         U utime@@GLIBC_2.0
         U utimes@@GLIBC_2.0
0014db10 t uw_frame_state_for
0014edf0 t uw_init_context_1
0014f240 t uw_install_context_1
0014efb0 t uw_update_context
0014ea30 t uw_update_context_1
001b7eb0 b vec3_angle
001b7ea0 b vec3_invalid
001b7ec0 b vec3_origin
         U __vfprintf_chk@@GLIBC_2.3.4
         U __vsnprintf_chk@@GLIBC_2.3.4
         U __vsprintf_chk@@GLIBC_2.3.4
         U __vswprintf_chk@@GLIBC_2.4
         U Warning
         U wcslen@@GLIBC_2.0
         U wcsncat@@GLIBC_2.0
         U wcsncpy@@GLIBC_2.0
         U wcstombs@@GLIBC_2.0
0014b5e0 t __wrap_access
0014be70 t __wrap_chmod
0014bf60 t __wrap_chown
0014b5b0 t __wrap_creat
0014b1b0 t __wrap_fopen
0014b2b0 t __wrap_fopen64
0014b090 t __wrap_freopen
0014c050 t __wrap_lchown
0014c2e0 t __wrap_link
0014b7c0 t __wrap_lstat
0014bba0 t __wrap___lxstat
0014bd80 t __wrap___lxstat64
0014cda0 t __wrap_mkdir
0014c840 t __wrap_mkfifo
0014c480 t __wrap_mknod
0014c580 t __wrap_mount
0014b3b0 t __wrap_open
0014b4b0 t __wrap_open64
0014b9c0 t __wrap_opendir
0014ccb0 t __wrap_realpath
0014c930 t __wrap_rename
0014ce90 t __wrap_rmdir
0014b8b0 t __wrap_scandir
0014b6d0 t __wrap_stat
0014c140 t __wrap_symlink
0014c750 t __wrap_unlink
0014cad0 t __wrap_utime
0014cbc0 t __wrap_utimes
0014bab0 t __wrap___xstat
0014bc90 t __wrap___xstat64
0002ecdb t __x86.get_pc_thunk.bx
0014fa0f t __x86.get_pc_thunk.cx
         U __xmknod@@GLIBC_2.0
         U __xstat64@@GLIBC_2.2
         U __xstat@@GLIBC_2.0
0013de90 t IsDenormal(float const&)
0013d1a0 t MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
000aa320 t qh_addhash(void*, setT*, int, unsigned int)
0009e690 t qh_divzero(double, double, double, unsigned int*)
000b4030 t qh_errexit(int, facetT*, ridgeT*)
0009f2a0 t qh_getarea(facetT*)
000a8a40 t qh_gethash(int, setT*, int, int, void*)
000a7c60 t qh_memfree(void*, int)
000a7db0 t qh_meminit(_IO_FILE*)
000a8000 t qh_memsize(int)
0009fe50 t qh_mindiff(double*, double*, int)
000a9660 t qh_pointid(double*)
000b0420 t qh_setcopy(setT*, int)
000b01a0 t qh_setfree(setT**)
000b0320 t qh_setlast(setT*)
000b0e20 t qh_setsize(setT*)
000b0f40 t qh_settemp(int)
000b1330 t qh_setzero(setT*, int, int)
0003d8e0 t ReadRandom(int*)
00143680 t RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00070e40 t V_FileBase(char const*, char*, int)
0006edb0 t _V_memmove(char const*, int, void*, void const*, int)
0006fe30 t V_snprintf(char*, int, char const*, ...)
0006eff0 t V_strlower(char*)
0006f190 t V_strnicmp(char const*, char const*, int)
0006fb70 t V_strnistr(char const*, char const*, int)
0006ee30 t _V_strrchr(char const*, int, char const*, char)
00071d30 t V_StrRight(char const*, int, char*, int)
00071cb0 t V_StrSlice(char const*, int, int, char*, int)
0006e9b0 t V_StrSlice(char const*, int, int, char*, int) [clone .part.4]
00071a90 t V_StrSubst(char const*, char const*, char const*, char*, int, bool)
00071da0 t V_strtowcs(char const*, int, wchar_t*, int)
00071de0 t V_wcstostr(wchar_t const*, int, char*, int)
00071c00 t AllocString(char const*, int)
0013ece0 t AngleMatrix(RadianEuler const&, matrix3x4_t&)
0013ed30 t AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
0013eb10 t AngleMatrix(QAngle const&, matrix3x4_t&)
0013ed80 t AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
0013f050 t ClearBounds(Vector&, Vector&)
         U ConColorMsg(Color const&, char const*, ...)
00057250 t datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)
00036c00 t datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)
00056fe0 t datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)
00056d00 t datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)
00056dd0 t datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)
00036cd0 t datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)
00057180 t datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)
000570b0 t datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)
00056be0 t datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)
00056f10 t datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)
000511e0 t datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)
00055bf0 t datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)
00039ad0 t datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)
00039ba0 t datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)
00039e10 t datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)
00039d40 t datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)
0004cd70 t datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)
00039fb0 t datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)
00039c70 t datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)
00054fe0 t datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)
00039860 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)
00056b10 t datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)
00039a00 t datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)
00039930 t datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)
00054f10 t datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)
00039ee0 t datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)
000396f0 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)
0013dd20 t FloorDivMod(double, double, int*, int*)
0005c5c0 t InitLeafmap(IVP_Compact_Ledge*, leafmap_t*)
00143800 t IRotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
0011ef80 t ivp_message(char const*, ...)
0011f020 t p_get_error()
0011f1e0 t p_get_float()
000b98d0 t p_mergesort(void**, int, int, int (*)(void*, void*, char*), char*)
000be090 t qh_addpoint(double*, facetT*, unsigned int)
000b13d0 t qh_allstatA()
000b1680 t qh_allstatB()
000b1a20 t qh_allstatC()
000b1e00 t qh_allstatD()
000b2080 t qh_allstatE()
000b2280 t qh_allstatF()
000b2660 t qh_allstatG()
000b2970 t qh_allstatH()
000b2d10 t qh_allstatI()
000a9790 t qh_delfacet(facetT*)
000aadb0 t qh_delridge(ridgeT*)
000c2c40 t qh_detvnorm(vertexT*, vertexT*, setT*, double*)
0009dc50 t qh_distnorm(int, double*, double*, double*)
000bcaf0 t qh_errexit2(int, facetT*, facetT*)
000b3e50 t qh_errprint(char const*, facetT*, facetT*, ridgeT*, vertexT*)
000bff40 t qh_findbest(double*, facetT*, unsigned int, unsigned int, unsigned int, double*, unsigned int*, int*)
000ab120 t qh_findgood(facetT*, int)
000c0f00 t qh_getangle(double*, double*)
000ab830 t qh_isvertex(double*, setT*)
000c3d70 t qh_markkeep(facetT*)
0009f850 t qh_maxouter()
000a7a80 t qh_memalloc(int)
000a7ea0 t qh_memsetup()
000a9460 t qh_newfacet()
000a9570 t qh_newridge()
000b35a0 t qh_newstats(int, int*)
000d4780 t qh_premerge(vertexT*, double, double)
000cbe40 t qh_printend(_IO_FILE*, int, facetT*, setT*, unsigned int)
000b0920 t qh_setcheck(setT*, char const*, int)
000b0020 t qh_setequal(setT*, setT*)
000b0200 t qh_setfree2(setT**, int)
000b02d0 t qh_setindex(setT*, void*)
000b06d0 t qh_setprint(_IO_FILE*, char const*, setT*)
00072000 t Q_URLDecode(char*, int, char const*, int)
00071fd0 t Q_URLEncode(char*, int, char const*, int)
0013fe10 t SmoothCurve(float)
001499a0 t _SSE_SinCos(float, float*, float*)
0006fd70 t V_snwprintf(wchar_t*, int, wchar_t const*, ...)
0006fe90 t V_vsnprintf(char*, int, char const*, char*)
0006ef40 t _V_wcslower(char const*, int, wchar_t*)
0003d900 t WriteRandom(int*)
0013ef90 t AngleIMatrix(RadianEuler const&, matrix3x4_t&)
0013ee40 t AngleIMatrix(QAngle const&, matrix3x4_t&)
0013efe0 t AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
0013e160 t AngleVectors(QAngle const&, Vector*)
0013e1f0 t AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
00055f70 t CreateSpring(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, springparams_t*)
0013d540 t CrossProduct(float const*, float const*, float*)
00142b30 t Cubic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0011ea80 t gbs_add_path(char*, char*)
0005cae0 t GetStartVert(leafmap_t const*, IVP_U_Float_Point const&, int&, int&)
0013ca90 t _InvRSquared(float const*)
00054120 t IsZeroVector(IVP_U_Point const&)
001444c0 t MathLib_Init(float, float, float, int, bool, bool, bool, bool)
0013ccc0 t MatrixAngles(matrix3x4_t const&, float*)
001405c0 t MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
0013ce40 t MatrixAngles(matrix3x4_t const&, RadianEuler&, Vector&)
0013d260 t MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
0011f150 t p_get_string()
000be6e0 t qh_buildhull()
000ce250 t qh_checkzero(unsigned int)
000aae10 t qh_delvertex(vertexT*)
0009dd80 t qh_detjoggle(double*, int, int)
000c3550 t qh_detvridge(vertexT*)
000bfbe0 t qh_distplane(double*, facetT*, double*)
0009dcf0 t qh_distround(int, double, double)
0009ed40 t qh_facetarea(facetT*)
000a2ae0 t qh_freebuild(unsigned int)
000a2eb0 t qh_freeqhull(unsigned int)
000c0b90 t qh_gausselim(double**, int, int, unsigned int*, unsigned int*)
000c1030 t qh_getcenter(setT*)
000cedb0 t qh_hashridge(setT*, int, ridgeT*, vertexT*)
000af660 t qh_initbuild()
000a4540 t qh_initflags(char*)
0009f7f0 t qh_maxabsval(double*, int)
0009fd90 t qh_minabsval(double*, int)
000b3c80 t qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)
000abfe0 t qh_newvertex(double*)
000c16a0 t qh_normalize(double*, int, unsigned int)
000acbd0 t qh_point_add(setT*, double*, void*)
000a00a0 t qh_pointdist(double*, double*, int)
000d4500 t qh_postmerge(char const*, double, double, unsigned int)
000bd0e0 t qh_precision(char const*)
000a0c10 t qh_scalelast(double*, int, int, double, double, double)
000b07b0 t qh_setaddnth(setT**, int, void*)
000b0610 t qh_setappend(setT**, void*)
000b09e0 t qh_setdelnth(setT*, int)
000b0550 t qh_setlarger(setT**)
000b12e0 t qh_setunique(setT**, void*)
000c94f0 t qh_skipfacet(facetT*)
0013d880 t VectorAngles(float const*, float*)
0013e4b0 t VectorAngles(Vector const&, QAngle&)
0013e600 t VectorAngles(Vector const&, Vector const&, QAngle&)
0013d7e0 t VectorMatrix(Vector const&, matrix3x4_t&)
0013cff0 t VectorRotate(float const*, matrix3x4_t const&, float*)
00140ed0 t VectorRotate(Vector const&, Quaternion const&, Vector&)
0013ec50 t VectorRotate(Vector const&, QAngle const&, Vector&)
0013cc80 t VectorsEqual(float const*, float const*)
00071180 t V_FixSlashes(char*, char)
00070040 t V_pretifymem(float, int, bool)
000702a0 t V_pretifynum(long long)
0006fdd0 t V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
00144810 t AngleDistance(float, float)
001446c0 t ApproachAngle(float, float, float)
0005d390 t FreeVisitHash(CVisitHash*)
0014a340 t GammaToLinear(float)
00071f20 t iHexCharToInt(char)
0014a390 t LinearToGamma(float)
0013d440 t MatrixScaleBy(float, matrix3x4_t&)
0013d5c0 t MatrixVectors(matrix3x4_t const&, Vector*, Vector*, Vector*)
00065650 t ParseKeyvalue(char const*, char (&) [1024], char (&) [1024])
00070e20 t PATHSEPARATOR(char)
0011ee40 t p_make_string(char const*, ...)
00144ba0 t PolyFromPlane(Vector*, Vector const&, float, float)
0011f030 t p_print_error()
000d41e0 t qh_all_merges(unsigned int, unsigned int)
000bf970 t qh_backnormal(double**, int, int, unsigned int, double*, unsigned int*)
000ae150 t qh_checkfacet(facetT*, unsigned int, unsigned int*)
0009d760 t qh_copypoints(double*, int, int)
0009da10 t qh_detsimplex(double*, setT*, int, unsigned int*)
000c3600 t qh_detvridge3(vertexT*, vertexT*)
000c3c80 t qh_geomplanes(facetT*, double*, double*)
000c1850 t qh_getcentrum(facetT*)
000ceef0 t qh_makeridges(facetT*)
000cdd40 t qh_makeridges(facetT*) [clone .part.1]
0009f8c0 t qh_maxsimplex(int, setT*, double*, int, setT**)
000d27a0 t qh_mergecycle(facetT*, facetT*)
000d2a40 t qh_mergefacet(facetT*, facetT*, double*, double*, unsigned int)
000abec0 t qh_nearvertex(facetT*, double*, double*)
000c1230 t qh_normalize2(double*, int, unsigned int, double*, unsigned int*)
0009ff50 t qh_outerinner(facetT*, double*, double*)
000acc70 t qh_pointfacet()
000cd230 t qh_printbegin(_IO_FILE*, int, facetT*, setT*, unsigned int)
000cc350 t qh_printbegin(_IO_FILE*, int, facetT*, setT*, unsigned int) [clone .part.7]
000c6370 t qh_printfacet(_IO_FILE*, facetT*)
000ade10 t qh_printlists()
000c5160 t qh_printpoint(_IO_FILE*, char const*, double*)
000c5fa0 t qh_printridge(_IO_FILE*, ridgeT*)
000b37f0 t qh_printstats(_IO_FILE*, int, int*)
000c3450 t qh_printvnorm(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
000c8320 t qh_readpoints(int*, int*, unsigned int*)
000adf60 t qh_resetlists(unsigned int)
000a1230 t qh_scaleinput()
000b1260 t qh_setcompact(setT*)
000aff50 t qh_setdellast(setT*)
000b0d90 t qh_setreplace(setT*, void*, void*)
000b1000 t qh_settemppop()
000d19c0 t qh_tracemerge(facetT*, facetT*)
000d2640 t qh_willdelete(facetT*, facetT*)
00140a20 t QuaternionAdd(Quaternion const&, Quaternion const&, Quaternion&)
0007b4f0 t Q_UTF16ToUTF8(unsigned short const*, char*, int, EStringConvertErrorPolicy)
0007bbe0 t Q_UTF32ToUTF8(wchar_t const*, char*, int, EStringConvertErrorPolicy)
0007ae00 t Q_UTF8ToUTF16(char const*, unsigned short*, int, EStringConvertErrorPolicy)
0007b220 t Q_UTF8ToUTF32(char const*, wchar_t*, int, EStringConvertErrorPolicy)
001449d0 t RotationDelta(QAngle const&, QAngle const&, QAngle*)
00143380 t TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00071610 t V_AppendSlash(char*, int)
00070d90 t V_binarytohex(unsigned char const*, int, char*, int)
0013d510 t VectorCompare(float const*, float const*)
0013d080 t VectorIRotate(float const*, matrix3x4_t const&, float*)
0013d660 t VectorVectors(Vector const&, Vector&, Vector&)
00071490 t V_GetFileName(char const*)
00070c90 t V_hextobinary(char const*, int, unsigned char*, int)
0002d890 t vphysics_init()
000723e0 t V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
00070b00 t _V_UCS2ToUTF8(unsigned short const*, char*, int)
00070bc0 t _V_UTF8ToUCS2(char const*, int, unsigned short*, int)
0005d300 t AllocVisitHash()
00144870 t AngleNormalize(float)
00144910 t AnglesAreEqual(float, float, float)
0013dee0 t BoxOnPlaneSide(float const*, float const*, cplane_t const*)
00071f00 t cIntToHexDigit(int)
00147df0 t ClipPolyhedron(CPolyhedron const*, float const*, int, float, bool)
001424e0 t Hermite_Spline(float, float, float, float)
00142340 t Hermite_Spline(float, float, float, float, float)
00142530 t Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
00142440 t Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
00142220 t Hermite_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00057310 t IsVehicleWheel(IVP_Real_Object*)
00143500 t ITransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
0011c090 t ivp_byte_swap2(unsigned short&)
0011c060 t ivp_byte_swap4(unsigned int&)
000ee130 t ivp_dummy_func()
0011d130 t ivp_srand_read()
0011eed0 t p_export_error(char const*, ...)
000a82a0 t qh_appendfacet(facetT*)
000a27b0 t qh_appendprint(qh_PRINT)
000aa410 t qh_checkconvex(facetT*, int)
000aa360 t qh_check_point(double*, facetT*, double*, double*, facetT**, facetT**)
000aab80 t qh_checkvertex(vertexT*)
000c9590 t qh_countfacets(facetT*, setT*, unsigned int, int*, int*, int*, int*, int*)
0009d850 t qh_determinant(double**, int, unsigned int*)
0009df40 t qh_detroundoff()
000c37b0 t qh_eachvoronoi(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), vertexT*, unsigned int, qh_RIDGE, unsigned int)
000c3bc0 t qh_facet2point(facetT*, double**, double**, double*)
000a2730 t qh_facetcenter(setT*)
000c0730 t qh_findbestnew(double*, facetT*, double*, unsigned int*, int*)
000bd160 t qh_findhorizon(double*, facetT*, int*, int*)
000a2830 t qh_freebuffers()
000ab700 t qh_furthestout(facetT*)
000c1120 t qh_getdistance(facetT*, facetT*, double*, double*)
000d1460 t qh_getmergeset(facetT*)
000af250 t qh_initialhull(setT*)
000a1420 t qh_joggleinput()
000ca740 t qh_markvoronoi(facetT*, setT*, unsigned int, unsigned int*, int*)
000cfe70 t qh_mergeridges(facetT*, facetT*)
000d0440 t qh_newvertices(setT*)
000ac460 t qh_nextridge3d(ridgeT*, facetT*, vertexT**)
000b3550 t qh_nostatistic(int)
000ac650 t qh_outcoplanar()
000ad520 t qh_pointvertex()
000cb270 t qh_printafacet(_IO_FILE*, int, facetT*, unsigned int)
000c4110 t qh_printcenter(_IO_FILE*, int, char const*, facetT*)
000cd270 t qh_printfacets(_IO_FILE*, int, facetT*, setT*, unsigned int)
000a0190 t qh_printmatrix(_IO_FILE*, char const*, double**, int, int)
000c79f0 t qh_printpoint3(_IO_FILE*, double*)
000a0240 t qh_printpoints(_IO_FILE*, char const*, setT*)
000c5260 t qh_printvertex(_IO_FILE*, vertexT*)
000c2b30 t qh_printvridge(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
000c6410 t qh_projectdim3(double*, double*)
000a96e0 t qh_removefacet(facetT*)
000a0ba0 t qh_rotateinput(double**)
000a0de0 t qh_scalepoints(double*, int, int, double*, double*)
000a12b0 t qh_setdelaunay(int, int, double*)
000c81c0 t qh_setfeasible(int)
000b0250 t qh_setfreelong(setT**)
000b1130 t qh_settempfree(setT**)
000b10d0 t qh_settemppush(setT*)
000b11e0 t qh_settruncate(setT*, int)
00070470 t Q_IsMeanSpaceW(wchar_t)
00053f40 t QuaternionDiff(IVP_U_Quat const&, IVP_U_Quat const&, IVP_U_Quat&)
00140ae0 t QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
00072070 t Q_URLDecodeRaw(char*, int, char const*, int)
00072040 t Q_URLEncodeRaw(char*, int, char const*, int)
0007b900 t Q_UTF16ToUTF32(unsigned short const*, wchar_t*, int, EStringConvertErrorPolicy)
0007bfb0 t Q_UTF32ToUTF16(wchar_t const*, unsigned short*, int, EStringConvertErrorPolicy)
0007c3c0 t Q_UTF32ToUTF32(wchar_t const*, wchar_t*, int, EStringConvertErrorPolicy)
0013e860 t SetScaleMatrix(float, float, float, matrix3x4_t&)
0013f0d0 t SolveQuadratic(float, float, float, float&, float&)
00149810 t _SSE_RSqrtFast(float)
0006e730 t Sys_GetFactory(CSysModule*)
0006e770 t Sys_GetFactory(char const*)
0006e560 t Sys_LoadModule(char const*, Sys_Flags)
000626b0 t TraceGetAABB_r(Vector*, Vector*, IVP_Compact_Ledgetree_Node const*, CTraceIVP&)
0005aa10 t VirtualMeshPSI()
000710c0 t V_SetExtension(char*, char const*, int)
00072290 t V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
00071240 t V_StripLastDir(char*, int)
0006fef0 t V_vsnprintfRet(char*, int, char const*, char*, bool*)
001410f0 t AngleQuaternion(RadianEuler const&, Quaternion&)
00141210 t AngleQuaternion(QAngle const&, Quaternion&)
00149d60 t BuildGammaTable(float, float, float, int)
00144e50 t ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
0013d9d0 t ConcatRotations(float const (*) [3], float const (*) [3], float (*) [3])
0006b140 t ConVar_Register(int, IConCommandBaseAccessor*)
0002efa0 t ConvertBoxToIVP(Vector const&, Vector const&, Vector&, Vector&)
0006e3d0 t GetModuleHandle(char const*)
0013cc30 t InitSinCosTable()
0014a800 t LinearToTexture(float)
0013d3c0 t MatrixGetColumn(matrix3x4_t const&, int, Vector&)
0013d400 t MatrixSetColumn(Vector const&, int, matrix3x4_t&)
0013ea40 t MatrixTranspose(matrix3x4_t&)
0013ea90 t MatrixTranspose(matrix3x4_t const&, matrix3x4_t&)
000a8350 t qh_appendvertex(vertexT*)
000ce060 t qh_basevertices(facetT*)
000bc720 t qh_buildtracing(double*, facetT*)
000ce140 t qh_checkconnect()
000a8700 t qh_checkflipped(facetT*, double*, unsigned int)
000ad5a0 t qh_check_maxout()
000af1c0 t qh_check_output()
000ad190 t qh_check_points()
000aebe0 t qh_checkpolygon(facetT*)
000aace0 t qh_clearcenters(qh_CENTER)
0009d7e0 t qh_crossproduct(int, double*, double*, double*)
000ac4f0 t qh_facet3vertex(facetT*)
000ab450 t qh_findgood_all(facetT*)
0009f070 t qh_findgooddist(double*, facetT*, double*, facetT**)
000d3030 t qh_forcedmerges(unsigned int*)
000adb30 t qh_furthestnext()
0009f470 t qh_gram_schmidt(int, double**)
000ab800 t qh_infiniteloop(facetT*)
0009f6a0 t qh_inthresholds(double*, double*)
000a9b00 t qh_makenewfacet(setT*, unsigned int, facetT*)
000a7cf0 t qh_memfreeshort(int*, int*)
000cfb60 t qh_mergefacet2d(facetT*, facetT*)
000d0490 t qh_mergesimplex(facetT*, facetT*, unsigned int)
000abd60 t qh_nearcoplanar()
000abf70 t qh_newhashtable(int)
000bcb40 t qh_nextfurthest(facetT**)
000bd980 t qh_partitionall(setT*, double*, int)
000ada90 t qh_prependfacet(facetT*, facetT**)
000c7b80 t qh_printcentrum(_IO_FILE*, facetT*, double)
000c5060 t qh_printpointid(_IO_FILE*, char const*, int, double*, int)
000c7a70 t qh_printspheres(_IO_FILE*, setT*, double)
000bef30 t qh_printsummary(_IO_FILE*)
000cab40 t qh_printvoronoi(_IO_FILE*, int, facetT*, setT*, unsigned int)
000a1790 t qh_projectinput()
000c16e0 t qh_projectpoint(double*, facetT*, double)
000a08a0 t qh_randomfactor()
000a0910 t qh_randommatrix(double*, int, double**)
000c7f90 t qh_readfeasible(int, char*)
000a9a70 t qh_removevertex(vertexT*)
000d0e10 t qh_renamevertex(vertexT*, vertexT*, setT*, facetT*, facetT*)
000a0a00 t qh_rotatepoints(double*, int, int, double**)
000b08a0 t qh_setaddsorted(setT**, void*)
000affb0 t qh_setdelsorted(setT*, void*)
000b0ec0 t qh_setduplicate(setT*, int)
000a1c90 t qh_sethalfspace(int, double*, double**, double*, double*, double*)
000d1b90 t qh_tracemerging()
000d1c30 t qh_updatetested(facetT*, facetT*)
000d1db0 t qh_vertexridges(vertexT*)
000afe60 t qh_vertexsubset(setT*, setT*)
0013ff40 t QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
00140830 t QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
00140910 t QuaternionScale(Quaternion const&, float, Quaternion&)
001403d0 t QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
0007a7c0 t Q_UChar32ToUTF8(wchar_t, char*)
0007ac80 t Q_UnicodeLength(char const*)
0007acd0 t Q_UnicodeLength(unsigned short const*)
0007ad20 t Q_UnicodeLength(wchar_t const*)
0007dad0 t Q_UnicodeRepair(char*, EStringConvertErrorPolicy)
0007dd50 t Q_UnicodeRepair(unsigned short*, EStringConvertErrorPolicy)
0007dfe0 t Q_UnicodeRepair(wchar_t*, EStringConvertErrorPolicy)
0007a8a0 t Q_UTF8ToUChar32(char const*, wchar_t&, bool&)
001431c0 t RangeCompressor(float, float, float, float)
0006e450 t Sys_LoadLibrary(char const*, Sys_Flags)
0014a7c0 t TextureToLinear(int)
0013ceb0 t VectorTransform(float const*, matrix3x4_t const&, float*)
0013fc10 t VectorYawRotate(Vector const&, float, Vector&)
00071a50 t V_FixupPathName(char*, unsigned int, char const*)
00071130 t V_StripFilename(char*)
0013f090 t AddPointToBounds(Vector const&, Vector&, Vector&)
0013dc40 t ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
0011c160 t ivp_free_aligned(void*)
0011c050 t ivp_memory_check(void*)
0013d200 t MatricesAreEqual(matrix3x4_t const&, matrix3x4_t const&, float)
0013d110 t MatrixInitialize(matrix3x4_t&, Vector const&, Vector const&, Vector const&, Vector const&)
001413d0 t MatrixQuaternion(matrix3x4_t const&, Quaternion&)
000b6720 t p_ab_quad_length(P_Sur_2D_Point*, P_Sur_2D_Point*, P_Sur_2D_Point*)
00142fd0 t Parabolic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000b58e0 t p_check_for_flat(IVP_Tri_Edge*, IVP_Tri_Edge*, double)
0011f180 t p_get_next_token()
000b2f00 t qh_allstatistics()
000ce600 t qh_copynonconvex(ridgeT*)
000ac0d0 t qh_createsimplex(setT*)
000a9940 t qh_deletevisible()
000c98c0 t qh_facetvertices(facetT*, setT*, unsigned int)
000aaf80 t qh_findbestfacet(double*, unsigned int, double*, unsigned int*)
0009eef0 t qh_findbestsharp(double*, facetT**, double*, int*)
000ceaa0 t qh_findbest_test(unsigned int, facetT*, facetT*, facetT**, double*, double*, double*)
000aae60 t qh_findfacet_all(double*, double*, unsigned int*, int*)
000d3d40 t qh_flippedmerges(facetT*, unsigned int*)
000a3230 t qh_initqhull_mem()
000ac2c0 t qh_makenewfacets(double*)
000a8b60 t qh_makenewplanes()
000a8cd0 t qh_matchneighbor(facetT*, int, int, int*)
000a8be0 t qh_matchvertices(int, setT*, int, setT*, int*, unsigned int*)
000a80b0 t qh_memstatistics(_IO_FILE*)
000d0160 t qh_mergevertices(setT*, setT**)
0009feb0 t qh_orientoutside(facetT*)
000cbc00 t qh_printend4geom(_IO_FILE*, facetT*, int*, unsigned int)
000c9a70 t qh_printextremes(_IO_FILE*, facetT*, setT*, int)
000caa10 t qh_printvdiagram(_IO_FILE*, int, facetT*, setT*, unsigned int)
000c54b0 t qh_printvertices(_IO_FILE*, char const*, setT*)
000a0550 t qh_projectpoints(signed char*, int, double*, int, int, double*, int)
000b0480 t qh_setappend_set(setT**, setT*)
000b0130 t qh_setequal_skip(setT*, int, setT*, int)
000c2290 t qh_setfacetplane(facetT*)
000b43a0 t qh_user_memsizes()
0007a740 t Q_IsValidUChar32(wchar_t)
00141400 t QuaternionAngles(Quaternion const&, RadianEuler&)
00140f60 t QuaternionAngles(Quaternion const&, QAngle&)
00140470 t QuaternionInvert(Quaternion const&, Quaternion&)
00140d20 t QuaternionMatrix(Quaternion const&, matrix3x4_t&)
00140f10 t QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
0007a870 t Q_UChar32ToUTF16(wchar_t, unsigned short*)
0007a400 t Q_UChar32ToUTF16(wchar_t, unsigned short*) [clone .part.5]
0007ad40 t Q_UnicodeAdvance(char*, int)
0007ad90 t Q_UnicodeAdvance(unsigned short*, int)
0007ade0 t Q_UnicodeAdvance(wchar_t*, int)
0007aa60 t Q_UTF16ToUChar32(unsigned short const*, wchar_t&, bool&)
0013deb0 t SignbitsForPlane(cplane_t*)
00141460 t Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
00149950 t _SSE_InvRSquared(float const*)
0006e710 t Sys_UnloadModule(CSysModule*)
00062ca0 t TraceGetExtent_r(IVP_Compact_Ledgetree_Node const*, CTraceIVP&, Vector const&, float&, Vector&)
0013cf50 t VectorITransform(float const*, matrix3x4_t const&, float*)
0013cb40 t _VectorNormalize(Vector&)
00071a20 t V_IsAbsolutePath(char const*)
00070fa0 t V_StripExtension(char const*, char*, int)
000709e0 t _V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
00070a80 t _V_UnicodeToUCS2(wchar_t const*, int, char*, int)
00141330 t BasisToQuaternion(Vector const&, Vector const&, Vector const&, Quaternion&)
0006a7a0 t CharacterSetBuild(characterset_t*, char const*)
00052900 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, float, float, float, float, IVP_U_Float_Point*)
00052bd0 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, IVP_U_Float_Point const&, float, float, IVP_U_Float_Point*)
0006bcc0 t ConVar_PrintFlags(ConCommandBase const*)
0006b1f0 t ConVar_Unregister()
0002f230 t ConvertMatrixToHL(IVP_U_Matrix const&, matrix3x4_t&)
0005bb00 t CreateVirtualMesh(virtualmeshparams_t const&)
00146b40 t FindPointInPlanes(float const*, int)
0011ecf0 t GBS_remove_escape(char*)
00146890 t GetTempPolyhedron(unsigned short, unsigned short, unsigned short, unsigned short)
00120180 t ivp_indent_output()
0013d4d0 t MatrixScaleByZero(matrix3x4_t&)
0002ece0 t ParseFileInternal(char const*, char*, bool*, characterset_t*, unsigned int)
000b66f0 t p_count_reachable(P_Sur_2D_Point*)
000cdf30 t qh_appendmergeset(facetT*, facetT*, mergeType, double*)
000acd90 t qh_check_bestdist()
000a8830 t qh_facetintersect(facetT*, facetT*, int*, int*, int)
000d1ec0 t qh_find_newvertex(vertexT*, setT*, setT*)
000b3420 t qh_freestatistics()
000cee20 t qh_hashridge_find(setT*, int, ridgeT*, vertexT*, vertexT*, int*)
000b3430 t qh_initstatistics()
000a73e0 t qh_initthresholds(char*)
000cef10 t qh_mark_dupridges(facetT*)
000a9140 t qh_matchnewfacets()
000a7dd0 t qh_meminitbuffers(int, int, int, int, int)
000d3760 t qh_mergecycle_all(facetT*, unsigned int*)
000cfd10 t qh_mergeneighbors(facetT*, facetT*)
000bd5f0 t qh_partitionpoint(double*, facetT*)
000b42c0 t qh_printfacetlist(facetT*, setT*, unsigned int)
000adbf0 t qh_printhashtable(_IO_FILE*)
000c7020 t qh_printline3geom(_IO_FILE*, double*, double*, double*)
000c6e60 t qh_printline3geom(_IO_FILE*, double*, double*, double*) [clone .part.4]
000c77e0 t qh_printpointvect(_IO_FILE*, double*, double*, double*, double, double*)
000b3630 t qh_printstatlevel(_IO_FILE*, int, int)
000c51a0 t qh_printvdiagram2(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), setT*, qh_RIDGE, unsigned int)
000cd890 t qh_produce_output()
000d41c0 t qh_reducevertices()
000d4010 t qh_reducevertices() [clone .part.2]
000afde0 t qh_setvoronoi_all()
000aa060 t qh_updatevertices()
000a2210 t qh_voronoi_center(int, setT*)
0007ab20 t Q_UnicodeValidate(char const*)
0007ab80 t Q_UnicodeValidate(unsigned short const*)
0007abe0 t Q_UnicodeValidate(wchar_t const*)
00145ee0 t R_CullBoxSkipNear(Vector const&, Vector const&, Frustum_t const&)
00051a40 t SavePhysicsObject(physsaveparams_t const&, CPhysicsObject*)
000561e0 t SavePhysicsSpring(physsaveparams_t const&, CPhysicsSpring*)
0013e830 t SetIdentityMatrix(matrix3x4_t&)
0013fe60 t SmoothCurve_Tweak(float, float, float)
0014a3e0 t SrgbGammaToLinear(float)
0014a470 t SrgbLinearToGamma(float)
0006f300 t StringAfterPrefix(char const*, char const*)
0006e7a0 t Sys_LoadInterface(char const*, char const*, CSysModule**, void**)
00071680 t V_ComposeFileName(char const*, char const*, char*, int)
00071360 t V_ExtractFilePath(char const*, char*, int)
0014a500 t X360GammaToLinear(float)
0014a6d0 t X360LinearToGamma(float)
00142f60 t BSpline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00143c90 t CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
00141590 t Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001474e0 t ClipLinkedGeometry(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, float const*, int, float, bool)
0002f030 t ConvertMatrixToIVP(matrix3x4_t const&, IVP_U_Matrix&)
0005bb90 t DestroyVirtualMesh(CPhysCollide*)
0003fca0 t GetOppositeSynapse(IVP_Synapse_Friction*)
0011c120 t ivp_malloc_aligned(int, int)
00144630 t MathLib_MMXEnabled()
00144640 t MathLib_SSEEnabled()
0011edc0 t p_make_string_fast(char const*, ...)
0011f0f0 t p_read_first_token(_IO_FILE*)
000a83e0 t qh_attachnewfacets()
000c3a60 t qh_eachvoronoi_all(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), unsigned int, qh_RIDGE, unsigned int)
000ac790 t qh_initialvertices(int, setT*, double*, int)
000a32f0 t qh_initqhull_start(_IO_FILE*, _IO_FILE*, _IO_FILE*)
000ab860 t qh_matchduplicates(facetT*, int, int, int*)
000cf0d0 t qh_maydropneighbor(facetT*)
000d3450 t qh_merge_nonconvex(facetT*, facetT*, mergeType)
000cff70 t qh_mergevertex_del(vertexT*, facetT*, facetT*)
000c9da0 t qh_printextremes_d(_IO_FILE*, facetT*, setT*, int)
000c44d0 t qh_printfacet2geom(_IO_FILE*, facetT*, double*)
000c4630 t qh_printfacet2math(_IO_FILE*, facetT*, int)
000c4970 t qh_printfacet3math(_IO_FILE*, facetT*, int)
000cc010 t qh_printpoints_out(_IO_FILE*, facetT*, setT*, int)
000c7940 t qh_printpointvect2(_IO_FILE*, double*, double*, double*, double)
000b3870 t qh_printstatistics(_IO_FILE*, char const*)
000c9ef0 t qh_printvertexlist(_IO_FILE*, char const*, facetT*, setT*, unsigned int)
000ca380 t qh_printvneighbors(_IO_FILE*, facetT*, setT*, unsigned int)
000b0a80 t qh_setdelnthsorted(setT*, int)
000b0090 t qh_setequal_except(setT*, void*, setT*, void*)
000b0fa0 t qh_settempfree_all()
000d1800 t qh_test_vneighbors()
000afcd0 t qh_vertexintersect(setT**, setT*)
000afd10 t qh_vertexneighbors()
0007a780 t Q_UChar32ToUTF8Len(wchar_t)
0007a3d0 t Q_UChar32ToUTF8Len(wchar_t) [clone .part.2]
0007cb20 t Q_UTF16CharsToUTF8(unsigned short const*, int, char*, int, EStringConvertErrorPolicy)
0007d280 t Q_UTF32CharsToUTF8(wchar_t const*, int, char*, int, EStringConvertErrorPolicy)
0007c3e0 t Q_UTF8CharsToUTF16(char const*, int, unsigned short*, int, EStringConvertErrorPolicy)
0007c830 t Q_UTF8CharsToUTF32(char const*, int, wchar_t*, int, EStringConvertErrorPolicy)
001497d0 t _SSE_RSqrtAccurate(float)
0006e760 t Sys_GetFactoryThis()
00071040 t V_DefaultExtension(char*, char const*, int)
000711c0 t V_FixDoubleSlashes(char*)
00071400 t V_GetFileExtension(char const*)
00071720 t V_MakeAbsolutePath(char*, int, char const*, char const*)
00071870 t V_MakeRelativePath(char const*, char const*, char*, int)
000714a0 t V_RemoveDotSlashes(char*, char, bool)
00141080 t AxisAngleQuaternion(Vector const&, float, Quaternion&)
0002f520 t ConvertRotationToHL(IVP_U_Quat const&, QAngle&)
0002f320 t ConvertRotationToHL(IVP_U_Matrix3 const&, QAngle&)
00050d50 t CreatePhysicsObject(CPhysicsEnvironment*, CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*, bool)
00050fe0 t CreatePhysicsSphere(CPhysicsEnvironment*, float, int, Vector const&, QAngle const&, objectparams_t*, bool)
000979e0 t debug_sphere_output(IVV_Sphere*)
001423d0 t Hermite_SplineBasis(float, float*)
000e5080 t ivp_print_mi_matrix(int, int, IVP_MI_Vector**)
0014a840 t LinearToScreenGamma(float)
00144650 t MathLib_SSE2Enabled()
00030200 t PackLedgeIntoBuffer(packedhull_t*, CUtlBuffer&, IVP_Compact_Ledge const*, virtualmeshlist_t const&)
000aaa50 t qh_checkflipped_all(facetT*)
000ceb70 t qh_findbestneighbor(facetT*, double*, double*, double*)
000bddd0 t qh_partitionvisible(unsigned int, int*)
000c9ba0 t qh_printextremes_2d(_IO_FILE*, facetT*, setT*, int)
000c5540 t qh_printfacetheader(_IO_FILE*, facetT*)
000c60b0 t qh_printfacetridges(_IO_FILE*, facetT*)
000d22d0 t qh_redundant_vertex(vertexT*)
000b0670 t qh_setappend2ndlast(setT**, void*)
000a20b0 t qh_sethalfspace_all(int, int, double*, double*)
000d1070 t qh_test_appendmerge(facetT*, facetT*)
00140c30 t QuaternionAngleDiff(Quaternion const&, Quaternion const&)
00053f80 t QuaternionAxisAngle(IVP_U_Quat const&, Vector&, float&)
00140f90 t QuaternionAxisAngle(Quaternion const&, Vector&, float&)
00140420 t QuaternionConjugate(Quaternion const&, Quaternion&)
00140520 t QuaternionNormalize(Quaternion&)
0007a7a0 t Q_UChar32ToUTF16Len(wchar_t)
00071f90 t Q_URLDecodeInternal(char*, int, char const*, int, bool)
0006ec40 t Q_URLDecodeInternal(char*, int, char const*, int, bool) [clone .part.7]
00071f50 t Q_URLEncodeInternal(char*, int, char const*, int, bool)
0006ea80 t Q_URLEncodeInternal(char*, int, char const*, int, bool) [clone .part.6]
0007cf70 t Q_UTF16CharsToUTF32(unsigned short const*, int, wchar_t*, int, EStringConvertErrorPolicy)
0007d6a0 t Q_UTF32CharsToUTF16(wchar_t const*, int, unsigned short*, int, EStringConvertErrorPolicy)
0014a790 t SrgbGammaTo360Gamma(float)
0002f690 t TransformIVPToLocal(IVP_U_Point&, IVP_Real_Object*, bool)
0002f550 t TransformIVPToLocal(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002f810 t TransformLocalToIVP(IVP_U_Point&, IVP_Real_Object*, bool)
0002f6f0 t TransformLocalToIVP(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002f870 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002f9f0 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Float_Point&, IVP_Real_Object*, bool)
00144000 t CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
00144a80 t ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
0002f200 t ConvertRotationToIVP(QAngle const&, IVP_U_Quat&)
0002f130 t ConvertRotationToIVP(QAngle const&, IVP_U_Matrix3&)
0003fec0 t CreateObjectPairHash()
00036d90 t CreateSurfaceManager(CPhysCollide const*, short&)
001464e0 t GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
0003dca0 t IsExternalConstraint(IVP_Controller*, void*)
000511c0 t MaterialIndexDataOps()
00144620 t MathLib_3DNowEnabled()
000b7ec0 t p_link_triangle_self(IVP_Triangle*)
000be970 t qh_build_withrestart()
000b2f30 t qh_collectstatistics()
0009e720 t qh_facetarea_simplex(int, double*, setT*, vertexT*, unsigned int, double*, double*)
000a30b0 t qh_initqhull_buffers()
000a3640 t qh_initqhull_globals(double*, int, int, unsigned int)
000d2680 t qh_mergecycle_facets(facetT*, facetT*)
000cf5f0 t qh_mergecycle_ridges(facetT*, facetT*)
000bce20 t qh_partitioncoplanar(double*, facetT*, double*)
000c4b80 t qh_printfacet3vertex(_IO_FILE*, facetT*, int)
000cdb60 t qh_printneighborhood(_IO_FILE*, int, facetT*, facetT*, unsigned int)
000d0c80 t qh_renameridgevertex(ridgeT*, vertexT*, vertexT*)
000c1910 t qh_sethyperplane_det(int, double**, double*, unsigned int, double*, double*, unsigned int*)
00140a90 t QuaternionDotProduct(Quaternion const&, Quaternion const&)
00051bc0 t RestorePhysicsObject(physrestoreparams_t const&, CPhysicsObject**)
00056230 t RestorePhysicsSpring(physrestoreparams_t const&, CPhysicsSpring**)
0003d8b0 t SeedRandomGenerators()
00039330 t set_4x4_column_major(IVP_U_Matrix&, float const*)
00149830 t _SSE_VectorNormalize(Vector&)
0013cbc0 t _VectorNormalizeFast(Vector&)
00070f60 t V_StripTrailingSlash(char*)
0013e360 t AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
00143d10 t CalcDistanceSqrToLine(Vector const&, Vector const&, Vector const&, float*)
00143980 t CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
0014a880 t ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
00072500 t ConnectTier1Libraries(void* (**)(char const*, int*), int)
0003da70 t CreateFixedConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
000494f0 t CreateFluidController(IVP_Environment*, CPhysicsObject*, fluidparams_t*)
0003da00 t CreateHingeConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
0006a900 t DefaultCompletionFunc(char const*, char (*) [64])
00054080 t GetObjectPosition_IVP(IVP_U_Point&, IVP_Real_Object*)
0013de50 t GreatestCommonDivisor(int, int)
000f6830 t out_friction_info_obj(IVP_Core*)
000bb4f0 t P_THREE_CHECK_INTRUDE(int, int, int, int, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge**, IVP_U_Hesse*, IVP_U_Hesse*, IVP_Tri_Edge**, double*, IVP_U_Point&, IVP_Intrusion_Status*)
000a2f30 t qh_init_qhull_command(int, char**)
000a9ee0 t qh_makenew_simplicial(facetT*, vertexT*, int*)
000b3bf0 t qh_printallstatistics(_IO_FILE*, char const*)
000c9f70 t qh_printhelp_singular(_IO_FILE*)
000d1d20 t qh_vertexridges_facet(vertexT*, facetT*, setT**)
0003dd30 t SavePhysicsConstraint(physsaveparams_t const&, CPhysicsConstraint*)
0013f1a0 t SolveInverseQuadratic(float, float, float, float, float, float, float&, float&, float&)
0006e440 t Sys_IsDebuggerPresent()
0014a8f0 t VectorToColorRGBExp32(Vector const&, ColorRGBExp32&)
00071c60 t V_GetCurrentDirectory(char*, int)
00071c90 t V_SetCurrentDirectory(char const*)
00071320 t V_UnqualifiedFileName(char const*)
001448d0 t AngleNormalizePositive(float)
00072210 t BGetLocalFormattedDate(long, char*, int)
00072250 t BGetLocalFormattedTime(long, char*, int)
00143a60 t CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
00143c10 t CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
0004a2c0 t CreateFrictionSnapshot(IVP_Real_Object*)
0003dc30 t CreateLengthConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0004d010 t CreateMotionController(CPhysicsEnvironment*, IMotionEvent*)
00051ab0 t CreateObjectFromBuffer(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, bool)
00053ed0 t CreatePlayerController(CPhysicsObject*)
0003dbc0 t CreatePulleyConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
000552f0 t CreateShadowController(CPhysicsObject*, bool, bool)
0004a350 t DeleteAllFrictionPairs(IVP_Real_Object*, IVP_Real_Object*)
0014a2c0 t GammaToLinearFullRange(float)
00072810 t GetNoEscCharConversion()
000b6db0 t ivp_check_for_opposite(IVP_Hash*, IVP_Poly_Point*, IVP_Poly_Point*, IVP_Tri_Edge*)
0014a300 t LinearToGammaFullRange(float)
00036db0 t OutputCollideDebugInfo(CPhysCollide const*)
000b5820 t p_del_double_triangles(IVP_Triangle**, IVP_Triangle**, IVP_Triangle**)
000c2c00 t qh_compare_vertexpoint(void const*, void const*)
000d1680 t qh_getmergeset_initial(facetT*)
000d23a0 t qh_rename_sharedvertex(vertexT*, facetT*)
000c2070 t qh_sethyperplane_gauss(int, double**, double*, unsigned int, double*, double*, unsigned int*)
000b0b40 t qh_setnew_delnthsorted(setT*, int, int, int)
000ae0b0 t qh_vertexintersect_new(setT*, setT*)
00140750 t QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
00140130 t QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
00144950 t RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
00071450 t V_ExtractFileExtension(char const*, char*, int)
0006f9e0 t V_normalizeFloatString(char*)
00143b50 t CalcClosestPointToLineT(Vector const&, Vector const&, Vector const&, Vector&)
00144060 t CalcDistanceSqrToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
00145270 t ClipPolyToPlane_Precise(double*, int, double*, double const*, double, double)
0006bf00 t ConVar_PrintDescription(ConCommandBase const*)
0006e2d0 t CreateInterfaceInternal(char const*, int*)
0003d990 t CreateRagdollConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
0003dae0 t CreateSlidingConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0005a110 t CreateVehicleController(CPhysicsEnvironment*, CPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
000657f0 t CreateVPhysicsKeyParser(char const*)
00142c40 t Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0004a330 t DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
00053f20 t DestroyPlayerController(IPhysicsPlayerController*)
001426b0 t Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000b87b0 t p_calc_min_intrude_dist(IVP_Triangle*, IVP_Intrusion_Status*, double)
000cf300 t qh_mergecycle_neighbors(facetT*, facetT*)
000d39f0 t qh_merge_degenredundant()
000c4f10 t qh_printhelp_degenerate(_IO_FILE*)
000d0ac0 t qh_remove_extravertices(facetT*)
00140880 t QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
00143f90 t CalcClosestPointOnLine2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
00145f80 t CalcTriangleTangentSpace(Vector const&, Vector const&, Vector const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector&, Vector&)
0013db60 t ConcatTransforms_Aligned(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
00040900 t CreatePhysicsEnvironment()
00065630 t DestroyVPhysicsKeyParser(IVPhysicsKeyParser*)
000725a0 t DisconnectTier1Libraries()
00146c00 t FindConvexShapeLooseAABB(float const*, int, Vector*, Vector*)
00072800 t GetCStringCharConversion()
0003fcc0 t GetOppositeSynapseObject(IVP_Synapse_Friction*)
00050b60 t GetWorldCoordFromSynapse(IVP_Synapse_Friction*, IVP_U_Point&)
00051d20 t PostRestorePhysicsObject()
000ce6a0 t qh_degen_redundant_facet(facetT*)
000a9b90 t qh_makenew_nonsimplicial(facetT*, vertexT*, int*)
000cf990 t qh_mergecycle_vneighbors(facetT*, facetT*)
000cfff0 t qh_mergevertex_neighbors(facetT*, facetT*)
000c3fb0 t qh_order_vertexneighbors(vertexT*)
00146700 t RandomVectorInUnitCircle(Vector2D*)
00146600 t RandomVectorInUnitSphere(Vector*)
0003df00 t RestorePhysicsConstraint(physrestoreparams_t const&, CPhysicsConstraint**)
001498c0 t _SSE_VectorNormalizeFast(Vector&)
00143f00 t CalcClosestPointToLineT2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
00143e10 t CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
00054950 t ComputeShadowControllerHL(CPhysicsObject*, hlshadowcontrol_params_t const&, float, float)
0002fa70 t ConvertCoordinateAxisToHL(int)
000f6df0 t debug_out_friction_system(IVP_Friction_System*)
000d02e0 t qh_neighbor_intersections(vertexT*)
000c4310 t qh_printfacet2geom_points(_IO_FILE*, double*, double*, facetT*, double, double*)
000c4700 t qh_printfacet3geom_points(_IO_FILE*, setT*, facetT*, double, double*)
000705b0 t Q_RemoveAllEvilCharacters(char*)
00141840 t Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00054150 t ComputeShadowControllerIVP(IVP_Real_Object*, shadowcontrol_params_t&, float, float)
0002fa50 t ConvertCoordinateAxisToIVP(int)
0003db50 t CreateBallsocketConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
00145d80 t GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
00145740 t GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, Frustum_t&)
000e2210 t ivp_debug_show_real_values(IVP_Buoyancy_Input const*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*)
0003e2b0 t SavePhysicsConstraintGroup(physsaveparams_t const&, CPhysicsConstraintGroup*)
000497c0 t SavePhysicsFluidController(physsaveparams_t const&, CPhysicsFluidController*)
00144140 t CalcDistanceToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
00141ab0 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00141cf0 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, Vector&)
00054870 t ConvertShadowControllerToHL(shadowcontrol_params_t const&, hlshadowcontrol_params_t&)
00143150 t Parabolic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000e8d70 t p_calc_2d_distances_to_axis(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
0004d2a0 t SavePhysicsMotionController(physsaveparams_t const&, IPhysicsMotionController*)
00055470 t SavePhysicsPlayerController(physsaveparams_t const&, CPlayerController*)
00055360 t SavePhysicsShadowController(physsaveparams_t const&, IPhysicsShadowController*)
0006e700 t Sys_RunningWithDebugModules()
0013edd0 t TransformAnglesToLocalSpace(QAngle const&, matrix3x4_t const&)
0013ec90 t TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
00143e90 t CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
00141dd0 t Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000396a0 t ConvertHavanaLocalMatrixToHL(hk_Transform const&, matrix3x4_t&, IVP_Real_Object*)
00054790 t ConvertShadowControllerToIVP(hlshadowcontrol_params_t const&, shadowcontrol_params_t&)
0003d940 t CreatePhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00148590 t GeneratePolyhedronFromPlanes(float const*, int, float, bool)
0003d930 t GetClientDataForHkConstraint(hk_Breakable_Constraint*)
0013e8c0 t MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
000ce830 t qh_degen_redundant_neighbors(facetT*, facetT*)
0005a180 t SavePhysicsVehicleController(physsaveparams_t const&, CVehicleController*)
000720c0 t BGetLocalFormattedDateAndTime(long, char*, int, char*, int)
00143d80 t CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
001421b0 t Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0012c7b0 t ivp_core_get_surface_speed_os(IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000c7430 t qh_printfacet3geom_simplicial(_IO_FILE*, facetT*, double*)
000c6c20 t qh_printfacet4geom_simplicial(_IO_FILE*, facetT*, double*)
0003e360 t RestorePhysicsConstraintGroup(physrestoreparams_t const&, CPhysicsConstraintGroup**)
000497d0 t RestorePhysicsFluidController(physrestoreparams_t const&, CPhysicsFluidController**)
00039160 t TransformHavanaLocalToHLWorld(hk_Vector3 const&, IVP_Real_Object*, bool)
000390b0 t TransformHLWorldToHavanaLocal(Vector const&, IVP_Real_Object*)
001441a0 t CalcDistanceSqrToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
000c6520 t qh_printhyperplaneintersection(_IO_FILE*, facetT*, facetT*, setT*, double*)
0004d330 t RestorePhysicsMotionController(physrestoreparams_t const&, IPhysicsMotionController**)
00055480 t RestorePhysicsPlayerController(physrestoreparams_t const&, CPlayerController**)
000553c0 t RestorePhysicsShadowController(physrestoreparams_t const&, IPhysicsShadowController**)
0013f2f0 t SolveInverseQuadraticMonotonic(float, float, float, float, float, float, float&, float&, float&)
0006f360 t StringAfterPrefixCaseSensitive(char const*, char const*)
00071e10 t V_AddBackSlashesToSpecialChars(char const*)
001440c0 t CalcClosestPointOnLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
000528a0 t ComputePDControllerCoefficients(float*, float, float, float)
000c4dd0 t qh_printfacetNvertex_simplicial(_IO_FILE*, facetT*, int)
0005a1e0 t RestorePhysicsVehicleController(physrestoreparams_t const&, CVehicleController**)
0013fa80 t SolveInverseReciprocalQuadratic(float, float, float, float, float, float, float&, float&, float&)
00143ad0 t CalcSqrDistAndClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&, float&)
000c7050 t qh_printfacet3geom_nonsimplicial(_IO_FILE*, facetT*, double*)
000c69a0 t qh_printfacet4geom_nonsimplicial(_IO_FILE*, facetT*, double*)
00144200 t CalcLineToLineIntersectionSegment(Vector const&, Vector const&, Vector const&, Vector const&, Vector*, Vector*, float*, float*)
00039240 t ConvertHLLocalMatrixToHavanaLocal(matrix3x4_t const&, hk_Transform&)
001472f0 t ConvertLinkedGeometryToPolyhedron(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, bool)
0003e410 t PostRestorePhysicsConstraintGroup()
00142aa0 t Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000c4c40 t qh_printfacetNvertex_nonsimplicial(_IO_FILE*, facetT*, int, int)
00057340 t ShouldOverrideWheelContactFriction(float*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
00141fc0 t Catmull_Rom_Spline_Integral_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00070840 t Q_StripPrecedingAndTrailingWhitespace(char*)
000706c0 t Q_StripPrecedingAndTrailingWhitespaceW(wchar_t*)
000553d0 t RestorePhysicsShadowControllerInternal(physrestoreparams_t const&, IPhysicsShadowController**, CPhysicsObject*)
00051b40 t CreateObjectFromBuffer_UseExistingMemory(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, CPhysicsObject*)
00122e80 t ivp_optimiztion_center_check_successfull()
000554d0 t ControlPhysicsPlayerControllerAttachment_Silent(IPhysicsPlayerController*, IVP_Real_Object*, bool)
00055490 t ControlPhysicsShadowControllerAttachment_Silent(IPhysicsShadowController*, IVP_Real_Object*, bool)
00070930 t Q_AggressiveStripPrecedingAndTrailingWhitespace(char*)
000707a0 t Q_AggressiveStripPrecedingAndTrailingWhitespaceW(wchar_t*)
0013fcd0 t Bias(float, float)
0013fd60 t Gain(float, float)
         U ConMsg(char const*, ...)
         U DevMsg(char const*, ...)
000c63b0 t dfacet(unsigned int)
0011f220 t p_atof(char const*)
0011f250 t p_atoi(char const*)
0011c110 t p_free(void*)
0013d5a0 t Q_log2(int)
00146790 t SinCos(float, float*, float*)
0013cae0 t _sqrtf(float)
0006f760 t V_atof(char const*)
0006f740 t V_atoi(char const*)
00142cb0 t BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000c5440 t dvertex(unsigned int)
000a0820 t qh_rand()
0013cb00 t _rsqrtf(float)
00144660 t Approach(float, float, float)
001456d0 t CalcFovX(float, float)
00145640 t CalcFovY(float, float)
00145600 t CeilPow2(int)
001463c0 t HSVtoRGB(Vector const&, Vector&)
0011d0d0 t ivp_rand()
0011c0c0 t p_calloc(int, int)
0011c0b0 t p_malloc(unsigned int)
0011f060 t p_strcmp(char const*, char const*)
0011ec90 t p_strdup(char const*)
0011f040 t p_strlen(char const*)
000a27f0 t qh_clock()
000ac730 t qh_point(int)
000bebf0 t qh_qhull()
000b0290 t qh_setin(setT*, void*)
000a0870 t qh_srand(int)
001462e0 t RGBtoHSV(Vector const&, Vector&)
00149b20 t _SSE_cos(float)
0006f390 t V_atoi64(char const*)
00070c50 t V_nibble(char)
0006ef80 t V_strupr(char*)
00144790 t AngleDiff(float, float)
00145620 t FloorPow2(int)
00114ab0 t get_float()
000e11b0 t IsCarBody(IVP_Core*)
0011d110 t ivp_srand(int)
000655d0 t nexttoken(char*, char const*, char)
0014ad20 t pathmatch(char const*, char**, bool, char*, unsigned int)
0011f1a0 t p_get_num()
0011c100 t p_realloc(void*, int)
0011f090 t p_str_tok(char*, char const*)
000a3490 t qh_init_A(_IO_FILE*, _IO_FILE*, _IO_FILE*, int, char**)
000a78f0 t qh_init_B(double*, int, int, unsigned int)
000a0300 t qh_maxmin(double*, int, int)
000a34e0 t qh_option(char const*, int*, double*)
000afed0 t qh_setdel(setT*, void*)
000b0350 t qh_setnew(int)
000b3c40 t qh_stddev(int, double, double, double*)
000a44b0 t qh_strtod(char const*, char**)
000a44f0 t qh_strtol(char const*, char**)
00145e20 t R_CullBox(Vector const&, Vector const&, Frustum_t const&)
0012a6f0 t ReportObj(IVP_Synapse_Real*, CFmtStrN<256, false>&)
001497b0 t _SSE_Sqrt(float)
0006f590 t V_atoui64(char const*)
0006edd0 t _V_memcmp(char const*, int, void const*, void const*, int)
0006ed90 t _V_memcpy(char const*, int, void*, void const*, int)
0006ed70 t _V_memset(char const*, int, void*, int, int)
000720b0 t V_qsort_s(void*, unsigned int, unsigned int, int (*)(void*, void const*, void const*), void*)
0006ee80 t _V_strcmp(char const*, int, char const*, char const*)
0006ee00 t _V_strcpy(char const*, int, char*, char const*)
0006f0d0 t V_stricmp(char const*, char const*)
0006fb60 t V_stristr(char*, char const*)
0006fa60 t V_stristr(char const*, char const*)
00071cf0 t V_StrLeft(char const*, int, char*, int)
0006edf0 t _V_strlen(char const*, int, char const*)
0006ff60 t V_strncat(char*, char const*, unsigned int, int)
0006fca0 t V_strnchr(char const*, char, int)
0006f2a0 t V_strncmp(char const*, char const*, int)
0006fcf0 t V_strncpy(char*, char const*, int)
0006f060 t V_strnlwr(char*, unsigned int)
0006eee0 t _V_strstr(char const*, int, char const*, char const*)
0006eea0 t _V_wcscmp(char const*, int, wchar_t const*, wchar_t const*)
0006ee20 t _V_wcslen(char const*, int, wchar_t const*)
0006ffd0 t V_wcsncat(wchar_t*, wchar_t const*, unsigned int, int)
0006fd30 t V_wcsncpy(wchar_t*, wchar_t const*, int)
0006ef00 t _V_wcsupr(char const*, int, wchar_t*)
         U operator delete[](void*)@@GLIBCXX_3.4
         U operator delete(void*)@@GLIBCXX_3.4
001b09f0 b guard variable for datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
001aff60 b guard variable for datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
001b0a20 b guard variable for datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
001b0a60 b guard variable for datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
001b0a50 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
001b0a40 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
001aff50 b guard variable for datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
001b0a00 b guard variable for datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
001b0a10 b guard variable for datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
001b0a80 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
001b0a70 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
001b0a30 b guard variable for datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
001b06f0 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
001b0850 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
001b01b0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
001b01a0 b guard variable for datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
001b0170 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
001b0180 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
001b0670 b guard variable for datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
001b0150 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
001b0190 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
001b07c0 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
001b07b0 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
001b01e0 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
001b0a90 b guard variable for datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
001b01c0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
001b01d0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
001b07d0 b guard variable for datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
001b0160 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
001b0210 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
001bfd80 b guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
001bfd90 b guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszPathMatchEnabled
001afd40 b guard variable for GetTmpObjectMatrix(IVP_Real_Object*)::coreShiftMatrix
001b2590 b guard variable for CUtlString::GetEmptyString()::s_emptyString
001b02b0 b guard variable for CPhysicsEnvironment::Simulate(float)::autoMutex__
001b71b0 b guard variable for IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
001b38d0 b guard variable for hk_Memory::get_instance()::s_memory_instance
001b2600 b guard variable for CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001b0300 b guard variable for CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001b0d30 b guard variable for CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001afba0 b g_BreakSet
0016a040 r _pi32_inv1
00065570 t ReadVector(char const*, Vector&)
001b0de0 b s_BreakSet
0006e900 t FastToLower(char)
001b0c30 b nullsurface
001bfda0 b s_bShowDiag
001b0ef0 b s_nCVarFlag
001b0c70 b vec2_origin
001afcb0 b vec2_origin
001afd80 b vec2_origin
001afdc0 b vec2_origin
001afe70 b vec2_origin
001afeb0 b vec2_origin
001affb0 b vec2_origin
001b0250 b vec2_origin
001b0290 b vec2_origin
001b02f0 b vec2_origin
001b0340 b vec2_origin
001b0380 b vec2_origin
001b0630 b vec2_origin
001b06b0 b vec2_origin
001b0750 b vec2_origin
001b0810 b vec2_origin
001b0890 b vec2_origin
001b0ad0 b vec2_origin
001b0b90 b vec2_origin
001b0bd0 b vec2_origin
001b0cb0 b vec2_origin
001b0d20 b vec2_origin
001b0d50 b vec2_origin
001b0f10 b vec2_origin
001b0f40 b vec2_origin
001b11a0 b vec2_origin
001b1210 b vec2_origin
001b2570 b vec2_origin
001b25b0 b vec2_origin
001b25f0 b vec2_origin
001b5150 b vec2_origin
001b7f40 b vec2_origin
001b7fc0 b vec2_origin
001b8000 b vec2_origin
001b8020 b vec2_origin
001bfd50 b vec2_origin
001b0c50 b vec4_origin
001afd60 b vec4_origin
001afda0 b vec4_origin
001afe50 b vec4_origin
001afe90 b vec4_origin
001aff90 b vec4_origin
001b0230 b vec4_origin
001b0270 b vec4_origin
001b02d0 b vec4_origin
001b0320 b vec4_origin
001b0360 b vec4_origin
001b0610 b vec4_origin
001b0690 b vec4_origin
001b0730 b vec4_origin
001b07f0 b vec4_origin
001b0870 b vec4_origin
001b0ab0 b vec4_origin
001b0b70 b vec4_origin
001b0bb0 b vec4_origin
001b0c90 b vec4_origin
001b0d00 b vec4_origin
001b7fa0 b vec4_origin
0002ffa0 t BuildVertMap(vertmap_t&, Vector const*, int, IVP_Compact_Ledge const*)
00035020 t InitBoxVerts(Vector*, Vector**, Vector const&, Vector const&)
000d5130 t ProcessPoint(IVP_Compact_Poly_Point&, IVP_U_BigVector<IVP_Compact_Poly_Point>*)
001b11f0 b s_bConnected
001b0c60 b vec2_invalid
001afca0 b vec2_invalid
001afd70 b vec2_invalid
001afdb0 b vec2_invalid
001afe60 b vec2_invalid
001afea0 b vec2_invalid
001affa0 b vec2_invalid
001b0240 b vec2_invalid
001b0280 b vec2_invalid
001b02e0 b vec2_invalid
001b0330 b vec2_invalid
001b0370 b vec2_invalid
001b0620 b vec2_invalid
001b06a0 b vec2_invalid
001b0740 b vec2_invalid
001b0800 b vec2_invalid
001b0880 b vec2_invalid
001b0ac0 b vec2_invalid
001b0b80 b vec2_invalid
001b0bc0 b vec2_invalid
001b0ca0 b vec2_invalid
001b0d10 b vec2_invalid
001b0d40 b vec2_invalid
001b0f00 b vec2_invalid
001b0f30 b vec2_invalid
001b1190 b vec2_invalid
001b1200 b vec2_invalid
001b2560 b vec2_invalid
001b25a0 b vec2_invalid
001b25e0 b vec2_invalid
001b5140 b vec2_invalid
001b7f30 b vec2_invalid
001b7fb0 b vec2_invalid
001b7ff0 b vec2_invalid
001b8010 b vec2_invalid
001bfd40 b vec2_invalid
001b0c40 b vec4_invalid
001afd50 b vec4_invalid
001afd90 b vec4_invalid
001afe40 b vec4_invalid
001afe80 b vec4_invalid
001aff80 b vec4_invalid
001b0220 b vec4_invalid
001b0260 b vec4_invalid
001b02c0 b vec4_invalid
001b0310 b vec4_invalid
001b0350 b vec4_invalid
001b0600 b vec4_invalid
001b0680 b vec4_invalid
001b0720 b vec4_invalid
001b07e0 b vec4_invalid
001b0860 b vec4_invalid
001b0aa0 b vec4_invalid
001b0b60 b vec4_invalid
001b0ba0 b vec4_invalid
001b0c80 b vec4_invalid
001b0cf0 b vec4_invalid
001b7f90 b vec4_invalid
0005c460 t CM_ClearTrace(CGameTrace*)
001b0b00 b g_MeshManager
001af5d0 d IVP_RAND_SEED
00169f90 r _ps_coscof_p0
00169f80 r _ps_coscof_p1
00169f70 r _ps_coscof_p2
0016a070 r _ps_sign_mask
00169fc0 r _ps_sincof_p0
00169fb0 r _ps_sincof_p1
00169fa0 r _ps_sincof_p2
000a7a70 t qh_intcompare(void const*, void const*)
001b7f10 b s_bMMXEnabled
001b0ee0 b s_bRegistered
001b7f00 b s_bSSEEnabled
001b0d80 b s_EmptyConVar
001b0cd0 b s_VPhysPtrMap
001bfc40 b texgammatable
0006e950 t CopyToMaxChars(char*, int, char const*, int) [clone .part.0]
001bd840 b lineartoscreen
00068280 t NoPhysSaveFunc(physsaveparams_t const&, void*)
001aec60 d s_BackSlashMap
001b7ef0 b s_bSSE2Enabled
0004dfe0 t AngDragIntegral(float, float, float, float)
0005a5b0 t FlushFrameLocks()
001be840 b lineartotexture
00169f60 r _ps_cephes_FOPI
000cdcd0 t qh_compareangle(void const*, void const*)
000cdd00 t qh_comparemerge(void const*, void const*)
000cdd20 t qh_comparevisit(void const*, void const*)
001b7f20 b s_b3DNowEnabled
001bf840 b texturetolinear
001b0dd0 b s_bBuiltBreakSet
001aec50 d s_nDLLIdentifier
00165b2f r ivp_uqr_mod_table
00068290 t NoPhysRestoreFunc(physrestoreparams_t const&, void**)
0016a060 r _ps_inv_sign_mask
001aec44 d s_DefaultAccessor
0002ef10 t GetTmpObjectMatrix(IVP_Real_Object*)
001afe00 b g_MainDLLInterface
0004f250 t InitObjectTemplate(IVP_Template_Real_Object&, int, objectparams_t*, bool)
001b25d1 b g_CleanupSymbolTable
00169ff0 r _ps_minus_cephes_DP1
00169fe0 r _ps_minus_cephes_DP2
00169fd0 r _ps_minus_cephes_DP3
000c2a90 t qh_compare_facetarea(void const*, void const*)
00038b60 t IsBreakableConstraint(constraint_breakableparams_t const&)
000c2ad0 t qh_compare_facetmerge(void const*, void const*)
000c2b00 t qh_compare_facetvisit(void const*, void const*)
001ac1f8 d s_DefaultDebugOverlay
000704f0 t StripWhitespaceWorker(int, wchar_t*, bool*, bool) [clone .constprop.14]
001ac9e8 d g_MaterialIndexDataOps
001b7f50 b s_TempMemoryPolyhedron
001bd440 b g_Mathlib_GammaToLinear
001bd040 b g_Mathlib_LinearToGamma
001b0700 b g_PostRestoreObjectList
001b0af8 b s_BuildVirtualMeshMutex
001afaa0 b g_BreakSetIncludingColons
001b01f0 b g_ConstraintGroupActivateList
001b7f70 b s_TempMemoryPolyhedron_Buffer
001b7fe0 b f3
001b7a90 b ivp_surface_manager_ball_global
000ba710 t localCalcMassCenterAndRotInertia(IVP_U_BigVector<IVP_Compact_Ledge>*, IVP_U_Point*, IVP_U_Point*)
001aec80 d s_pConversionArrays_NoEscConversion
001afde0 b __g_CreateCPhysicsInterfaceIPhysics_reg
001b7fd0 b f05
001aeca0 d s_pConversionArrays_StringCharConversion
00030cf0 t __CreateCPhysicsInterfaceIPhysics_interface()
001aff68 b __g_CreateCPhysicsCollisionIPhysicsCollision_reg
00034d00 t __CreateCPhysicsCollisionIPhysicsCollision_interface()
001b05f0 b __g_CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_reg
0004a440 t __CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_interface()
0016a010 r _ps_1
001b0c18 b g_xneg
001b0c24 b g_xpos
001b0c00 b g_yneg
001b0c0c b g_ypos
001b0be8 b g_zneg
001b0bf4 b g_zpos
00151734 r axisMap
0014a990 t Descend(char*, unsigned int, bool, unsigned int)
0016a050 r _pi32_1
0016a030 r _pi32_2
0016a020 r _pi32_4
0016a000 r _ps_0p5
0006a930 t ConCommand::CanAutoComplete()
0006c410 t ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
0006b0a0 t ConCommand::Dispatch(CCommand const&)
0006b710 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
0006b680 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
0006b5f0 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
0006b710 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
0006b680 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
0006b5f0 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
0006aab0 t ConCommand::~ConCommand()
0006a910 t ConCommand::~ConCommand()
0006a910 t ConCommand::~ConCommand()
0005dac0 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
0005dac0 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
00073ed0 t CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
00073cd0 t CUtlBuffer::ParseToken(char const*, char const*, char*, int)
00074ef0 t CUtlBuffer::ConvertCRLF(CUtlBuffer&)
00072610 t CUtlBuffer::GetOverflow(int)
00074b40 t CUtlBuffer::IsBigEndian()
00072700 t CUtlBuffer::PutOverflow(int)
00074e70 t CUtlBuffer::AssumeMemory(void*, int, int, int)
00072c60 t CUtlBuffer::CheckPeekGet(int, int)
00072c30 t CUtlBuffer::CheckPeekGet(int, int) [clone .part.16]
00074b10 t CUtlBuffer::SetBigEndian(bool)
000738a0 t CUtlBuffer::EatCPPComment()
00072bd0 t CUtlBuffer::EatWhiteSpace()
00072ae0 t CUtlBuffer::OnGetOverflow(int)
00072ab0 t CUtlBuffer::OnPutOverflow(int)
000729c0 t CUtlBuffer::SetBufferType(bool, bool)
00072a00 t CUtlBuffer::EnsureCapacity(int)
00073020 t CUtlBuffer::PeekLineLength()
00072f70 t CUtlBuffer::PeekLineLength() [clone .part.21]
00072c90 t CUtlBuffer::PeekWhiteSpace(int)
00072cf0 t CUtlBuffer::PeekStringMatch(int, char const*, int)
00073ad0 t CUtlBuffer::GetDelimitedChar(CUtlCharConversion*)
00072f50 t CUtlBuffer::PeekStringLength()
00072e40 t CUtlBuffer::PeekStringLength() [clone .part.20]
000744f0 t CUtlBuffer::PutDelimitedChar(CUtlCharConversion*, char)
00072a90 t CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
00074df0 t CUtlBuffer::SetExternalBuffer(void*, int, int, int)
00074b60 t CUtlBuffer::AddNullTermination()
00074190 t CUtlBuffer::AddNullTermination() [clone .part.23]
00073b60 t CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
00074730 t CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
00074ae0 t CUtlBuffer::ActivateByteSwapping(bool)
00072d50 t CUtlBuffer::CheckArbitraryPeekGet(int, int&)
000739f0 t CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
00073040 t CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
00072b80 t CUtlBuffer::Get(void*, int)
00074200 t CUtlBuffer::Put(void const*, int)
00074be0 t CUtlBuffer::Swap(CUtlMemory<unsigned char, int>&)
00074b80 t CUtlBuffer::Swap(CUtlBuffer&)
00073870 t CUtlBuffer::Scanf(char const*, ...)
000744c0 t CUtlBuffer::Printf(char const*, ...)
00073250 t CUtlBuffer::GetLine(char*, int)
00072de0 t CUtlBuffer::GetUpTo(void*, int)
00073190 t CUtlBuffer::PeekGet(int, int)
000731d0 t CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
00074a70 t CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
00073530 t CUtlBuffer::VaScanf(char const*, char*)
00072b10 t CUtlBuffer::CheckGet(int)
00074120 t CUtlBuffer::CheckPut(int)
00073310 t CUtlBuffer::GetToken(char const*)
00074450 t CUtlBuffer::VaPrintf(char const*, char*)
00073420 t CUtlBuffer::GetString(char*, int)
00074270 t CUtlBuffer::PutString(char const*)
000752d0 t CUtlBuffer::CUtlBuffer(int, int, int)
00074d50 t CUtlBuffer::CUtlBuffer(void const*, int, int)
000752d0 t CUtlBuffer::CUtlBuffer(int, int, int)
00074d50 t CUtlBuffer::CUtlBuffer(void const*, int, int)
0004c620 t CUtlMemory<CUtlSymbol, int>::Purge()
000388a0 t CUtlMemory<bboxcache_t, int>::Purge()
00078480 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
00078230 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Purge()
00047150 t CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short>::Grow(int)
00043ea0 t CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short>::Purge()
000689d0 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
00068960 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
00078400 t CUtlMemory<CUtlHashtableEntry<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t>, int>::Purge()
00079f30 t CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short>::Grow(int)
00078440 t CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short>::Purge()
0006dfc0 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
00048890 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
000313e0 t CUtlMemory<CPhysicsCollisionSet, int>::Purge()
00052070 t CUtlMemory<postrestore_objectlist_t, int>::Purge()
0004c5e0 t CUtlMemory<CSurface, int>::Purge()
000726a0 t CUtlMemory<unsigned char, int>::ConvertToGrowableMemory(int) [clone .part.25] [clone .constprop.32]
00030a90 t CUtlMemory<unsigned char, int>::Purge()
00030ad0 t CUtlMemory<int, int>::Purge()
000487f0 t CUtlMemory<CUtlMultiList<void*, unsigned short>::ListElem_t, int>::Grow(int)
00044080 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::Purge()
00043dd0 t CUtlMemory<CPhysicsObject*, int>::Purge()
00043a00 t CUtlMemory<IPhysicsObject*, int>::Purge()
0004a400 t CUtlMemory<IVP_Real_Object*, int>::Purge()
00044220 t CUtlMemory<IDeleteQueueItem*, int>::Purge()
00031420 t CUtlMemory<IPhysicsEnvironment*, int>::Purge()
0005c320 t CUtlMemory<CPhysCollideVirtualMesh*, int>::Purge()
0003e750 t CUtlMemory<CPhysicsConstraintGroup*, int>::Purge()
000441a0 t CUtlMemory<CPhysicsFluidController*, int>::Purge()
000441e0 t CUtlMemory<IPhysicsPlayerController*, int>::Purge()
0004d720 t CUtlMemory<IVP_Core*, int>::Purge()
000387c0 t CUtlMemory<char*, int>::Purge()
00065500 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::Purge()
00078360 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Purge()
0006df50 t CUtlMemory<void*, int>::Purge()
00078560 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00078ab0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00079020 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
00079c10 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
00078130 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
00044260 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
000447b0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00047230 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
00044d30 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
00047e20 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Insert(CPhysicsListenerCollision::corepair_t const&)
00046320 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00043ee0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RemoveAll()
00068ab0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00069000 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00069560 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
0006a0d0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<void*, void*, unsigned short>::Node_t const&)
00068860 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
00075bd0 t CUtlString::FixSlashes(char)
000753d0 t CUtlString::AllocMemory(unsigned int)
00075520 t CUtlString::GetForModify()
000769c0 t CUtlString::GetEmptyString()
00075b80 t CUtlString::StripTrailingSlash()
00075480 t CUtlString::Set(char const*)
00075e90 t CUtlString::Trim(char)
00075ec0 t CUtlString::Trim(char const*)
000755a0 t CUtlString::Clear()
000755c0 t CUtlString::Purge()
00076910 t CUtlString::Append(char const*)
00076920 t CUtlString::Append(char const*, int)
00075b50 t CUtlString::Format(char const*, ...)
00075ae0 t CUtlString::FormatV(char const*, char*)
00075680 t CUtlString::ToLower()
000756a0 t CUtlString::ToUpper()
000767a0 t CUtlString::PathJoin(char const*, char const*)
00075c00 t CUtlString::TrimLeft(char)
00075c90 t CUtlString::TrimLeft(char const*)
00075420 t CUtlString::SetDirect(char const*, int)
000754c0 t CUtlString::SetLength(int)
00075d70 t CUtlString::TrimRight(char)
00075df0 t CUtlString::TrimRight(char const*)
00075710 t CUtlString::operator=(char const*)
000756c0 t CUtlString::operator=(CUtlString const&)
00076a20 t CUtlString::~CUtlString()
00076a20 t CUtlString::~CUtlString()
00075890 t CUtlString::operator+=(char)
00075940 t CUtlString::operator+=(double)
000758e0 t CUtlString::operator+=(int)
00075820 t CUtlString::operator+=(char const*)
000757a0 t CUtlString::operator+=(CUtlString const&)
000773b0 t CUtlSymbol::Initialize()
001b25c0 b CUtlSymbol::s_pSymbolTable
00076ba0 t CUtlSymbol::DisableStaticSymbolTable()
001aed00 d CUtlSymbol::s_bAllowStaticSymbolTable
000774c0 t CUtlSymbol::CurrTable()
00077800 t CUtlSymbol::CUtlSymbol(char const*)
00077800 t CUtlSymbol::CUtlSymbol(char const*)
0006c640 t CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
0004c390 t CUtlVector<CUtlSymbol, CUtlMemory<CUtlSymbol, int> >::InsertBefore(int, CUtlSymbol const&)
00031290 t CUtlVector<CPhysicsCollisionSet, CUtlMemory<CPhysicsCollisionSet, int> >::InsertBefore(int)
00051f70 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::InsertBefore(int, postrestore_objectlist_t const&)
000520b0 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
000520b0 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
0004c490 t CUtlVector<CSurface, CUtlMemory<CSurface, int> >::InsertBefore(int, CSurface const&)
00149780 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
00149780 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
00030b40 t CUtlVector<int, CUtlMemory<int, int> >::GrowVector(int)
00030c50 t CUtlVector<int, CUtlMemory<int, int> >::EnsureCount(int)
00030ca0 t CUtlVector<int, CUtlMemory<int, int> >::InsertBefore(int, int const&)
00030c00 t CUtlVector<int, CUtlMemory<int, int> >::ShiftElementsRight(int, int)
00030b10 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
00030b10 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
000438f0 t CUtlVector<CCollisionSolver::realobjectpair_t, CUtlMemory<CCollisionSolver::realobjectpair_t, int> >::InsertBefore(int, CCollisionSolver::realobjectpair_t const&)
0006de50 t CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >::InsertBefore(int, memhandle_t__* const&)
00043650 t CUtlVector<CPhysicsObject*, CUtlMemory<CPhysicsObject*, int> >::InsertBefore(int, CPhysicsObject* const&)
00043260 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::FastRemove(int)
000437f0 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::InsertBefore(int, IPhysicsObject* const&)
00043a40 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
00043a40 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
00043550 t CUtlVector<IDeleteQueueItem*, CUtlMemory<IDeleteQueueItem*, int> >::InsertBefore(int, IDeleteQueueItem* const&)
0003e660 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::InsertBefore(int, CPhysicsConstraintGroup* const&)
0003e790 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
0003e790 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
00043b80 t CUtlVector<IPhysicsPlayerController*, CUtlMemory<IPhysicsPlayerController*, int> >::InsertBefore(int, IPhysicsPlayerController* const&)
00043290 t CUtlVector<IPhysicsPlayerController*, CUtlMemory<IPhysicsPlayerController*, int> >::FindAndRemove(IPhysicsPlayerController* const&)
0004d520 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::InsertBefore(int, IVP_Core* const&)
0004d620 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::ShiftElementsLeft(int, int)
00072410 t CUtlVector<char*, CUtlMemory<char*, int> >::InsertBefore(int, char* const&)
00078030 t CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::InsertBefore(int, CUtlSymbolTable::StringPool_t* const&)
0006dab0 t CUtlVector<void*, CUtlMemory<void*, int> >::InsertBefore(int, void* const&)
0006df90 t CUtlVector<void*, CUtlMemory<void*, int> >::~CUtlVector()
0006df90 t CUtlVector<void*, CUtlMemory<void*, int> >::~CUtlVector()
00063520 t CVisitHash::CVisitHash()
00063520 t CVisitHash::CVisitHash()
         U CVProfNode::EnterScope()
         U CVProfNode::GetSubNode(char const*, int, char const*, int)
         U CVProfNode::ExitScope()
0014cff0 t hk_Console::get_instance()
001afa40 d hk_Console::m_default_console_buffer
0014cfd0 t hk_Console::exit(int)
0014cfb0 t hk_Console::flush()
0014cf80 t hk_Console::printf(char const*, ...)
001bfdb0 b hk_Console::m_console
0007fa60 t hk_Link_EF::get_controller_name()
0007fa50 t hk_Link_EF::get_controller_priority()
0007fa70 t hk_Link_EF::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0007fa90 t hk_Link_EF::anchor_will_be_deleted_event(IVP_Anchor*)
0007fa40 t hk_Link_EF::get_associated_controlled_cores()
0007fab0 t hk_Link_EF::core_is_going_to_be_deleted_event(IVP_Core*)
0007fb30 t hk_Link_EF::~hk_Link_EF()
0007fae0 t hk_Link_EF::~hk_Link_EF()
0007fae0 t hk_Link_EF::~hk_Link_EF()
00095be0 t hk_Matrix3::set_diagonal(float, float, float)
00096030 t hk_Matrix3::set_mul3_inv(hk_Rotation const&, hk_Matrix3 const&)
00095f80 t hk_Matrix3::set_mul3_inv2(hk_Matrix3 const&, hk_Rotation const&)
00095e60 t hk_Matrix3::set_cross_skew(hk_Vector3 const&, hk_Matrix3 const&)
00095b00 t hk_Matrix3::set_identity_rotation()
000962f0 t hk_Matrix3::set_rotated_diagonal_matrix(hk_Rotation const&, hk_Vector3 const&)
00095c30 t hk_Matrix3::invert(float)
00096170 t hk_Matrix3::rotate(int, float)
00095a90 t hk_Matrix3::set_cols(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00095ee0 t hk_Matrix3::set_mul3(hk_Matrix3 const&, hk_Matrix3 const&)
00095a20 t hk_Matrix3::set_rows(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00095ba0 t hk_Matrix3::set_zero()
00095e10 t hk_Matrix3::transpose()
00096120 t hk_Matrix3::operator-=(hk_Matrix3 const&)
000960d0 t hk_Matrix3::operator+=(hk_Matrix3 const&)
00096e30 t hk_Vector3::set_rotated_dir(hk_Rotation const&, hk_Vector3 const&)
00096ec0 t hk_Vector3::set_rotated_inv_dir(hk_Rotation const&, hk_Vector3 const&)
00096cf0 t hk_Vector3::set_transformed_pos(hk_Transform const&, hk_Vector3 const&)
00096d90 t hk_Vector3::set_transformed_inv_pos(hk_Transform const&, hk_Vector3 const&)
000dabe0 t IVP_Anchor::init_anchor(IVP_Actuator*, IVP_Template_Anchor*)
000dc6b0 t IVP_Anchor::get_next_anchor()
000dc6c0 t IVP_Anchor::get_prev_anchor()
000dc6d0 t IVP_Anchor::anchor_get_real_object()
000db580 t IVP_Anchor::object_is_going_to_be_deleted_event(IVP_Real_Object*)
000dc6a0 t IVP_Anchor::IVP_Anchor()
000dc6a0 t IVP_Anchor::IVP_Anchor()
000db560 t IVP_Anchor::~IVP_Anchor()
000db560 t IVP_Anchor::~IVP_Anchor()
00106410 t IVP_Object::to_cluster()
001050f0 t IVP_Object::init(IVP_Environment*)
00106430 t IVP_Object::to_ball()
00106400 t IVP_Object::to_poly()
00106420 t IVP_Object::to_real()
001063c0 t IVP_Object::set_type(IVP_OBJECT_TYPE)
00104eb0 t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
001050b0 t IVP_Object::IVP_Object(IVP_Environment*)
00104eb0 t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
001050b0 t IVP_Object::IVP_Object(IVP_Environment*)
00103d10 t IVP_Object::~IVP_Object()
00103cb0 t IVP_Object::~IVP_Object()
00103cb0 t IVP_Object::~IVP_Object()
0011d140 t IVP_U_Quat::get_angles(IVP_U_Float_Point*)
0011e150 t IVP_U_Quat::invert_quat()
0011dd90 t IVP_U_Quat::normize_quat()
0011e430 t IVP_U_Quat::set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
0011d800 t IVP_U_Quat::set_quaternion(double const (*) [4])
0011de20 t IVP_U_Quat::set_quaternion(IVP_U_Matrix3 const*)
0011e640 t IVP_U_Quat::set_invert_mult(IVP_U_Quat const*, IVP_U_Quat const*)
0011e020 t IVP_U_Quat::fast_normize_quat()
0011e530 t IVP_U_Quat::set_div_unit_quat(IVP_U_Quat const*, IVP_U_Quat const*)
0011d1d0 t IVP_U_Quat::set_fast_multiple(IVP_U_Point const*, double)
0011ad20 t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Float_Quat const*)
0011ac20 t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
0011ae30 t IVP_U_Quat::normize_correct_step(int)
0011e1e0 t IVP_U_Quat::set_invert_unit_quat(IVP_U_Quat const*)
0011dcb0 t IVP_U_Quat::set_interpolate_linear(IVP_U_Quat const*, IVP_U_Quat const*, double)
0011d2b0 t IVP_U_Quat::set_very_fast_multiple(IVP_U_Float_Point const*, double)
0011d9e0 t IVP_U_Quat::set_interpolate_smoothly(IVP_U_Quat const*, IVP_U_Quat const*, double)
0011e230 t IVP_U_Quat::set_from_rotation_vectors(double, double, double, double, double, double)
0011d390 t IVP_U_Quat::set_fast_multiple_with_clip(IVP_U_Float_Point const*, double)
0011d4d0 t IVP_U_Quat::set(double, double, double)
0011aba0 t IVP_U_Quat::init()
0011a240 t IVP_U_Quat::byte_swap()
0011a230 t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
0011a200 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
0011a1f0 t IVP_U_Quat::IVP_U_Quat()
0011a230 t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
0011a200 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
0011a1f0 t IVP_U_Quat::IVP_U_Quat()
00146a50 t CPolyhedron::Center()
00149720 t CPolyhedron::~CPolyhedron()
001496e0 t CPolyhedron::~CPolyhedron()
001496e0 t CPolyhedron::~CPolyhedron()
00149c60 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&)
00096a40 t hk_Rotation::set_axis_angle(hk_Vector3 const&, float)
00096940 t hk_Rotation::set(hk_Quaternion const&)
00105220 t IVP_Cluster::add_object(IVP_Object*)
00105250 t IVP_Cluster::remove_object(IVP_Object*)
00106450 t IVP_Cluster::get_next_object_in_cluster(IVP_Object*)
00106440 t IVP_Cluster::get_first_object_of_cluster()
001051e0 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
001051a0 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
001051e0 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
001051a0 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
00103d70 t IVP_Cluster::~IVP_Cluster()
00103d30 t IVP_Cluster::~IVP_Cluster()
00103d30 t IVP_Cluster::~IVP_Cluster()
001240b0 t IVP_Mindist::init_mindist(IVP_Real_Object*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_Compact_Edge const*)
00125770 t IVP_Mindist::is_recursive()
00125a40 t IVP_Mindist::get_coll_dist()
0012a4f0 t IVP_Mindist::recalc_mindist()
00125a70 t IVP_Mindist::get_environment()
0012a1b0 t IVP_Mindist::mindist_rescue_push()
00123c20 t IVP_Mindist::simulate_time_event(IVP_Environment*)
00122e90 t IVP_Mindist::hull_manager_is_reset(float, float)
0012a3b0 t IVP_Mindist::recalc_invalid_mindist()
00123210 t IVP_Mindist::exact_mindist_went_invalid(IVP_Mindist_Manager*)
00123690 t IVP_Mindist::update_exact_mindist_events(IVP_BOOL, IVP_MINDIST_EVENT_HINT)
00122ec0 t IVP_Mindist::create_cp_in_advance_pretension(IVP_Real_Object*, float)
000ff1d0 t IVP_Mindist::try_to_generate_managed_friction(IVP_Friction_System**, IVP_BOOL*, IVP_Simulation_Unit*, IVP_BOOL)
001242f0 t IVP_Mindist::mindist_hull_limit_exceeded_event(float)
00122250 t IVP_Mindist::print(char const*)
00100b70 t IVP_Mindist::do_impact()
00122200 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
00122200 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
00123440 t IVP_Mindist::~IVP_Mindist()
00123310 t IVP_Mindist::~IVP_Mindist()
00123310 t IVP_Mindist::~IVP_Mindist()
00120410 t IVP_OV_Node::IVP_OV_Node()
00120410 t IVP_OV_Node::IVP_OV_Node()
00120450 t IVP_OV_Node::~IVP_OV_Node()
00120450 t IVP_OV_Node::~IVP_OV_Node()
00108d40 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00108d40 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00108e00 t IVP_Polygon::~IVP_Polygon()
00108de0 t IVP_Polygon::~IVP_Polygon()
00108de0 t IVP_Polygon::~IVP_Polygon()
00125820 t IVP_Synapse::get_object()
00125880 t IVP_Synapse::init_synapse_real(IVP_Mindist_Base*, IVP_Real_Object*)
00125860 t IVP_Synapse::set_synapse_mindist(IVP_Mindist_Base*)
00121e70 t IVP_Synapse::hull_manager_is_reset(float, float)
001247a0 t IVP_Synapse::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
00121ea0 t IVP_Synapse::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
001256f0 t IVP_Synapse::get_type()
00125790 t IVP_Synapse::~IVP_Synapse()
00125700 t IVP_Synapse::~IVP_Synapse()
00125700 t IVP_Synapse::~IVP_Synapse()
00115ee0 t IVP_U_Hesse::calc_hesse(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00115fc0 t IVP_U_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00115ea0 t IVP_U_Hesse::mult_hesse(double)
00115e60 t IVP_U_Hesse::calc_hesse_val(IVP_U_Point const*)
001160b0 t IVP_U_Hesse::normize()
00119f80 t IVP_U_Hesse::byte_swap()
00113d70 t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
00113e00 t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00113d70 t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
00113e00 t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00114cf0 t IVP_U_Point::fast_normize()
00116f60 t IVP_U_Point::set_crossing(IVP_U_Hesse*, IVP_U_Hesse*, IVP_U_Hesse*)
00114b50 t IVP_U_Point::set_interpolate(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
00114ae0 t IVP_U_Point::set_interpolate(IVP_U_Point const*, IVP_U_Point const*, double)
00119b60 t IVP_U_Point::calc_an_orthogonal(IVP_U_Point const*)
00115300 t IVP_U_Point::calc_cross_product(IVP_U_Point const*, IVP_U_Point const*)
001151b0 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Float_Point const*)
00115130 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Point const*)
00114d80 t IVP_U_Point::real_length_plus_normize()
00115430 t IVP_U_Point::solve_quadratic_equation_fast(IVP_U_Point const*)
00115520 t IVP_U_Point::solve_quadratic_equation_accurate(IVP_U_Point const*)
00115790 t IVP_U_Point::print(char const*)
00115920 t IVP_U_Point::rotate(IVP_COORDINATE_INDEX, float)
00115050 t IVP_U_Point::normize()
001158f0 t IVP_U_Point::line_max(IVP_U_Point const*)
001158c0 t IVP_U_Point::line_min(IVP_U_Point const*)
00119de0 t IVP_U_Point::byte_swap()
00119db0 t IVP_U_Point::IVP_U_Point(double, double, double)
0011b640 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
00119da0 t IVP_U_Point::IVP_U_Point()
00119db0 t IVP_U_Point::IVP_U_Point(double, double, double)
0011b640 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
00119da0 t IVP_U_Point::IVP_U_Point()
0005bc90 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::GetRealSize(void*)
0005bca0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::DestroyResourceStorage(void*)
0005be40 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Lock()
0005beb0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Unlock()
0005bd60 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::TryLock()
0005bdf0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
0005bdc0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
0005bdc0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
00042260 t CDeleteProxy<IPhysicsConstraint>::Delete()
00042310 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
00042250 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
00042250 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
0006c570 t CEmptyConVar::SetValue(float)
0006c590 t CEmptyConVar::SetValue(int)
0006c550 t CEmptyConVar::SetValue(char const*)
0006c610 t CEmptyConVar::~CEmptyConVar()
0006c5f0 t CEmptyConVar::~CEmptyConVar()
0006c5f0 t CEmptyConVar::~CEmptyConVar()
000385d0 t CPhysCollide::SetOrthographicAreas(Vector const&)
00037b00 t CPhysCollide::UnserializeFromBuffer(char const*, unsigned int, int, bool)
000385c0 t CPhysCollide::ComputeOrthographicAreas(float)
000386b0 t CPhysCollide::~CPhysCollide()
00038640 t CPhysCollide::~CPhysCollide()
00038640 t CPhysCollide::~CPhysCollide()
         U CThreadEvent::Set()
         U CThreadEvent::CThreadEvent(bool)
00060ec0 t CTraceSolver::SweepSingleConvex()
00060b10 t CTraceSolver::SolveMeshIntersection(simplex_t&)
00062650 t CTraceSolver::SolveMeshIntersection2D(simplex_t&)
00065400 t CTraceSolver::DoSweep()
0007a430 t (anonymous namespace)::Q_UTF32ToUChar32(wchar_t const*, wchar_t&, bool&) [clone .constprop.15]
0007a490 t int (anonymous namespace)::Q_UnicodeConvertT<wchar_t, wchar_t, true, (anonymous namespace)::Q_UTF32ToUChar32(wchar_t const*, wchar_t&, bool&), (anonymous namespace)::Q_UChar32ToUTF32Len(wchar_t), (anonymous namespace)::Q_UChar32ToUTF32(wchar_t, wchar_t*)>(wchar_t const*, int, wchar_t*, int, EStringConvertErrorPolicy) [clone .isra.1]
00096ad0 t hk_Transform::set_transform(hk_Quaternion const&, hk_Vector3 const&)
00096c40 t hk_Transform::set_interpolate(hk_QTransform&, hk_QTransform&, float)
00096bb0 t hk_Transform::set_identity_transform()
00096b20 t hk_Transform::set_cols4(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00096a80 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
00096a80 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
001b0f50 b InterfaceReg::s_pInterfaceRegs
0006e390 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
0006e390 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
00038690 t IPhysCollide::~IPhysCollide()
00038570 t IPhysCollide::~IPhysCollide()
00038570 t IPhysCollide::~IPhysCollide()
000dc610 t IVP_Actuator::get_controller_name()
000dc600 t IVP_Actuator::get_controller_priority()
000d9740 t IVP_Actuator::anchor_will_be_deleted_event(IVP_Anchor*)
000dc5f0 t IVP_Actuator::get_associated_controlled_cores()
000d9760 t IVP_Actuator::core_is_going_to_be_deleted_event(IVP_Core*)
000dad10 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
000dad10 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
000da2b0 t IVP_Actuator::~IVP_Actuator()
000da260 t IVP_Actuator::~IVP_Actuator()
000da260 t IVP_Actuator::~IVP_Actuator()
000d7440 t IVP_KK_Input::calc_quad_distance_edge_edge()
000d63f0 t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
000d63f0 t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0010fca0 t IVP_Material::IVP_Material()
0010fca0 t IVP_Material::IVP_Material()
0010fab0 t IVP_Material::~IVP_Material()
0010f940 t IVP_Material::~IVP_Material()
0010f940 t IVP_Material::~IVP_Material()
000b59a0 t IVP_Triangle::calc_hesse()
000b59e0 t IVP_Triangle::calc_areasize()
000b5a40 t IVP_Triangle::print(char const*)
000b8080 t IVP_Triangle::IVP_Triangle()
000b8080 t IVP_Triangle::IVP_Triangle()
000b5750 t IVP_Triangle::~IVP_Triangle()
000b5740 t IVP_Triangle::~IVP_Triangle()
000b5740 t IVP_Triangle::~IVP_Triangle()
000b5a50 t IVP_Tri_Edge::other_side()
000b5b20 t IVP_Tri_Edge::check_concavity(IVP_Tri_Edge*)
000b5b00 t IVP_Tri_Edge::p()
000bab10 t IVP_Tri_Edge::search_nearest_edge_to(IVP_U_Point*, double*)
000b5a80 t IVP_Tri_Edge::print(char const*)
00116eb0 t IVP_U_Matrix::init_rows4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
0011a150 t IVP_U_Matrix::set_matrix(IVP_U_Matrix const*)
00116450 t IVP_U_Matrix::interpolate(IVP_U_Matrix const*, IVP_U_Matrix const*, double)
001164d0 t IVP_U_Matrix::real_invert(double)
00116a50 t IVP_U_Matrix::real_invert(IVP_U_Matrix const*, double)
0011a130 t IVP_U_Matrix::get_position()
00117e90 t IVP_U_Matrix::init_columns4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00118bc0 t IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
00118e70 t IVP_U_Matrix::set_transpose(IVP_U_Matrix const*)
00119700 t IVP_U_Matrix::write_to_file(_IO_FILE*, char const*)
00119910 t IVP_U_Matrix::read_from_file(_IO_FILE*)
00119af0 t IVP_U_Matrix::quad_distance_to(IVP_U_Matrix const*)
00117f40 t IVP_U_Matrix::init_rot_multiple(IVP_U_Point const*, double)
001169f0 t IVP_U_Matrix::init()
00119840 t IVP_U_Matrix::print(char const*)
00116a80 t IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
00119660 t IVP_U_Matrix::shift_os(IVP_U_Point const*)
00119620 t IVP_U_Matrix::shift_ws(IVP_U_Point const*)
0011a170 t IVP_U_Matrix::byte_swap()
00118cb0 t IVP_U_Matrix::transpose()
0011c1f0 t IVP_U_Memory::neuer_sp_block(unsigned int)
0011c420 t IVP_U_Memory::get_mem_transaction(unsigned int)
0011c3b0 t IVP_U_Memory::align_to_next_adress(void*)
0011c180 t IVP_U_Memory::free_mem_transaction()
0011c3c0 t IVP_U_Memory::end_memory_transaction()
0011c3a0 t IVP_U_Memory::start_memory_transaction()
0011c240 t IVP_U_Memory::init_mem_transaction_usage(char*, int)
0011c3f0 t IVP_U_Memory::get_mem(unsigned int)
0011c340 t IVP_U_Memory::free_mem()
0011c2b0 t IVP_U_Memory::get_memc(unsigned int)
0011c320 t IVP_U_Memory::init_mem()
0011c300 t IVP_U_Memory::IVP_U_Memory()
0011c300 t IVP_U_Memory::IVP_U_Memory()
0011c390 t IVP_U_Memory::~IVP_U_Memory()
0011c390 t IVP_U_Memory::~IVP_U_Memory()
0009ae40 t IVP_U_Vector<IVV_Sphere>::clear()
00097460 t IVP_U_Vector<IVP_U_Hesse>::clear()
00038780 t IVP_U_Vector<IVP_U_Point>::clear()
0009cfb0 t IVP_U_Vector<IVP_Triangle>::clear()
000ec6a0 t IVP_U_Vector<IVP_Controller>::clear()
000ec660 t IVP_U_Vector<IVP_Real_Object>::clear()
00108cc0 t IVP_U_Vector<IVP_Listener_Object>::clear()
000dd7c0 t IVP_U_Vector<IVP_Listener_Spring>::clear()
000ef550 t IVP_U_Vector<IVP_Hull_Manager_Base>::clear()
00108d00 t IVP_U_Vector<IVP_Listener_Collision>::clear()
000dc770 t IVP_U_Vector<IVP_Core>::clear()
0010ad00 t IVP_U_Vector<IVP_Core>::~IVP_U_Vector()
0010ad00 t IVP_U_Vector<IVP_Core>::~IVP_U_Vector()
0005a760 t CMeshInstance::EstimatedSize(virtualmeshlist_t const&)
0005a9d0 t CMeshInstance::CreateResource(virtualmeshlist_t const&)
0005a7d0 t CMeshInstance::ComputeRootLedgeSize(unsigned char const*)
0005a810 t CMeshInstance::Init(virtualmeshlist_t const&)
0005a730 t CMeshInstance::~CMeshInstance()
0005a730 t CMeshInstance::~CMeshInstance()
000644c0 t CPhysicsTrace::SweepBoxIVP(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00064730 t CPhysicsTrace::SweepBoxIVP(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00063150 t CPhysicsTrace::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
00062930 t CPhysicsTrace::GetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
000648f0 t CPhysicsTrace::SweepIVP(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00062e90 t CPhysicsTrace::GetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
00063500 t CPhysicsTrace::CPhysicsTrace()
00063500 t CPhysicsTrace::CPhysicsTrace()
00063510 t CPhysicsTrace::~CPhysicsTrace()
00063510 t CPhysicsTrace::~CPhysicsTrace()
00037770 t CPhysPolysoup::CPhysPolysoup()
00037770 t CPhysPolysoup::CPhysPolysoup()
00042330 t CSleepObjects::event_object_frozen(IVP_Event_Object*)
00041ba0 t CSleepObjects::event_object_created(IVP_Event_Object*)
00042b10 t CSleepObjects::event_object_deleted(IVP_Event_Object*)
00043750 t CSleepObjects::event_object_revived(IVP_Event_Object*)
00043e50 t CSleepObjects::~CSleepObjects()
00043e10 t CSleepObjects::~CSleepObjects()
00043e10 t CSleepObjects::~CSleepObjects()
         U CThreadRWLock::UnlockWrite()
         U CThreadRWLock::WaitForRead()
         U CThreadRWLock::LockForWrite()
0007a190 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoInsertUnconstructed(unsigned int, bool)
0007a010 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::BumpEntry(unsigned int)
0007a2a0 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoRealloc(int)
00078270 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::RemoveAll()
0006e0a0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CreateList()
0006dbb0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
0006dc90 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::InsertBefore(unsigned short, unsigned short)
0006d9e0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Unlink(unsigned short, unsigned short)
0006d880 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
0006d880 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
00048970 t CUtlMultiList<void*, unsigned short>::CreateList()
00043d50 t CUtlMultiList<void*, unsigned short>::Remove(unsigned short, unsigned short)
00043c80 t CUtlMultiList<void*, unsigned short>::Unlink(unsigned short, unsigned short)
00043330 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
00043330 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
00042790 t CVoidPairHash::~CVoidPairHash()
00042770 t CVoidPairHash::~CVoidPairHash()
00042770 t CVoidPairHash::~CVoidPairHash()
00093720 t hk_Array_Base::grow_mem(int)
000937d0 t hk_Array_Base::grow_mem(int, int)
000936e0 t hk_Array_Base::alloc_mem(int, int)
000823e0 t hk_Constraint::get_constraint_dof()
000823d0 t hk_Constraint::get_constraint_type()
00082360 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
00082360 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
00082320 t hk_Constraint::~hk_Constraint()
000822f0 t hk_Constraint::~hk_Constraint()
000822f0 t hk_Constraint::~hk_Constraint()
000965a0 t hk_Quaternion::set_axis_angle(hk_Vector3 const&, float)
000963a0 t hk_Quaternion::set(hk_Rotation const&)
00096610 t hk_Quaternion::set_slerp(hk_Quaternion const&, hk_Quaternion const&, float)
00138a10 t IVP_3D_Solver::calc_nullstelle(IVP_Time, IVP_Time, double, double, double, IVP_Real_Object*, IVP_Real_Object*)
00139430 t IVP_3D_Solver::set_max_deviation(double)
00138f50 t IVP_3D_Solver::find_first_t_for_value_coll(double, double, IVP_Time, IVP_Time, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, double*, IVP_Time*)
00138c60 t IVP_3D_Solver::find_first_t_for_value_max_dev(double, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, double*, IVP_Time*)
00138f40 t IVP_3D_Solver::find_first_t_for_value_max_dev2(double, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, double*, IVP_Time*)
000d4d50 t IVP_CFEP_Hash::pair_to_index(IVP_CFEP_Objectpair*)
000d4d80 t IVP_CFEP_Hash::add(IVP_CFEP_Objectpair*)
000d4e20 t IVP_CFEP_Hash::find(IVP_CFEP_Objectpair*)
000d4dd0 t IVP_CFEP_Hash::remove(IVP_CFEP_Objectpair*)
000d4eb0 t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
000d4eb0 t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
000d4bd0 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
000d4b50 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
000d4b50 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
00121cb0 t IVP_Collision::set_fvector_index(int, int)
00121c00 t IVP_Collision::delegator_is_going_to_be_deleted_event(IVP_Collision_Delegator*)
00121ce0 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
00121ce0 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
00121c60 t IVP_Collision::~IVP_Collision()
00121c20 t IVP_Collision::~IVP_Collision()
00121c20 t IVP_Collision::~IVP_Collision()
00108c70 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*)
00108c30 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*, double)
00108c70 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*)
00108c30 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*, double)
000e4d70 t IVP_MI_Vector::add_multiple(IVP_MI_Vector const*, float)
000e5140 t IVP_MI_Vector::set_time_stamp(IVP_Time)
000e5ed0 t IVP_MI_Vector::malloc_mi_vector(int)
000e5fc0 t IVP_MI_Vector::malloc_and_set_mi_vector(int, float*)
000e4c70 t IVP_MI_Vector::add(IVP_MI_Vector const*)
000e6100 t IVP_MI_Vector::set(int, float)
000e4a90 t IVP_MI_Vector::set(IVP_MI_Vector const*)
000e4e80 t IVP_MI_Vector::mult(float)
000e4b70 t IVP_MI_Vector::subtract(IVP_MI_Vector const*)
00117890 t IVP_U_Matrix3::get_angles(float*, float*, float*)
001176b0 t IVP_U_Matrix3::init_rows3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00118d90 t IVP_U_Matrix3::transpose3()
00117790 t IVP_U_Matrix3::orthogonize()
001167e0 t IVP_U_Matrix3::real_invert(double)
00117870 t IVP_U_Matrix3::orthonormize()
00117720 t IVP_U_Matrix3::init_columns3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00116df0 t IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)
00118de0 t IVP_U_Matrix3::set_transpose3(IVP_U_Matrix3 const*)
00115ad0 t IVP_U_Matrix3::calc_eigen_vector(double, IVP_U_Point*)
00117060 t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX)
00117370 t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
001171e0 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX)
00117510 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
00119a30 t IVP_U_Matrix3::quad_rot_distance_to(IVP_U_Matrix3 const*)
00116a20 t IVP_U_Matrix3::init3()
00115a80 t IVP_U_Matrix3::normize()
0011b5d0 t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Point const*)
0011b600 t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
0011b560 t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Point const*)
0011b590 t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
0011a0b0 t IVP_U_Matrix3::set_elem(int, int, double)
0011a0d0 t IVP_U_Matrix3::byte_swap()
000ea8f0 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
000ea8f0 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
000b5df0 t P_Sur_2D_Line::has_points(P_Sur_2D_Point*, P_Sur_2D_Point*)
000b5e50 t P_Sur_2D_Line::dist_to_point(IVP_U_Point*)
000b6130 t P_Sur_2D_Line::is_crossing_line(P_Sur_2D_Line*)
000b6020 t P_Sur_2D_Line::overlaps_with_line(P_Sur_2D_Line*)
000b5ef0 t P_Sur_2D_Line::hesse_dist_to_point(IVP_U_Point*)
000b5f30 t P_Sur_2D_Line::point_lies_in_interval(IVP_U_Point*)
000b5da0 t P_Sur_2D_Line::point_lies_to_the_left(IVP_U_Point*)
000b5d40 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
000b5d40 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
000b5d90 t P_Sur_2D_Line::~P_Sur_2D_Line()
000b5d90 t P_Sur_2D_Line::~P_Sur_2D_Line()
000311a0 t CBaseAppSystem<IPhysics>::Disconnect()
00031180 t CBaseAppSystem<IPhysics>::QueryInterface(char const*)
000311b0 t CBaseAppSystem<IPhysics>::Init()
00031190 t CBaseAppSystem<IPhysics>::Connect(void* (*)(char const*, int*))
000311c0 t CBaseAppSystem<IPhysics>::Shutdown()
000650b0 t CDefConvexInfo::GetContents(int)
0006b2e0 t ConCommandBase::CopyString(char const*)
0006a820 t ConCommandBase::CreateBase(char const*, char const*, int)
001b0d60 b ConCommandBase::s_pAccessor
001b0d70 b ConCommandBase::s_pConCommandBases
0006a880 t ConCommandBase::Init()
0006b2d0 t ConCommandBase::GetNext()
0006a8d0 t ConCommandBase::AddFlags(int)
0006b290 t ConCommandBase::Shutdown()
0006b270 t ConCommandBase::ConCommandBase(char const*, char const*, int)
0006b240 t ConCommandBase::ConCommandBase()
0006b270 t ConCommandBase::ConCommandBase(char const*, char const*, int)
0006b240 t ConCommandBase::ConCommandBase()
0006aa90 t ConCommandBase::~ConCommandBase()
0006a7f0 t ConCommandBase::~ConCommandBase()
0006a7f0 t ConCommandBase::~ConCommandBase()
0004f8d0 t CPhysicsObject::EnableDrag(bool)
00050480 t CPhysicsObject::NotifyWake()
0004daa0 t CPhysicsObject::SetDamping(float const*, float const*)
0004e080 t CPhysicsObject::SetInertia(Vector const&)
0004fdf0 t CPhysicsObject::AddVelocity(Vector const*, Vector const*)
00050450 t CPhysicsObject::NotifySleep()
0004db00 t CPhysicsObject::SetContents(unsigned int)
0004d940 t CPhysicsObject::SetGameData(void*)
0004e770 t CPhysicsObject::SetPosition(Vector const&, QAngle const&, bool)
00050000 t CPhysicsObject::SetVelocity(Vector const*, Vector const*)
0004eb50 t CPhysicsObject::BecomeHinged(int)
0004f4a0 t CPhysicsObject::EnableMotion(bool)
0004ec30 t CPhysicsObject::RemoveHinged()
0004d780 t CPhysicsObject::SetGameFlags(unsigned short)
0004d7a0 t CPhysicsObject::SetGameIndex(unsigned short)
0004db10 t CPhysicsObject::UpdateShadow(Vector const&, QAngle const&, bool, float)
0004f9e0 t CPhysicsObject::BecomeTrigger()
00050b40 t CPhysicsObject::ClampVelocity()
0004fb70 t CPhysicsObject::ClampVelocity() [clone .part.29]
0004f430 t CPhysicsObject::EnableGravity(bool)
0004dd80 t CPhysicsObject::RemoveTrigger()
000512a0 t CPhysicsObject::WriteToTemplate(vphysics_save_cphysicsobject_t&)
0004fb90 t CPhysicsObject::ApplyForceCenter(Vector const&)
0004fc60 t CPhysicsObject::ApplyForceOffset(Vector const&, Vector const&)
0004f380 t CPhysicsObject::EnableCollisions(bool)
000514c0 t CPhysicsObject::InitFromTemplate(CPhysicsEnvironment*, void*, vphysics_save_cphysicsobject_t const&)
0004dae0 t CPhysicsObject::SetBuoyancyRatio(float)
0004d760 t CPhysicsObject::SetCallbackFlags(unsigned short)
0004f550 t CPhysicsObject::SetMaterialIndex(int)
0004fd50 t CPhysicsObject::ApplyTorqueCenter(Vector const&)
0004e890 t CPhysicsObject::SetPositionMatrix(matrix3x4_t const&, bool)
00050520 t CPhysicsObject::RecomputeDragBases()
0004d8e0 t CPhysicsObject::SetDragCoefficient(float*, float*)
0004eb40 t CPhysicsObject::ComputeShadowControl(hlshadowcontrol_params_t const&, float, float)
0004d7e0 t CPhysicsObject::RecheckContactPoints()
0004e050 t CPhysicsObject::CreateFrictionSnapshot()
00050490 t CPhysicsObject::GetVPhysicsEnvironment()
0004dfa0 t CPhysicsObject::RecheckCollisionFilter()
0004dbb0 t CPhysicsObject::RemoveShadowController()
0004e070 t CPhysicsObject::DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
00050ba0 t CPhysicsObject::RestoreShadowController(IPhysicsShadowController*)
0004fee0 t CPhysicsObject::SetVelocityInstantaneous(Vector const*, Vector const*)
00050820 t CPhysicsObject::Init(CPhysCollide const*, IVP_Real_Object*, int, float, float, float)
0004df60 t CPhysicsObject::Wake()
0004df80 t CPhysicsObject::Sleep()
00050960 t CPhysicsObject::SetMass(float)
0004f940 t CPhysicsObject::SetShadow(float, float, bool, bool)
00050af0 t CPhysicsObject::SetVolume(float)
0004fad0 t CPhysicsObject::SetVolume(float) [clone .part.27]
00050420 t CPhysicsObject::CPhysicsObject()
00050420 t CPhysicsObject::CPhysicsObject()
0004df40 t CPhysicsObject::~CPhysicsObject()
0004de20 t CPhysicsObject::~CPhysicsObject()
0004de20 t CPhysicsObject::~CPhysicsObject()
000562f0 t CPhysicsSpring::GetEndObject()
00055a30 t CPhysicsSpring::GetEndpoints(Vector*, Vector*)
00055cb0 t CPhysicsSpring::AttachListener()
00055d50 t CPhysicsSpring::DetachListener()
000562e0 t CPhysicsSpring::GetStartObject()
00055b80 t CPhysicsSpring::SetSpringLength(float)
00055e70 t CPhysicsSpring::WriteToTemplate(vphysics_save_cphysicsspring_t&)
00055b50 t CPhysicsSpring::SetSpringDamping(float)
00055b10 t CPhysicsSpring::SetSpringConstant(float)
00056340 t CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
00056300 t CPhysicsSpring::event_object_created(IVP_Event_Object*)
00055e50 t CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
00056320 t CPhysicsSpring::event_object_revived(IVP_Event_Object*)
00055d00 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
00055d00 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
00055e20 t CPhysicsSpring::~CPhysicsSpring()
00055dc0 t CPhysicsSpring::~CPhysicsSpring()
00055dc0 t CPhysicsSpring::~CPhysicsSpring()
000782c0 t CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::RemoveAll()
00048150 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00066120 t CVPhysicsParse::ParseFluid(fluid_t*, IVPhysicsKeyHandler*)
00065840 t CVPhysicsParse::ParseSolid(solid_t*, IVPhysicsKeyHandler*)
00067de0 t CVPhysicsParse::ParseCustom(void*, IVPhysicsKeyHandler*)
00067bd0 t CVPhysicsParse::ParseVehicle(vehicleparams_t*, IVPhysicsKeyHandler*)
00066a30 t CVPhysicsParse::ParseVehicleAxle(vehicle_axleparams_t&)
00066c40 t CVPhysicsParse::ParseVehicleBody(vehicle_bodyparams_t&)
00066420 t CVPhysicsParse::ParseSurfaceTable(int*, IVPhysicsKeyHandler*)
00066500 t CVPhysicsParse::ParseVehicleWheel(vehicle_wheelparams_t&)
00067130 t CVPhysicsParse::ParseVehicleEngine(vehicle_engineparams_t&)
00065540 t CVPhysicsParse::GetCurrentBlockName()
000675c0 t CVPhysicsParse::ParseVehicleSteering(vehicle_steeringparams_t&)
00065c80 t CVPhysicsParse::ParseRagdollConstraint(constraint_ragdollparams_t*, IVPhysicsKeyHandler*)
00066810 t CVPhysicsParse::ParseVehicleSuspension(vehicle_suspensionparams_t&)
00067fc0 t CVPhysicsParse::ParseSurfaceTablePacked(CUtlVector<char, CUtlMemory<char, int> >&)
00066f20 t CVPhysicsParse::ParseVehicleEngineBoost(vehicle_engineparams_t&)
00065560 t CVPhysicsParse::Finished()
000656f0 t CVPhysicsParse::NextBlock()
00068210 t CVPhysicsParse::SkipBlock()
000657b0 t CVPhysicsParse::CVPhysicsParse(char const*)
000657b0 t CVPhysicsParse::CVPhysicsParse(char const*)
00068260 t CVPhysicsParse::~CVPhysicsParse()
00068200 t CVPhysicsParse::~CVPhysicsParse()
00068200 t CVPhysicsParse::~CVPhysicsParse()
00051ec0 t IPhysicsObject::~IPhysicsObject()
00051dc0 t IPhysicsObject::~IPhysicsObject()
00051dc0 t IPhysicsObject::~IPhysicsObject()
00056360 t IPhysicsSpring::~IPhysicsSpring()
000562d0 t IPhysicsSpring::~IPhysicsSpring()
000562d0 t IPhysicsSpring::~IPhysicsSpring()
000de520 t IVP_Car_System::calc_ackerman_angle(float, float, float)
000df6e0 t IVP_Car_System::event_object_deleted(IVP_Event_Object*)
000df580 t IVP_Car_System::IVP_Car_System()
000df580 t IVP_Car_System::IVP_Car_System()
000ddac0 t IVP_Car_System::~IVP_Car_System()
000dda60 t IVP_Car_System::~IVP_Car_System()
000dda60 t IVP_Car_System::~IVP_Car_System()
0013ca60 t IVP_Constraint::deactivate()
0013ca10 t IVP_Constraint::get_environment()
0013c980 t IVP_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
0013c990 t IVP_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
0013c9a0 t IVP_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
0013c920 t IVP_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
0013c930 t IVP_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
0013c940 t IVP_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
0013c8e0 t IVP_Constraint::change_fixing_point_Ros(IVP_U_Point const*)
00135650 t IVP_Constraint::get_controller_priority()
0013c960 t IVP_Constraint::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
0013c9b0 t IVP_Constraint::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
0013c900 t IVP_Constraint::change_translation_axes_Ros(IVP_U_Matrix3 const*)
0013c950 t IVP_Constraint::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
0013c8f0 t IVP_Constraint::change_target_fixing_point_Ros(IVP_U_Point const*)
0013c9c0 t IVP_Constraint::change_Aos_to_relaxe_constraint()
0013c9d0 t IVP_Constraint::change_Ros_to_relaxe_constraint()
0013c970 t IVP_Constraint::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
00135660 t IVP_Constraint::get_associated_controlled_cores()
0013c850 t IVP_Constraint::get_minimum_simulation_frequency()
0013c830 t IVP_Constraint::core_is_going_to_be_deleted_event(IVP_Core*)
0013c910 t IVP_Constraint::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
0013ca20 t IVP_Constraint::activate()
0013c9e0 t IVP_Constraint::IVP_Constraint()
0013c9e0 t IVP_Constraint::IVP_Constraint()
0013c8c0 t IVP_Constraint::~IVP_Constraint()
0013c860 t IVP_Constraint::~IVP_Constraint()
0013c860 t IVP_Constraint::~IVP_Constraint()
00108a80 t IVP_Controller::reset_time(IVP_Time)
00108a90 t IVP_Controller::get_controller_name()
00108a70 t IVP_Controller::get_minimum_simulation_frequency()
00108a60 t IVP_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
00108b80 t IVP_Controller::~IVP_Controller()
00108aa0 t IVP_Controller::~IVP_Controller()
00108aa0 t IVP_Controller::~IVP_Controller()
000da8f0 t IVP_Extra_Info::IVP_Extra_Info()
000da8f0 t IVP_Extra_Info::IVP_Extra_Info()
001011f0 t IVP_Merge_Core::set_radius()
00101ad0 t IVP_Merge_Core::place_objects()
00100f90 t IVP_Merge_Core::find_main_axis()
00100d20 t IVP_Merge_Core::find_mass_center()
00100e20 t IVP_Merge_Core::find_damp_factors()
001019c0 t IVP_Merge_Core::synchronize_motion()
00101a30 t IVP_Merge_Core::check_for_unmovable_core()
00101bf0 t IVP_Merge_Core::calc_calc()
001012a0 t IVP_Merge_Core::set_speed()
00101960 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
00101940 t IVP_Merge_Core::IVP_Merge_Core()
00101960 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
00101940 t IVP_Merge_Core::IVP_Merge_Core()
00101990 t IVP_Merge_Core::~IVP_Merge_Core()
00101990 t IVP_Merge_Core::~IVP_Merge_Core()
0012c020 t IVP_OO_Watcher::get_ledges(IVP_Compact_Ledge const**)
0012c000 t IVP_OO_Watcher::get_objects(IVP_Real_Object**)
00125910 t IVP_OO_Watcher::get_synapse(int)
0012c240 t IVP_OO_Watcher::hull_limit_exceeded_event()
0012c040 t IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
0012c440 t IVP_OO_Watcher::hull_manager_is_going_to_be_deleted_event()
0012c460 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
0012c460 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
0012c210 t IVP_OO_Watcher::~IVP_OO_Watcher()
0012c140 t IVP_OO_Watcher::~IVP_OO_Watcher()
0012c140 t IVP_OO_Watcher::~IVP_OO_Watcher()
00120320 t IVP_OV_Element::add_oo_collision(IVP_Collision*)
00120230 t IVP_OV_Element::add_to_hull_manager(IVP_Hull_Manager*, double)
00120390 t IVP_OV_Element::remove_oo_collision(IVP_Collision*)
00120160 t IVP_OV_Element::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
00120140 t IVP_OV_Element::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
00120130 t IVP_OV_Element::get_type()
001201c0 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
001201c0 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
00121780 t IVP_OV_Element::~IVP_OV_Element()
001216f0 t IVP_OV_Element::~IVP_OV_Element()
001216f0 t IVP_OV_Element::~IVP_OV_Element()
000b5520 t IVP_point_hash::find_point(IVP_Poly_Point*)
000b54d0 t IVP_point_hash::remove_point(IVP_Poly_Point*)
000b5400 t IVP_point_hash::point_to_index(IVP_Poly_Point*)
000b5480 t IVP_point_hash::add_point(IVP_Poly_Point*)
000b55a0 t IVP_point_hash::IVP_point_hash(int)
000b55a0 t IVP_point_hash::IVP_point_hash(int)
000b5320 t IVP_point_hash::~IVP_point_hash()
000b5300 t IVP_point_hash::~IVP_point_hash()
000b5300 t IVP_point_hash::~IVP_point_hash()
000b5800 t IVP_Poly_Point::p()
000b57a0 t IVP_Poly_Point::print(char const*)
000b5770 t IVP_Poly_Point::point_num()
000d8bd0 t IVP_Ray_Solver::check_ray_against_ball(IVP_Ball*)
000d7b00 t IVP_Ray_Solver::check_ray_against_cube(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000d8ff0 t IVP_Ray_Solver::check_ray_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
000d8e70 t IVP_Ray_Solver::check_ray_against_object(IVP_Real_Object*)
000d7a50 t IVP_Ray_Solver::check_ray_against_square(float, float, IVP_U_Float_Point const*, IVP_U_Float_Point const*, int, int)
000d9390 t IVP_Ray_Solver::check_ray_against_all_objects_in_sim(IVP_Environment const*)
000d7910 t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
000d7910 t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
000d95d0 t IVP_Ray_Solver::~IVP_Ray_Solver()
000d9590 t IVP_Ray_Solver::~IVP_Ray_Solver()
000d9590 t IVP_Ray_Solver::~IVP_Ray_Solver()
0012c3d0 t IVP_Synapse_OO::init_synapse_oo(IVP_OO_Watcher*, IVP_Real_Object*)
0012c3b0 t IVP_Synapse_OO::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
0012bfd0 t IVP_Synapse_OO::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
00125750 t IVP_Synapse_OO::get_type()
00125900 t IVP_Synapse_OO::IVP_Synapse_OO()
00125900 t IVP_Synapse_OO::IVP_Synapse_OO()
0012c100 t IVP_Synapse_OO::~IVP_Synapse_OO()
0012c0d0 t IVP_Synapse_OO::~IVP_Synapse_OO()
0012c0d0 t IVP_Synapse_OO::~IVP_Synapse_OO()
000bac80 t IVP_Tetra_Edge::p()
000bac10 t IVP_Tetra_Edge::print(char const*)
0010d8d0 t IVP_Time_Event::simulate_time_event(IVP_Environment*)
0010d900 t IVP_Time_Event::IVP_Time_Event()
0010d900 t IVP_Time_Event::IVP_Time_Event()
0011c840 t IVP_U_Min_Hash::remove_min()
0011c7b0 t IVP_U_Min_Hash::change_value(void*, double)
0011c870 t IVP_U_Min_Hash::find_min_elem()
0011c890 t IVP_U_Min_Hash::find_min_value()
0011c520 t IVP_U_Min_Hash::min_added_at_index(IVP_U_Min_Hash_Elem*, int)
0011c570 t IVP_U_Min_Hash::min_removed_at_index(IVP_U_Min_Hash_Elem*, int)
0011c650 t IVP_U_Min_Hash::add(void*, double)
0011c710 t IVP_U_Min_Hash::remove(void*)
0011c450 t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
0011c450 t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
0011c4a0 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
0011c4a0 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
0011cfb0 t IVP_U_Min_List::has_elements()
0011cf90 t IVP_U_Min_List::find_min_elem()
0011cfd0 t IVP_U_Min_List::find_min_value()
0011cff0 t IVP_U_Min_List::prefetch0_minlist()
0011d000 t IVP_U_Min_List::prefetch1_minlist()
0011ce50 t IVP_U_Min_List::remove_minlist_elem(unsigned int)
0011ca60 t IVP_U_Min_List::add(void*, float)
0011cf40 t IVP_U_Min_List::check()
0011c990 t IVP_U_Min_List::IVP_U_Min_List(int)
0011c990 t IVP_U_Min_List::IVP_U_Min_List(int)
0011ca30 t IVP_U_Min_List::~IVP_U_Min_List()
0011ca30 t IVP_U_Min_List::~IVP_U_Min_List()
001142d0 t IVP_U_Straight::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*, double*)
00113f40 t IVP_U_Straight::set(IVP_U_Point const*, IVP_U_Point const*)
00113fc0 t IVP_U_Straight::set(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00113ec0 t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
00113ec0 t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
000b5d10 t P_Sur_2D_Point::P_Sur_2D_Point(int)
000b5d10 t P_Sur_2D_Point::P_Sur_2D_Point(int)
000b5d30 t P_Sur_2D_Point::~P_Sur_2D_Point()
000b5d30 t P_Sur_2D_Point::~P_Sur_2D_Point()
00035350 t CCollisionQuery::ConvexCount()
00035390 t CCollisionQuery::GetGameData(int)
00035360 t CCollisionQuery::TriangleCount(int)
000353c0 t CCollisionQuery::GetTriangleVerts(int, int, Vector*)
00035450 t CCollisionQuery::SetTriangleVerts(int, int, Vector const*)
00035460 t CCollisionQuery::GetTriangleMaterialIndex(int, int)
000354a0 t CCollisionQuery::SetTriangleMaterialIndex(int, int, int)
00037330 t CCollisionQuery::Triangle(IVP_Compact_Ledge*, int)
000384b0 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
000384b0 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
00038730 t CCollisionQuery::~CCollisionQuery()
000386e0 t CCollisionQuery::~CCollisionQuery()
000386e0 t CCollisionQuery::~CCollisionQuery()
00042170 t CDragController::get_controller_name()
00042180 t CDragController::get_controller_priority()
000423c0 t CDragController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000422f0 t CDragController::~CDragController()
00042160 t CDragController::~CDragController()
00042160 t CDragController::~CDragController()
00048b20 t CObjectPairHash::AddObjectPair(void*, void*)
000425d0 t CObjectPairHash::IsObjectInHash(void*)
000481e0 t CObjectPairHash::RemoveObjectPair(void*, void*)
00042220 t CObjectPairHash::IsObjectPairInHash(void*, void*)
00042690 t CObjectPairHash::GetPairListForObject(void*, int, void**)
00042600 t CObjectPairHash::GetPairCountForObject(void*)
000484c0 t CObjectPairHash::RemoveAllPairsForObject(void*)
000434f0 t CObjectPairHash::~CObjectPairHash()
00043490 t CObjectPairHash::~CObjectPairHash()
00043490 t CObjectPairHash::~CObjectPairHash()
0005be30 t CThreadLocalPtr<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CThreadLocalPtr()
0005be30 t CThreadLocalPtr<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CThreadLocalPtr()
00031200 t CTier1AppSystem<IPhysics, 0>::Disconnect()
00031250 t CTier1AppSystem<IPhysics, 0>::Init()
000311d0 t CTier1AppSystem<IPhysics, 0>::Connect(void* (*)(char const*, int*))
00031220 t CTier1AppSystem<IPhysics, 0>::Shutdown()
00077670 t CUtlSymbolTable::AddString(char const*)
000772f0 t CUtlSymbolTable::RemoveAll()
00076c90 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
00076c90 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
00077350 t CUtlSymbolTable::~CUtlSymbolTable()
00077350 t CUtlSymbolTable::~CUtlSymbolTable()
00096f50 t hk_Vector3_Util::random_vec()
00096fa0 t hk_Vector3_Util::perp_vec(hk_Vector3 const&)
00038670 t ICollisionQuery::~ICollisionQuery()
00038560 t ICollisionQuery::~ICollisionQuery()
00038560 t ICollisionQuery::~ICollisionQuery()
00101c70 t IVP_Core_Merged::set_by_merge(IVP_Core*, IVP_Core*)
000ebf60 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
000ec000 t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
000ebf60 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
000ec000 t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
000ecdc0 t IVP_Environment::reset_time()
000ed6c0 t IVP_Environment::create_ball(IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000ee490 t IVP_Environment::do_d_events()
000ef4d0 t IVP_Environment::get_gravity()
000ec8e0 t IVP_Environment::set_gravity(IVP_U_Point*)
000ecae0 t IVP_Environment::create_force(IVP_Template_Force*)
000eeff0 t IVP_Environment::simulate_psi(IVP_Time)
000ec980 t IVP_Environment::create_rotmot(IVP_Template_Rot_Mot*)
000ecb60 t IVP_Environment::create_spring(IVP_Template_Spring*)
000eca10 t IVP_Environment::create_torque(IVP_Template_Torque*)
000ef320 t IVP_Environment::get_env_state()
000eedc0 t IVP_Environment::merge_objects(IVP_U_Vector<IVP_Real_Object>*)
000ed650 t IVP_Environment::create_polygon(IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000edd40 t IVP_Environment::fire_event_PSI()
000ece60 t IVP_Environment::simulate_dtime(double)
000ecd20 t IVP_Environment::simulate_until(IVP_Time)
000ee510 t IVP_Environment::add_draw_vector(IVP_U_Point const*, IVP_U_Float_Point const*, char const*, int)
00107260 t IVP_Environment::add_revive_core(IVP_Core*)
000edf50 t IVP_Environment::add_listener_PSI(IVP_Listener_PSI*)
000ef4a0 t IVP_Environment::get_current_time()
000eccf0 t IVP_Environment::get_root_cluster()
000ef3d0 t IVP_Environment::get_sim_unit_mem()
000ef4c0 t IVP_Environment::get_wakeup_count()
001072c0 t IVP_Environment::revive_cores_PSI()
000eced0 t IVP_Environment::set_current_time(IVP_Time)
000ecca0 t IVP_Environment::create_check_dist(IVP_Template_Check_Dist*)
000e7310 t IVP_Environment::create_constraint(IVP_Template_Constraint const*)
000ecc50 t IVP_Environment::create_stabilizer(IVP_Template_Stabilizer*)
000ecc00 t IVP_Environment::create_suspension(IVP_Template_Suspension*)
000ef290 t IVP_Environment::get_next_PSI_time()
000ef2d0 t IVP_Environment::get_delta_PSI_time()
000ef490 t IVP_Environment::get_freeze_manager()
000ef3e0 t IVP_Environment::get_short_term_mem()
001071c0 t IVP_Environment::remove_revive_core(IVP_Core*)
000ec830 t IVP_Environment::set_delta_PSI_time(double)
000ece90 t IVP_Environment::simulate_time_step(float)
000edfa0 t IVP_Environment::remove_listener_PSI(IVP_Listener_PSI*)
000ef310 t IVP_Environment::get_current_time_code()
000ef420 t IVP_Environment::get_statistic_manager()
000ef500 t IVP_Environment::get_gravity_controller()
000ef2f0 t IVP_Environment::get_inv_delta_PSI_time()
000ef3c0 t IVP_Environment::get_performancecounter()
000eca90 t IVP_Environment::create_controller_motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
000ecff0 t IVP_Environment::delete_draw_vector_debug()
000ed9e0 t IVP_Environment::fire_event_object_frozen(IVP_Event_Object*)
000edaa0 t IVP_Environment::fire_event_pre_collision(IVP_Event_Collision*)
000ef2b0 t IVP_Environment::get_old_time_of_last_PSI()
000ed920 t IVP_Environment::fire_event_object_created(IVP_Event_Object*)
000ed980 t IVP_Environment::fire_event_object_deleted(IVP_Event_Object*)
000eda40 t IVP_Environment::fire_event_object_revived(IVP_Event_Object*)
000edb10 t IVP_Environment::fire_event_post_collision(IVP_Event_Collision*)
000ed7b0 t IVP_Environment::add_listener_object_global(IVP_Listener_Object*)
000ef280 t IVP_Environment::get_integrated_energy_damp()
000ed730 t IVP_Environment::add_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
000edb80 t IVP_Environment::fire_event_friction_created(IVP_Event_Friction*)
000edbf0 t IVP_Environment::fire_event_friction_deleted(IVP_Event_Friction*)
000ef430 t IVP_Environment::get_betterstatisticsmanager()
000ef230 t IVP_Environment::must_perform_movement_check()
000ecd70 t IVP_Environment::simulate_variable_time_step(float)
000edda0 t IVP_Environment::fire_event_constraint_broken(IVP_Constraint*)
000ede00 t IVP_Environment::fire_event_constraint_broken(hk_Breakable_Constraint*)
000ecef0 t IVP_Environment::force_psi_on_next_simulation()
000ede60 t IVP_Environment::add_listener_collision_global(IVP_Listener_Collision*)
000ed880 t IVP_Environment::remove_listener_object_global(IVP_Listener_Object*)
000ed770 t IVP_Environment::add_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
000ee040 t IVP_Environment::add_listener_constraint_global(IVP_Listener_Constraint*)
000ee550 t IVP_Environment::get_global_collision_tolerance()
000ed800 t IVP_Environment::install_listener_object_global(IVP_Listener_Object*)
000ed750 t IVP_Environment::remove_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
000ee520 t IVP_Environment::set_global_collision_tolerance(double, double)
000edc60 t IVP_Environment::fire_event_friction_pair_created(IVP_Friction_Core_Pair*)
000edcd0 t IVP_Environment::fire_event_friction_pair_deleted(IVP_Friction_Core_Pair*)
000edeb0 t IVP_Environment::remove_listener_collision_global(IVP_Listener_Collision*)
000ed790 t IVP_Environment::remove_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
000ee090 t IVP_Environment::remove_listener_constraint_global(IVP_Listener_Constraint*)
000ec880 t IVP_Environment::fire_object_is_removed_from_collision_detection(IVP_Real_Object*)
000ee570 t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
000ee570 t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
000ed060 t IVP_Environment::~IVP_Environment()
000ed060 t IVP_Environment::~IVP_Environment()
0011b1c0 t IVP_Inline_Math::save_acosf(float)
0011b2c0 t IVP_Inline_Math::approx5_cos(float)
0011b280 t IVP_Inline_Math::approx5_sin(float)
00119e10 t IVP_Inline_Math::isqrt_float(float)
00119e50 t IVP_Inline_Math::isqrt_double(double)
0011b240 t IVP_Inline_Math::fast_approx_asin(float)
0011b300 t IVP_Inline_Math::upper_limit_asin(float)
0011b3d0 t IVP_Inline_Math::invert_2x2_matrix(double, double, double, double, double*, double*, double*, double*)
0011b380 t IVP_Inline_Math::fast_anywhere_asin(float)
00119f20 t IVP_Inline_Math::cosd(double)
00119f10 t IVP_Inline_Math::sind(double)
00119f30 t IVP_Inline_Math::acosd(double)
00119f40 t IVP_Inline_Math::asind(double)
00119f50 t IVP_Inline_Math::atand(double)
00119e80 t IVP_Inline_Math::fabsd(double)
00119ed0 t IVP_Inline_Math::sqrtd(double)
00119f70 t IVP_Inline_Math::atan2d(double, double)
00119f00 t IVP_Inline_Math::ivp_cosf(double)
00119f60 t IVP_Inline_Math::ivp_expf(double)
00119ef0 t IVP_Inline_Math::ivp_sinf(double)
0011b340 t IVP_Inline_Math::fast_asin(float)
0011b220 t IVP_Inline_Math::int_div_2(int)
00119eb0 t IVP_Inline_Math::ivp_sqrtf(double)
00104260 t IVP_Real_Object::reset_time(IVP_Time)
00104640 t IVP_Real_Object::set_pinned(IVP_BOOL)
00103e00 t IVP_Real_Object::change_mass(float)
00103f20 t IVP_Real_Object::insert_anchor(IVP_Anchor*)
00103f50 t IVP_Real_Object::remove_anchor(IVP_Anchor*)
001064e0 t IVP_Real_Object::get_ov_element()
00104280 t IVP_Real_Object::delete_silently()
0010f640 t IVP_Real_Object::get_cache_object()
00106490 t IVP_Real_Object::get_first_anchor()
001064c0 t IVP_Real_Object::get_hull_manager()
00105740 t IVP_Real_Object::init_object_core(IVP_Environment*, IVP_Template_Real_Object const*)
001041a0 t IVP_Real_Object::set_extra_radius(double)
00105da0 t IVP_Real_Object::do_radar_checking(IVP_Radar*)
00105f40 t IVP_Real_Object::convert_to_phantom(IVP_Template_Phantom const*)
001048d0 t IVP_Real_Object::disable_simulation()
00106550 t IVP_Real_Object::get_movement_state()
00104060 t IVP_Real_Object::recalc_core_radius()
001064f0 t IVP_Real_Object::set_movement_state(IVP_Movement_Type)
00103ec0 t IVP_Real_Object::add_listener_object(IVP_Listener_Object*)
00106260 t IVP_Real_Object::async_push_object_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
00105130 t IVP_Real_Object::calc_m_core_f_object(IVP_U_Matrix*)
00106180 t IVP_Real_Object::ensure_in_simulation()
00104a50 t IVP_Real_Object::change_unmovable_flag(IVP_BOOL)
00104360 t IVP_Real_Object::get_all_near_mindists()
001044f0 t IVP_Real_Object::unlink_contact_points(IVP_BOOL)
00103e60 t IVP_Real_Object::add_listener_collision(IVP_Listener_Collision*)
00106570 t IVP_Real_Object::get_controller_phantom()
00103ef0 t IVP_Real_Object::remove_listener_object(IVP_Listener_Object*)
001064a0 t IVP_Real_Object::get_first_exact_synapse()
00103af0 t IVP_Real_Object::set_new_m_object_f_core(IVP_U_Matrix const*)
00104790 t IVP_Real_Object::set_new_surface_manager(IVP_SurfaceManager*)
00104040 t IVP_Real_Object::ensure_in_simulation_now()
0010f6b0 t IVP_Real_Object::get_cache_object_no_lock()
001043c0 t IVP_Real_Object::recheck_collision_filter()
00103e20 t IVP_Real_Object::recompile_values_changed()
001061c0 t IVP_Real_Object::async_add_speed_object_ws(IVP_U_Float_Point const*)
00104ca0 t IVP_Real_Object::clear_internal_references()
00104450 t IVP_Real_Object::delete_and_check_vicinity()
00103e90 t IVP_Real_Object::remove_listener_collision(IVP_Listener_Collision*)
00103de0 t IVP_Real_Object::change_fast_piling_allowed(IVP_BOOL)
001045b0 t IVP_Real_Object::enable_collision_detection(IVP_BOOL)
001044c0 t IVP_Real_Object::force_grow_friction_system()
001064b0 t IVP_Real_Object::get_first_friction_synapse()
00103e40 t IVP_Real_Object::recompile_material_changed()
00103c50 t IVP_Real_Object::set_new_quat_object_f_core(IVP_U_Quat const*, IVP_U_Point const*)
00105fa0 t IVP_Real_Object::beam_object_to_new_position(IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
00104000 t IVP_Real_Object::revive_object_for_simulation()
00106210 t IVP_Real_Object::async_add_rot_speed_object_cs(IVP_U_Float_Point const*)
00106560 t IVP_Real_Object::is_collision_detection_enabled()
001043f0 t IVP_Real_Object::revive_nearest_objects_grow_fs()
00104310 t IVP_Real_Object::recalc_exact_mindists_of_object()
00104c30 t IVP_Real_Object::unlink_contact_points_for_object(IVP_Real_Object*)
001042a0 t IVP_Real_Object::recalc_invalid_mindists_of_object()
00105c70 t IVP_Real_Object::get_collision_check_reference_count()
00103f80 t IVP_Real_Object::update_exact_mindist_events_of_object()
00104f20 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00104f20 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00104e90 t IVP_Real_Object::~IVP_Real_Object()
00104d30 t IVP_Real_Object::~IVP_Real_Object()
00104d30 t IVP_Real_Object::~IVP_Real_Object()
000babf0 t IVP_Tetra_Point::p()
000baf10 t IVP_Tetra_Point::init(IVP_Tetra_Intrude*)
000bab80 t IVP_Tetra_Point::print(char const*)
00038860 t IVP_U_BigVector<IVP_Compact_Ledge>::clear()
0011ff90 t IVP_VHash_Store::change_elem(void*, void*)
0011fe30 t IVP_VHash_Store::remove_elem(void*)
0011fcf0 t IVP_VHash_Store::remove_elem(void*, unsigned int)
0011fac0 t IVP_VHash_Store::untouch_all()
00120040 t IVP_VHash_Store::touch_element(void*, unsigned int)
0011fe90 t IVP_VHash_Store::check()
001200a0 t IVP_VHash_Store::print()
0011fbf0 t IVP_VHash_Store::rehash(int)
0011fc90 t IVP_VHash_Store::add_elem(void*, void*)
0011fb00 t IVP_VHash_Store::add_elem(void*, void*, int)
0011ff30 t IVP_VHash_Store::find_elem(void*)
0011fea0 t IVP_VHash_Store::find_elem(void*, unsigned int)
0011fa20 t IVP_VHash_Store::IVP_VHash_Store(int)
0011fa60 t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
0011fa20 t IVP_VHash_Store::IVP_VHash_Store(int)
0011fa60 t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
0011fa90 t IVP_VHash_Store::~IVP_VHash_Store()
0011fa90 t IVP_VHash_Store::~IVP_VHash_Store()
00057240 t vehicleparams_t::GetBaseMap()
001aeb00 d vehicleparams_t::m_DataMap
00048ff0 t CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, double)
000491b0 t CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
000420a0 t CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
00042110 t CCollisionSolver::max_collision_checks_exceeded(int)
00043a70 t CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00041fe0 t CCollisionSolver::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000420c0 t CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
00044130 t CCollisionSolver::~CCollisionSolver()
000440c0 t CCollisionSolver::~CCollisionSolver()
000440c0 t CCollisionSolver::~CCollisionSolver()
0006c890 t CDataManagerBase::TargetSize()
0006c910 t CDataManagerBase::MarkAsStale(memhandle_t__*)
0006d1e0 t CDataManagerBase::CreateHandle(bool)
0006ca40 t CDataManagerBase::LockResource(memhandle_t__*)
0006d060 t CDataManagerBase::TouchByIndex(unsigned short)
0006c8a0 t CDataManagerBase::AvailableSize()
0006cfa0 t CDataManagerBase::BreakAllLocks()
0006c780 t CDataManagerBase::SetTargetSize(unsigned int)
0006d160 t CDataManagerBase::TouchResource(memhandle_t__*)
0006cbe0 t CDataManagerBase::EnsureCapacity(unsigned int)
0006ccf0 t CDataManagerBase::UnlockResource(memhandle_t__*)
0006ce80 t CDataManagerBase::DestroyResource(memhandle_t__*)
0006d3c0 t CDataManagerBase::FlushAllUnlocked()
0006d2c0 t CDataManagerBase::GetLRUHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0006cca0 t CDataManagerBase::FlushToTargetSize()
0006cb20 t CDataManagerBase::GetForFreeByIndex(unsigned short)
0006d340 t CDataManagerBase::GetLockHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0006c750 t CDataManagerBase::NotifySizeChanged(memhandle_t__*, unsigned int, unsigned int)
0006d0d0 t CDataManagerBase::GetResource_NoLock(memhandle_t__*)
0006c800 t CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
0006c790 t CDataManagerBase::GetResource_NoLockNoLRUTouch(memhandle_t__*)
0006d850 t CDataManagerBase::Lock()
0006ccc0 t CDataManagerBase::Purge(unsigned int)
0006d870 t CDataManagerBase::Unlock()
0006d860 t CDataManagerBase::TryLock()
0006d530 t CDataManagerBase::FlushAll()
0006c860 t CDataManagerBase::ToHandle(unsigned short)
0006c8b0 t CDataManagerBase::UsedSize()
0006cdd0 t CDataManagerBase::BreakLock(memhandle_t__*)
0006d760 t CDataManagerBase::CDataManagerBase(unsigned int)
0006d760 t CDataManagerBase::CDataManagerBase(unsigned int)
0006c8e0 t CDataManagerBase::~CDataManagerBase()
0006c8c0 t CDataManagerBase::~CDataManagerBase()
0006c8c0 t CDataManagerBase::~CDataManagerBase()
0006c520 t CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
0006e860 t CDllDemandLoader::GetFactory()
0006e8d0 t CDllDemandLoader::Unload()
0006e840 t CDllDemandLoader::CDllDemandLoader(char const*)
0006e840 t CDllDemandLoader::CDllDemandLoader(char const*)
0006e370 t CDllDemandLoader::~CDllDemandLoader()
0006e340 t CDllDemandLoader::~CDllDemandLoader()
0006e340 t CDllDemandLoader::~CDllDemandLoader()
00034c10 t CPhysics_Airboat::IsBoosting()
00031ad0 t CPhysics_Airboat::do_steering(float, bool)
00031c20 t CPhysics_Airboat::InitAirboat(IVP_Template_Car_System const*)
00032970 t CPhysics_Airboat::PreRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
00032b30 t CPhysics_Airboat::PostRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
00031780 t CPhysics_Airboat::get_skid_info(IVP_Wheel_Skid_Info*)
000324b0 t CPhysics_Airboat::GetWaterDepth(Ray_t*, IPhysicsObject*)
00031690 t CPhysics_Airboat::get_body_speed(IVP_COORDINATE_INDEX)
00034c00 t CPhysics_Airboat::set_powerslide(float, float)
00034c40 t CPhysics_Airboat::update_booster(float)
00031a60 t CPhysics_Airboat::update_throttle(float)
00034c30 t CPhysics_Airboat::activate_booster(float, float, float)
00033270 t CPhysics_Airboat::DoSimulationDrag(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000315a0 t CPhysics_Airboat::get_wheel_torque(IVP_POS_WHEEL)
00031cb0 t CPhysics_Airboat::SetWheelFriction(int, float)
000319d0 t CPhysics_Airboat::do_steering_wheel(IVP_POS_WHEEL, float)
00034c50 t CPhysics_Airboat::get_booster_delay()
00034ae0 t CPhysics_Airboat::InitRaycastCarAxes(IVP_Template_Car_System const*)
00034680 t CPhysics_Airboat::InitRaycastCarBody(IVP_Template_Car_System const*)
00031a20 t CPhysics_Airboat::change_wheel_torque(IVP_POS_WHEEL, float)
00033e50 t CPhysics_Airboat::DoSimulationGravity(IVP_Event_Sim*)
000339e0 t CPhysics_Airboat::DoSimulationTurbine(IVP_Event_Sim*)
00034bc0 t CPhysics_Airboat::get_controller_name()
00032a40 t CPhysics_Airboat::UpdateAirborneState(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00031580 t CPhysics_Airboat::change_spring_length(IVP_POS_WHEEL, float)
000325a0 t CPhysics_Airboat::do_raycasts_gameside(int, IVP_Ray_Solver_Template*, IVP_Raycast_Airboat_Impact*)
00033120 t CPhysics_Airboat::DoSimulationPontoons(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00033b30 t CPhysics_Airboat::DoSimulationSteering(IVP_Event_Sim*)
00034740 t CPhysics_Airboat::InitRaycastCarWheels(IVP_Template_Car_System const*)
00031620 t CPhysics_Airboat::change_body_downforce(float)
00034be0 t CPhysics_Airboat::change_max_body_force(IVP_POS_WHEEL, float)
000318b0 t CPhysics_Airboat::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
00031da0 t CPhysics_Airboat::pre_raycasts_gameside(int, IVP_Ray_Solver_Template*, Ray_t*, IVP_Raycast_Airboat_Impact*)
000317e0 t CPhysics_Airboat::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000314f0 t CPhysics_Airboat::change_spring_constant(IVP_POS_WHEEL, float)
00034c60 t CPhysics_Airboat::get_booster_time_to_go()
00034bb0 t CPhysics_Airboat::update_wheel_positions()
00031610 t CPhysics_Airboat::change_fast_turn_factor(float)
00031510 t CPhysics_Airboat::change_spring_dampening(IVP_POS_WHEEL, float)
00031640 t CPhysics_Airboat::get_controller_priority()
00031740 t CPhysics_Airboat::get_orig_axles_distance()
00034530 t CPhysics_Airboat::change_friction_of_wheel(IVP_POS_WHEEL, float)
000343c0 t CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00034c20 t CPhysics_Airboat::set_booster_acceleration(float)
00031550 t CPhysics_Airboat::change_spring_pre_tension(IVP_POS_WHEEL, float)
00033e60 t CPhysics_Airboat::CountSurfaceContactPoints(IVP_Raycast_Airboat_Impact*)
00033080 t CPhysics_Airboat::DoSimulationPontoonsWater(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00034550 t CPhysics_Airboat::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
00034bf0 t CPhysics_Airboat::update_body_countertorque()
000315f0 t CPhysics_Airboat::change_stabilizer_constant(IVP_POS_AXIS, float)
00032f20 t CPhysics_Airboat::DoSimulationPontoonsGround(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00031660 t CPhysics_Airboat::get_wheel_angular_velocity(IVP_POS_WHEEL)
00034130 t CPhysics_Airboat::DoSimulationKeepUprightRoll(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000331d0 t CPhysics_Airboat::PerformFrictionNotification(float, float, int, IPhysicsCollisionData*)
00031cd0 t CPhysics_Airboat::ComputeFrontPontoonWaveNoise(int, float)
00033eb0 t CPhysics_Airboat::DoSimulationKeepUprightPitch(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00031700 t CPhysics_Airboat::get_orig_front_wheel_distance()
00031980 t CPhysics_Airboat::get_associated_controlled_cores()
000319a0 t CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
00031530 t CPhysics_Airboat::change_spring_dampening_compression(IVP_POS_WHEEL, float)
00034b50 t CPhysics_Airboat::get_axle(IVP_POS_AXIS)
00031c90 t CPhysics_Airboat::GetWheel(int)
000315d0 t CPhysics_Airboat::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
00034b70 t CPhysics_Airboat::get_wheel(IVP_POS_WHEEL)
00034970 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
00034970 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
00031bf0 t CPhysics_Airboat::~CPhysics_Airboat()
00031b60 t CPhysics_Airboat::~CPhysics_Airboat()
00031b60 t CPhysics_Airboat::~CPhysics_Airboat()
         U CThreadLocalBase::Set(void*)
         U CThreadLocalBase::CThreadLocalBase()
         U CThreadLocalBase::~CThreadLocalBase()
000422d0 t IDeleteQueueItem::~IDeleteQueueItem()
00041a20 t IDeleteQueueItem::~IDeleteQueueItem()
00041a20 t IDeleteQueueItem::~IDeleteQueueItem()
0010f5b0 t IVP_Cache_Object::get_core_pos()
0010f5a0 t IVP_Cache_Object::remove_reference()
0010ed50 t IVP_Cache_Object::update_cache_object()
001aed68 d IVP_Compact_Edge::next_table
001aed58 d IVP_Compact_Edge::prev_table
000d59e0 t IVP_Compact_Edge::get_opposite()
000d5540 t IVP_Compact_Edge::set_is_virtual(unsigned int)
000d5520 t IVP_Compact_Edge::set_opposite_index(int)
000d5510 t IVP_Compact_Edge::set_start_point_index(int)
000d5960 t IVP_Compact_Edge::get_next()
000d59a0 t IVP_Compact_Edge::get_prev()
000d51f0 t IVP_Compact_Edge::byte_swap()
000d51d0 t IVP_Compact_Edge::IVP_Compact_Edge()
000d51d0 t IVP_Compact_Edge::IVP_Compact_Edge()
000fcdf0 t IVP_Hull_Manager::reset_time(IVP_Time)
000fcd30 t IVP_Hull_Manager::reset_times()
000fccf0 t IVP_Hull_Manager::delete_hull_manager()
000fce30 t IVP_Hull_Manager::get_synapse_check_count(IVP_Environment*)
000fce10 t IVP_Hull_Manager::too_many_synapses_checked_error_get_additional(IVP_Environment*, int)
00121e10 t IVP_Mindist_Base::get_ledges(IVP_Compact_Ledge const**)
00121df0 t IVP_Mindist_Base::get_objects(IVP_Real_Object**)
001258a0 t IVP_Mindist_Base::get_mindist_synapse(int)
001221a0 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
001221a0 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
001257b0 t IVP_Mindist_Base::~IVP_Mindist_Base()
00125710 t IVP_Mindist_Base::~IVP_Mindist_Base()
00125710 t IVP_Mindist_Base::~IVP_Mindist_Base()
00121940 t IVP_ov_tree_hash::node_to_index(IVP_OV_Node*)
001218d0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
001218b0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
001218b0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
000b6f00 t IVP_Poly_Surface::get_surface_index()
000b6ef0 t IVP_Poly_Surface::set(IVP_Template_Surface*, IVP_Object_Polygon_Tetra*)
001259e0 t IVP_Synapse_Real::get_mindist()
00125960 t IVP_Synapse_Real::init_synapse(IVP_Mindist*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
00125930 t IVP_Synapse_Real::update_synapse(IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
001259b0 t IVP_Synapse_Real::get_hull_manager()
00121ed0 t IVP_Synapse_Real::print()
001259c0 t IVP_Synapse_Real::get_next()
001259d0 t IVP_Synapse_Real::get_prev()
00125950 t IVP_Synapse_Real::IVP_Synapse_Real()
00125950 t IVP_Synapse_Real::IVP_Synapse_Real()
00125800 t IVP_Synapse_Real::~IVP_Synapse_Real()
00125760 t IVP_Synapse_Real::~IVP_Synapse_Real()
00125760 t IVP_Synapse_Real::~IVP_Synapse_Real()
000ec790 t IVP_Time_Event_D::simulate_time_event(IVP_Environment*)
000ee4f0 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
000ee4f0 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
000ec6e0 t IVP_Time_Event_N::simulate_time_event(IVP_Environment*)
000ee500 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
000ee500 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
0010d6d0 t IVP_Time_Manager::event_loop(IVP_Environment*, IVP_Time)
0010d7c0 t IVP_Time_Manager::reset_time(IVP_Time)
0010d4f0 t IVP_Time_Manager::insert_event(IVP_Time_Event*, IVP_Time)
0010d530 t IVP_Time_Manager::remove_event(IVP_Time_Event*)
0010d550 t IVP_Time_Manager::update_event(IVP_Time_Event*, IVP_Time)
0010d660 t IVP_Time_Manager::get_next_event(IVP_Time)
0010d5b0 t IVP_Time_Manager::get_next_event()
0010d6b0 t IVP_Time_Manager::get_event_count()
0010d7a0 t IVP_Time_Manager::env_set_current_time(IVP_Environment*, IVP_Time)
0010d730 t IVP_Time_Manager::simulate_variable_time_step(IVP_Environment*, float)
0010d430 t IVP_Time_Manager::IVP_Time_Manager()
0010d430 t IVP_Time_Manager::IVP_Time_Manager()
0010d5f0 t IVP_Time_Manager::~IVP_Time_Manager()
0010d5f0 t IVP_Time_Manager::~IVP_Time_Manager()
00112910 t IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
00110af0 t IVP_U_Active_Add::print()
00113350 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00113350 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00111620 t IVP_U_Active_Add::~IVP_U_Active_Add()
001114d0 t IVP_U_Active_Add::~IVP_U_Active_Add()
001114d0 t IVP_U_Active_Add::~IVP_U_Active_Add()
00112cf0 t IVP_U_Active_Int::add_dependency(IVP_U_Active_Int_Listener*)
00113ac0 t IVP_U_Active_Int::give_int_value()
00112b20 t IVP_U_Active_Int::update_derived()
00112d30 t IVP_U_Active_Int::remove_dependency(IVP_U_Active_Int_Listener*)
001126c0 t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
001126c0 t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
00110950 t IVP_U_Active_Int::~IVP_U_Active_Int()
001108f0 t IVP_U_Active_Int::~IVP_U_Active_Int()
001108f0 t IVP_U_Active_Int::~IVP_U_Active_Int()
00112960 t IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
00110b30 t IVP_U_Active_Sub::print()
00113410 t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00113410 t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00111790 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
00111640 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
00111640 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
0011af40 t IVP_U_Float_Quat::set(IVP_U_Quat const*)
0011a250 t IVP_U_Float_Quat::byte_swap()
000e8670 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000e8550 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000e8550 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000e8790 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000e84c0 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000e84c0 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000e8700 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
000e85e0 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
000e85e0 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
00049380 t CBuoyancyAttacher::get_parameters_per_core(IVP_Core*)
000494b0 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000494b0 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
00049c60 t CBuoyancyAttacher::~CBuoyancyAttacher()
00049b20 t CBuoyancyAttacher::~CBuoyancyAttacher()
00049b20 t CBuoyancyAttacher::~CBuoyancyAttacher()
00049e10 t CFrictionSnapshot::GetMaterial(int)
00049f40 t CFrictionSnapshot::GetNormalForce()
00049d50 t CFrictionSnapshot::GetContactPoint(Vector&)
00049e50 t CFrictionSnapshot::GetSurfaceNormal(Vector&)
00049dc0 t CFrictionSnapshot::NextFrictionData()
00049f70 t CFrictionSnapshot::GetEnergyAbsorbed()
00049fa0 t CFrictionSnapshot::RecomputeFriction()
00049fc0 t CFrictionSnapshot::ClearFrictionForce()
0004a270 t CFrictionSnapshot::SetFrictionSynapse(IVP_Synapse_Friction*)
0004a080 t CFrictionSnapshot::MarkContactForDelete()
00049da0 t CFrictionSnapshot::GetFrictionCoefficient()
00049fe0 t CFrictionSnapshot::DeleteAllMarkedContacts(bool)
00049d00 t CFrictionSnapshot::IsValid()
00049d10 t CFrictionSnapshot::GetObject(int)
0004a210 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
0004a210 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
0004a3b0 t CFrictionSnapshot::~CFrictionSnapshot()
0004a360 t CFrictionSnapshot::~CFrictionSnapshot()
0004a360 t CFrictionSnapshot::~CFrictionSnapshot()
00051ee0 t CMaterialIndexOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00051e90 t CMaterialIndexOps::IsEmpty(SaveRestoreFieldInfo_t const&)
00051e10 t CMaterialIndexOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
00051eb0 t CMaterialIndexOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
00035570 t CPhysicsCollision::ConvexFree(CPhysConvex*)
00035120 t CPhysicsCollision::CollideSize(CPhysCollide*)
000370c0 t CPhysicsCollision::IsBBoxCache(CPhysCollide*)
00037110 t CPhysicsCollision::AddBBoxCache(CPhysCollideCompactSurface*, Vector const&, Vector const&)
000374f0 t CPhysicsCollision::BBoxToConvex(Vector const&, Vector const&)
00035260 t CPhysicsCollision::CollideIndex(CPhysCollide const*)
00035140 t CPhysicsCollision::CollideWrite(char*, CPhysCollide*, bool)
00034e20 t CPhysicsCollision::ConvexVolume(CPhysConvex*)
000372a0 t CPhysicsCollision::GetBBoxCache(Vector const&, Vector const&)
00036880 t CPhysicsCollision::TraceCollide(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00037c70 t CPhysicsCollision::VCollideLoad(vcollide_t*, int, char const*, int, bool)
000376b0 t CPhysicsCollision::BBoxToCollide(Vector const&, Vector const&)
00038330 t CPhysicsCollision::CollideVolume(CPhysCollide*)
00037540 t CPhysicsCollision::InitBBoxCache()
000368a0 t CPhysicsCollision::CollideGetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
000369c0 t CPhysicsCollision::DestroyCollide(CPhysCollide*)
00037880 t CPhysicsCollision::PolysoupCreate()
000367c0 t CPhysicsCollision::VCollideUnload(vcollide_t*)
00037490 t CPhysicsCollision::ConvexFromVerts(Vector**, int)
00038190 t CPhysicsCollision::CreateDebugMesh(CPhysCollide const*, Vector**)
00036fb0 t CPhysicsCollision::FastBboxCollide(CPhysCollideCompactSurface const*, Vector const&, Vector const&)
000352b0 t CPhysicsCollision::OutputDebugInfo(CPhysCollide const*)
00036b80 t CPhysicsCollision::PolysoupDestroy(CPhysPolysoup*)
00036950 t CPhysicsCollision::CollideGetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
00035a20 t CPhysicsCollision::ConvexFromPlanes(float*, int, float)
00038510 t CPhysicsCollision::CreateQueryModel(CPhysCollide*)
000367a0 t CPhysicsCollision::DestroyDebugMesh(int, Vector*)
000352d0 t CPhysicsCollision::GetBBoxCacheSize(int*, int*)
00036a20 t CPhysicsCollision::ConvexSurfaceArea(CPhysConvex*)
000386d0 t CPhysicsCollision::CreateVirtualMesh(virtualmeshparams_t const&)
00035330 t CPhysicsCollision::DestroyQueryModel(ICollisionQuery*)
00035160 t CPhysicsCollision::SetConvexGameData(CPhysConvex*, unsigned int)
000383f0 t CPhysicsCollision::CollideSurfaceArea(CPhysCollide*)
00037c40 t CPhysicsCollision::UnserializeCollide(char*, int, int)
00037360 t CPhysicsCollision::ConvexFromVertsFast(Vector**, int)
000365a0 t CPhysicsCollision::PolysoupAddTriangle(CPhysPolysoup*, Vector const&, Vector const&, Vector const&, int)
00038600 t CPhysicsCollision::SupportsVirtualMesh()
000351d0 t CPhysicsCollision::ThreadContextCreate()
000351f0 t CPhysicsCollision::CollideGetMassCenter(CPhysCollide*, Vector*)
00035240 t CPhysicsCollision::CollideSetMassCenter(CPhysCollide*, Vector const&)
00035d80 t CPhysicsCollision::PolyhedronFromConvex(CPhysConvex*, bool)
000351e0 t CPhysicsCollision::ThreadContextDestroy(IPhysicsCollision*)
000368c0 t CPhysicsCollision::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
00034fd0 t CPhysicsCollision::ConvertConvexToCollide(CPhysConvex**, int)
00036e80 t CPhysicsCollision::RebuildConvexFromPlanes(CPhysConvex*, float)
000368e0 t CPhysicsCollision::VPhysicsKeyParserCreate(char const*)
00038030 t CPhysicsCollision::ConvertPolysoupToCollide(CPhysPolysoup*, bool)
000368f0 t CPhysicsCollision::VPhysicsKeyParserDestroy(IVPhysicsKeyParser*)
00036430 t CPhysicsCollision::ConvexesFromConvexPolygon(Vector const&, Vector const*, int, CPhysConvex**)
00035b30 t CPhysicsCollision::ConvexFromConvexPolyhedron(CPolyhedron const&)
00036900 t CPhysicsCollision::CollideGetOrthographicAreas(CPhysCollide const*)
00035280 t CPhysicsCollision::CollideSetOrthographicAreas(CPhysCollide*, Vector const&)
00037dd0 t CPhysicsCollision::ConvertConvexToCollideParams(CPhysConvex**, int, convertconvexparams_t const&)
00037f30 t CPhysicsCollision::GetConvexesUsedInCollideable(CPhysCollide const*, CPhysConvex**, int)
000385f0 t CPhysicsCollision::ReadStat(int)
00036860 t CPhysicsCollision::TraceBox(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00035180 t CPhysicsCollision::TraceBox(Ray_t const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00036840 t CPhysicsCollision::TraceBox(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000388e0 t CPhysicsCollision::~CPhysicsCollision()
00038930 t CPhysicsCollision::~CPhysicsCollision()
00038930 t CPhysicsCollision::~CPhysicsCollision()
00030d50 t CPhysicsInterface::QueryInterface(char const*)
00030e30 t CPhysicsInterface::FindCollisionSet(unsigned int)
00030e80 t CPhysicsInterface::CreateEnvironment()
00030d70 t CPhysicsInterface::DestroyEnvironment(IPhysicsEnvironment*)
00030e20 t CPhysicsInterface::CreateObjectPairHash()
00030d30 t CPhysicsInterface::DestroyObjectPairHash(IPhysicsObjectPairHash*)
00031070 t CPhysicsInterface::DestroyAllCollisionSets()
00030fc0 t CPhysicsInterface::FindOrCreateCollisionSet(unsigned int, int)
00030d00 t CPhysicsInterface::GetActiveEnvironmentByIndex(int)
00031460 t CPhysicsInterface::~CPhysicsInterface()
00031460 t CPhysicsInterface::~CPhysicsInterface()
000524f0 t CPlayerController::IsInContact()
00053070 t CPlayerController::AttachObject()
00053190 t CPlayerController::DetachObject()
00055580 t CPlayerController::GetLastImpulse(Vector*)
00052100 t CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
00055660 t CPlayerController::GetPushMassLimit()
00055600 t CPlayerController::SetPushMassLimit(float)
00055690 t CPlayerController::GetPushSpeedLimit()
00055960 t CPlayerController::GetShadowPosition(Vector*, QAngle*)
000522a0 t CPlayerController::GetShadowVelocity(Vector*)
00055630 t CPlayerController::SetPushSpeedLimit(float)
00053320 t CPlayerController::TryTeleportObject()
00055720 t CPlayerController::event_object_frozen(IVP_Event_Object*)
00055540 t CPlayerController::get_controller_name()
000556e0 t CPlayerController::event_object_created(IVP_Event_Object*)
000556c0 t CPlayerController::event_object_deleted(IVP_Event_Object*)
00055700 t CPlayerController::event_object_revived(IVP_Event_Object*)
00055530 t CPlayerController::get_controller_priority()
00053460 t CPlayerController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000520e0 t CPlayerController::Jump()
00052620 t CPlayerController::StepUp(float)
00052e30 t CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
00052390 t CPlayerController::MaxSpeed(Vector const&)
000555e0 t CPlayerController::GetObject()
00052dd0 t CPlayerController::SetGround(CPhysicsObject*)
000532d0 t CPlayerController::SetObject(IPhysicsObject*)
00055550 t CPlayerController::WasFrozen()
000530f0 t CPlayerController::CPlayerController(CPhysicsObject*)
000530f0 t CPlayerController::CPlayerController(CPhysicsObject*)
00053260 t CPlayerController::~CPlayerController()
00053200 t CPlayerController::~CPlayerController()
00053200 t CPlayerController::~CPlayerController()
000521d0 t CShadowController::GetMaxSpeed(float*, float*)
00054a40 t CShadowController::AttachObject()
00054d30 t CShadowController::DetachObject()
00055790 t CShadowController::AllowsRotation()
000557c0 t CShadowController::GetLastImpulse(Vector*)
000550f0 t CShadowController::WriteToTemplate(vphysics_save_cshadowcontroller_t&)
000551d0 t CShadowController::InitFromTemplate(vphysics_save_cshadowcontroller_t const&)
00055760 t CShadowController::AllowsTranslation()
00052570 t CShadowController::GetTargetPosition(Vector*, QAngle*)
00055890 t CShadowController::UseShadowMaterial(bool)
00055750 t CShadowController::get_controller_name()
00052150 t CShadowController::GetTeleportDistance()
00052120 t CShadowController::SetTeleportDistance(float)
000558f0 t CShadowController::ObjectMaterialChanged(int)
00055860 t CShadowController::IsPhysicallyControlled()
00055740 t CShadowController::get_controller_priority()
00055820 t CShadowController::SetPhysicallyControlled(bool)
00054620 t CShadowController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00052210 t CShadowController::StepUp(float)
000526c0 t CShadowController::Update(Vector const&, QAngle const&, float)
00052190 t CShadowController::MaxSpeed(float, float)
00054ec0 t CShadowController::SetObject(IPhysicsObject*)
00054c40 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
000549d0 t CShadowController::CShadowController()
00054c40 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
000549d0 t CShadowController::CShadowController()
00054e70 t CShadowController::~CShadowController()
00054e20 t CShadowController::~CShadowController()
00054e20 t CShadowController::~CShadowController()
         U CThreadSpinRWLock::UnlockRead()
         U CThreadSpinRWLock::LockForRead()
         U CThreadSpinRWLock::UnlockWrite()
         U CThreadSpinRWLock::SpinLockForWrite(unsigned int)
         U CThreadSyncObject::~CThreadSyncObject()
00074c30 t CUtlInplaceBuffer::InplaceGetLinePtr(char**, int*)
00074cd0 t CUtlInplaceBuffer::InplaceGetLinePtr()
000753b0 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
000753b0 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
00038650 t IPhysicsCollision::~IPhysicsCollision()
00038550 t IPhysicsCollision::~IPhysicsCollision()
00038550 t IPhysicsCollision::~IPhysicsCollision()
000d5800 t IVP_Compact_Ledge::is_compact()
000d5310 t IVP_Compact_Ledge::c_ledge_init()
000d53a0 t IVP_Compact_Ledge::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
000d5720 t IVP_Compact_Ledge::set_is_compact(IVP_BOOL)
000d5750 t IVP_Compact_Ledge::get_point_array()
000d5830 t IVP_Compact_Ledge::set_client_data(unsigned int)
000d5770 t IVP_Compact_Ledge::get_first_triangle()
000d56f0 t IVP_Compact_Ledge::set_offset_ledge_points(int)
000d5700 t IVP_Compact_Ledge::set_size(int)
000d5340 t IVP_Compact_Ledge::byte_swap()
00102b60 t IVP_Contact_Point::reset_time(IVP_Time)
000ff030 t IVP_Contact_Point::get_material_info(IVP_Material**)
000fff60 t IVP_Contact_Point::calc_coll_distance()
00103920 t IVP_Contact_Point::get_contact_normal(IVP_U_Float_Point*)
001038d0 t IVP_Contact_Point::recompute_friction()
00103950 t IVP_Contact_Point::set_contact_normal(IVP_U_Float_Point const&)
000ef7d0 t IVP_Contact_Point::two_values_friction(IVP_U_Float_Point*)
00102090 t IVP_Contact_Point::p_calc_friction_s_PK(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
00101f50 t IVP_Contact_Point::p_calc_friction_s_PP(IVP_U_Point const*, IVP_U_Point const*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
00101ce0 t IVP_Contact_Point::p_calc_friction_qr_PF(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
00102470 t IVP_Contact_Point::p_calc_friction_ss_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
00102b80 t IVP_Contact_Point::recalc_friction_s_vals()
000efd90 t IVP_Contact_Point::static_friction_single(IVP_Event_Sim const*, float, float)
000f1880 t IVP_Contact_Point::ease_the_friction_force(IVP_U_Float_Point*)
000ffed0 t IVP_Contact_Point::get_rescue_speed_impact(IVP_Environment*)
000f1810 t IVP_Contact_Point::set_friction_to_neutral()
000ffdd0 t IVP_Contact_Point::get_rot_speed_uncertainty()
000f44b0 t IVP_Contact_Point::calc_virtual_mass_of_mindist()
000efc70 t IVP_Contact_Point::get_and_set_real_friction_len(IVP_U_Float_Point*)
000f1010 t IVP_Contact_Point::friction_force_local_constraint_1d(IVP_Event_Sim const*)
000f0ca0 t IVP_Contact_Point::friction_force_local_constraint_2d(IVP_Event_Sim const*)
000ff140 t IVP_Contact_Point::read_materials_for_contact_situation(IVP_Impact_Solver_Long_Term*)
000f01b0 t IVP_Contact_Point::friction_force_local_constraint_2d_wheel(IVP_Core*, IVP_Impact_Solver_Long_Term*, IVP_Event_Sim const*, float&)
000ef5a0 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
000ef5a0 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
000f2070 t IVP_Contact_Point::~IVP_Contact_Point()
000f2070 t IVP_Contact_Point::~IVP_Contact_Point()
000ecfb0 t IVP_Debug_Manager::init_debug_manager()
000ecf70 t IVP_Debug_Manager::clear_debug_manager()
000ecfd0 t IVP_Debug_Manager::IVP_Debug_Manager()
000ecfd0 t IVP_Debug_Manager::IVP_Debug_Manager()
000ecfa0 t IVP_Debug_Manager::~IVP_Debug_Manager()
000ecfa0 t IVP_Debug_Manager::~IVP_Debug_Manager()
0010d6c0 t IVP_Event_Manager::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
0010d260 t IVP_Event_Manager::simulate_variable_time_step(IVP_Time_Manager*, IVP_Environment*, IVP_Time_Event_PSI*, float)
0010d870 t IVP_Event_Manager::~IVP_Event_Manager()
0010d840 t IVP_Event_Manager::~IVP_Event_Manager()
0010d840 t IVP_Event_Manager::~IVP_Event_Manager()
00100d10 t IVP_Friction_Hash::~IVP_Friction_Hash()
00100d10 t IVP_Friction_Hash::~IVP_Friction_Hash()
00097110 t IVP_Halfspacesoup::add_halfspace(IVP_U_Hesse const*)
00097330 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
000970f0 t IVP_Halfspacesoup::IVP_Halfspacesoup()
00097330 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
000970f0 t IVP_Halfspacesoup::IVP_Halfspacesoup()
00097080 t IVP_Halfspacesoup::~IVP_Halfspacesoup()
00097080 t IVP_Halfspacesoup::~IVP_Halfspacesoup()
000fd4b0 t IVP_Impact_Solver::confirm_impact(int)
000fdfc0 t IVP_Impact_Solver::delay_decision(IVP_Core**)
000fd650 t IVP_Impact_Solver::do_rescue_push(IVP_U_Float_Point*, IVP_BOOL)
000fded0 t IVP_Impact_Solver::delay_of_impact(int)
000fdde0 t IVP_Impact_Solver::do_push_on_core(IVP_U_Float_Point*, int)
000fce40 t IVP_Impact_Solver::get_total_energy()
000fe690 t IVP_Impact_Solver::estimate_push_impulse()
000ff0a0 t IVP_Impact_Solver::get_cos_sin_for_impact(float, float, float*, float*)
000fd220 t IVP_Impact_Solver::get_world_push_direction()
000fdf60 t IVP_Impact_Solver::clear_change_values_cores()
000fcea0 t IVP_Impact_Solver::get_relative_speed_vector()
000fe560 t IVP_Impact_Solver::calc_virt_masses_impact_solver(IVP_U_Float_Point const*)
000ffa70 t IVP_Impact_Solver::get_world_direction_second_friction(IVP_Contact_Point*)
000fcf40 t IVP_Impact_Solver::get_world_push_direction_two_friction(double)
000fe210 t IVP_Impact_Solver::do_push(double)
000fe730 t IVP_Impact_Solver::do_impact(IVP_Core**, IVP_BOOL, int, float)
000fd560 t IVP_Impact_Solver::undo_push()
001001c0 t IVP_Impact_System::test_loop_all_pairs()
000ff7f0 t IVP_Impact_System::add_pair_to_impact_system(IVP_Friction_Core_Pair*)
000ff9b0 t IVP_Impact_System::pair_is_already_in_system(IVP_Friction_Core_Pair*)
001003f0 t IVP_Impact_System::recalc_all_affected_cores()
000ffa20 t IVP_Impact_System::invalidate_impact_mindists(IVP_Core*)
00100100 t IVP_Impact_System::debug_check_all_dists_at_end()
00100640 t IVP_Impact_System::init_and_solve_impact_system(IVP_Mindist*, IVP_Friction_System*, IVP_Friction_Core_Pair*, IVP_Contact_Point*)
000ff750 t IVP_Impact_System::impact_system_check_start_pair(IVP_Friction_Core_Pair*, IVP_Contact_Point*)
000ff860 t IVP_Impact_System::add_pushed_core_with_pairs_except(IVP_Core*, IVP_Friction_Core_Pair*)
000ff830 t IVP_Impact_System::synchronize_core_for_impact_system(IVP_Core*)
00100c80 t IVP_Impact_System::~IVP_Impact_System()
00100c80 t IVP_Impact_System::~IVP_Impact_System()
000b5680 t IVP_I_Point_VHash::find_point(IVP_U_Point*)
000b5630 t IVP_I_Point_VHash::remove_point(IVP_U_Point*)
000b5440 t IVP_I_Point_VHash::point_to_index(IVP_U_Point*)
000b55e0 t IVP_I_Point_VHash::add_point(IVP_U_Point*)
000b5700 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
000b5700 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
000b5370 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000b5350 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000b5350 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000fcc80 t IVP_Listener_Hull::hull_manager_is_reset(float, float)
0012c680 t IVP_Range_Manager::get_coll_range_in_world(IVP_Real_Object const*)
0012c710 t IVP_Range_Manager::environment_will_be_deleted(IVP_Environment*)
0012c560 t IVP_Range_Manager::get_coll_range_intra_objects(IVP_Real_Object const*, IVP_Real_Object const*, double*, double*)
0012c730 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
0012c730 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
000d8390 t IVP_Ray_Solver_Os::check_ray_against_compact_ledge_os(IVP_Compact_Ledge const*)
000d8a20 t IVP_Ray_Solver_Os::check_ray_against_compact_surface_os(IVP_Compact_Surface const*)
000d88b0 t IVP_Ray_Solver_Os::check_ray_against_ledge_tree_node_os(IVP_Compact_Ledgetree_Node const*)
000d8a40 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
000d8a40 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
000bb2b0 t IVP_Tetra_Intrude::checkin_edge(IVP_Tri_Edge*)
000bb110 t IVP_Tetra_Intrude::point_2_bits(IVP_U_Point*, IVP_U_Point*, int*)
000bb3f0 t IVP_Tetra_Intrude::checkout_edge(IVP_Tri_Edge*)
000bbb30 t IVP_Tetra_Intrude::check_intrusion(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int, IVP_Intrusion_Status*)
000bb1c0 t IVP_Tetra_Intrude::init_tetra_edge(IVP_Tetra_Edge*, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge*)
000bc6b0 t IVP_Tetra_Intrude::calc_intrusion_status(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int)
000bb070 t IVP_Tetra_Intrude::pe(int)
000baf20 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
000baf20 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
000bb030 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
000bb030 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
00112a10 t IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
00110be0 t IVP_U_Active_Mult::print()
001135b0 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001135b0 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00111a70 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
00111920 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
00111920 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
001127b0 t IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
001109b0 t IVP_U_Active_Sine::print()
001130d0 t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, double, double, double, double)
001130d0 t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, double, double, double, double)
00111210 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
00111150 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
00111150 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
00116260 t IVP_U_Float_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00116110 t IVP_U_Float_Hesse::mult_hesse(double)
00116380 t IVP_U_Float_Hesse::calc_hesse_val(IVP_U_Float_Point const*)
00119fc0 t IVP_U_Float_Hesse::set4(IVP_U_Float_Hesse const*)
001163c0 t IVP_U_Float_Hesse::normize()
0011a040 t IVP_U_Float_Hesse::byte_swap()
0011a010 t IVP_U_Float_Hesse::IVP_U_Float_Hesse(double, double, double, double)
0011a000 t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
0011a010 t IVP_U_Float_Hesse::IVP_U_Float_Hesse(double, double, double, double)
0011a000 t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
0011a290 t IVP_U_Float_Point::set_to_zero()
0011b0e0 t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, double)
0011a440 t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
00114ed0 t IVP_U_Float_Point::fast_normize()
0011b160 t IVP_U_Float_Point::set_multiple(IVP_U_Quat const*, double)
0011a2e0 t IVP_U_Float_Point::set_multiple(IVP_U_Float_Point const*, double)
0011a340 t IVP_U_Float_Point::set_negative(IVP_U_Float_Point const*)
00114bd0 t IVP_U_Float_Point::set_interpolate(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
0011a4c0 t IVP_U_Float_Point::set_pairwise_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00115380 t IVP_U_Float_Point::calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00115240 t IVP_U_Float_Point::set_orthogonal_part(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0011a580 t IVP_U_Float_Point::inline_subtract_and_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
00114e10 t IVP_U_Float_Point::real_length_plus_normize()
0011aa20 t IVP_U_Float_Point::inline_calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0011bfa0 t IVP_U_Float_Point::inline_calc_cross_product_and_normize(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0011b0a0 t IVP_U_Float_Point::add(IVP_U_Float_Point const*)
0011a500 t IVP_U_Float_Point::add(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0011af90 t IVP_U_Float_Point::set(float, float, float)
0011b030 t IVP_U_Float_Point::set(float const*)
0011a2b0 t IVP_U_Float_Point::set(IVP_U_Float_Point const*)
0011aad0 t IVP_U_Float_Point::inline_set_vert_to_area_defined_by_three_points(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0011a3a0 t IVP_U_Float_Point::mult(double)
001159c0 t IVP_U_Float_Point::rotate(IVP_COORDINATE_INDEX, float)
00114f90 t IVP_U_Float_Point::normize()
0011b060 t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*)
0011a540 t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00119cd0 t IVP_U_Float_Point::byte_swap()
001150d0 t IVP_U_Float_Point::line_sqrt()
00119c90 t IVP_U_Float_Point::IVP_U_Float_Point(double, double, double)
0011b670 t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
00119c80 t IVP_U_Float_Point::IVP_U_Float_Point()
00119c90 t IVP_U_Float_Point::IVP_U_Float_Point(double, double, double)
0011b670 t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
00119c80 t IVP_U_Float_Point::IVP_U_Float_Point()
00114940 t IVP_U_String_Hash::add(char const*, void*)
001149f0 t IVP_U_String_Hash::remove(char const*)
00114800 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
00114800 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
00114830 t IVP_U_String_Hash::~IVP_U_String_Hash()
00114830 t IVP_U_String_Hash::~IVP_U_String_Hash()
0011f280 t IVP_U_Vector_Base::increment_mem()
000b5ce0 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
000b5ce0 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
000686e0 t CDefSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00051dd0 t CDefSaveRestoreOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
00068700 t CDefSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
000686f0 t CDefSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
00068710 t CDefSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
00038b30 t CPhysicsConstraint::Deactivate()
0003b6a0 t CPhysicsConstraint::InitLength(IVP_Environment*, CPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0003b320 t CPhysicsConstraint::InitPulley(IVP_Environment*, CPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
0003cd90 t CPhysicsConstraint::InitRagdoll(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
0003ad30 t CPhysicsConstraint::InitSliding(IVP_Environment*, CPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0003e490 t CPhysicsConstraint::SetGameData(void*)
0003cb40 t CPhysicsConstraint::DetachListener()
0003aa80 t CPhysicsConstraint::InitBallsocket(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
00038c40 t CPhysicsConstraint::SetLinearMotor(float, float)
0003e550 t CPhysicsConstraint::OutputDebugInfo()
00038f90 t CPhysicsConstraint::SetAngularMotor(float, float)
0003ccf0 t CPhysicsConstraint::SetupRagdollAxis(int, constraint_axislimit_t const&, hk_Limited_Ball_Socket_BP*)
0003e4f0 t CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
0003e4b0 t CPhysicsConstraint::event_object_created(IVP_Event_Object*)
0003cba0 t CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
0003e4d0 t CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
00038f70 t CPhysicsConstraint::UpdateRagdollTransforms(matrix3x4_t const&, matrix3x4_t const&)
00038cd0 t CPhysicsConstraint::UpdateRagdollTransforms(matrix3x4_t const&, matrix3x4_t const&) [clone .part.24]
00038ac0 t CPhysicsConstraint::Activate()
0003a6b0 t CPhysicsConstraint::InitFixed(IVP_Environment*, CPhysicsConstraintGroup*, constraint_fixedparams_t const&)
0003a140 t CPhysicsConstraint::InitHinge(IVP_Environment*, CPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
0003a070 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
0003a070 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
0003ccc0 t CPhysicsConstraint::~CPhysicsConstraint()
0003cc40 t CPhysicsConstraint::~CPhysicsConstraint()
0003cc40 t CPhysicsConstraint::~CPhysicsConstraint()
00072620 t CUtlCharConversion::FindConversion(char const*, int*)
00072820 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00072820 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00059240 t CVehicleController::CalcEngine(float, float, bool, float, bool)
000564a0 t CVehicleController::IsBoosting()
00057430 t CVehicleController::ResetState()
00057630 t CVehicleController::CreateWheel(int, vehicle_axleparams_t&)
00058e10 t CVehicleController::CalcSteering(float, float, float, bool)
00059760 t CVehicleController::UpdateEngine(vehicle_controlparams_t const&, float, float, float, bool, bool)
0005a2c0 t CVehicleController::GetWheelCount()
00058260 t CVehicleController::InitCarSystem(CPhysicsObject*)
000564d0 t CVehicleController::OnVehicleExit()
00056450 t CVehicleController::UpdateBooster(float)
00057610 t CVehicleController::AttachListener()
00056620 t CVehicleController::OnVehicleEnter()
00058a80 t CVehicleController::UpdateSkidding(bool)
00059030 t CVehicleController::UpdateSteering(vehicle_controlparams_t const&, float, float)
00057980 t CVehicleController::CreateTraceData(int, vehicle_axleparams_t&)
00058320 t CVehicleController::InitVehicleData(vehicleparams_t const&)
00056430 t CVehicleController::SetSpringLength(int, float)
00058950 t CVehicleController::UpdateHandbrake(vehicle_controlparams_t const&, float, bool, bool)
00059a80 t CVehicleController::WriteToTemplate(vphysics_save_cvehiclecontroller_t&)
00057ea0 t CVehicleController::CreateIVPObjects()
0005a2a0 t CVehicleController::GetVehicleParams()
00059ce0 t CVehicleController::InitFromTemplate(CPhysicsEnvironment*, void*, IPhysicsGameTrace*, vphysics_save_cvehiclecontroller_t const&)
0005a2f0 t CVehicleController::IsEngineDisabled()
000565f0 t CVehicleController::SetWheelFriction(int, float)
000585b0 t CVehicleController::UpdatePowerslide(vehicle_controlparams_t const&, bool, float)
00057b90 t CVehicleController::InitCarSystemBody(IVP_Template_Car_System&)
0005a2d0 t CVehicleController::SetEngineDisabled(bool)
00058120 t CVehicleController::ShutdownCarSystem()
00058bf0 t CVehicleController::UpdateExtraForces()
00056380 t CVehicleController::VehicleDataReload()
0005a290 t CVehicleController::GetOperatingParams()
0005a340 t CVehicleController::event_object_frozen(IVP_Event_Object*)
00057c10 t CVehicleController::InitCarSystemWheels(IVP_Template_Car_System&)
0005a300 t CVehicleController::event_object_created(IVP_Event_Object*)
00058230 t CVehicleController::event_object_deleted(IVP_Event_Object*)
0005a320 t CVehicleController::event_object_revived(IVP_Event_Object*)
000566e0 t CVehicleController::GetWheelContactPoint(int, Vector*, int*)
00058de0 t CVehicleController::UpdateWheelPositions()
00056930 t CVehicleController::GetCarSystemDebugData(vehicle_debugcarsystem_t&)
000590b0 t CVehicleController::CalcEngineTransmission(float)
00058810 t CVehicleController::UpdateEngineTurboStart(vehicle_controlparams_t const&, float)
000588f0 t CVehicleController::UpdateEngineTurboFinish()
0005a2b0 t CVehicleController::GetVehicleParamsForChange()
00059830 t CVehicleController::Update(float, vehicle_controlparams_t&)
00056670 t CVehicleController::GetWheel(int)
00058550 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
000575f0 t CVehicleController::CVehicleController()
00058550 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
000575f0 t CVehicleController::CVehicleController()
000581e0 t CVehicleController::~CVehicleController()
00058190 t CVehicleController::~CVehicleController()
00058190 t CVehicleController::~CVehicleController()
000935a0 t hk_Rigid_Body_Core::apply_impulses(hk_Core_VMQ_Input&, float const*)
00093340 t hk_Rigid_Body_Core::add_to_mass_matrix_inv(hk_Core_VMQ_Input&, hk_Dense_Matrix&, float*)
0003e510 t IPhysicsConstraint::~IPhysicsConstraint()
0003e470 t IPhysicsConstraint::~IPhysicsConstraint()
0003e470 t IPhysicsConstraint::~IPhysicsConstraint()
000db800 t IVP_Actuator_Extra::do_float_cam(double)
000db5a0 t IVP_Actuator_Extra::do_puck_force(double)
000db380 t IVP_Actuator_Extra::get_float_cam_props(double*, double*, double*, double*)
000d9790 t IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
000db710 t IVP_Actuator_Extra::calc_float_cam_matrix(IVP_U_Matrix*)
000dba90 t IVP_Actuator_Extra::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000db360 t IVP_Actuator_Extra::get_force()
000dbde0 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
000dbde0 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
000da510 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000da450 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000da450 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000dc620 t IVP_Actuator_Force::get_controller_name()
000d9ac0 t IVP_Actuator_Force::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000db310 t IVP_Actuator_Force::set_force(double)
000dbc80 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
000dbc80 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
000da3c0 t IVP_Actuator_Force::~IVP_Actuator_Force()
000da3a0 t IVP_Actuator_Force::~IVP_Actuator_Force()
000da3a0 t IVP_Actuator_Force::~IVP_Actuator_Force()
0010e360 t IVP_Anomaly_Limits::get_max_collisions_per_psi()
0010dac0 t IVP_Anomaly_Limits::environment_will_be_deleted(IVP_Environment*)
0010e370 t IVP_Anomaly_Limits::get_max_collision_checks_per_psi()
0010dba0 t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
0010dba0 t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
0010d970 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
0010d920 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
0010d920 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
000e2b30 t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
000e2b30 t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
000eb2a0 t IVP_Core_Collision::split_collision_merged_core_next_PSI()
000ec0d0 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
000ec0d0 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
000ec820 t IVP_Freeze_Manager::init_freeze_manager()
000ec810 t IVP_Freeze_Manager::IVP_Freeze_Manager()
000ec810 t IVP_Freeze_Manager::IVP_Freeze_Manager()
00068240 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
000681f0 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
000681f0 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
000b5240 t IVP_I_FPoint_VHash::find_point(IVP_U_Float_Point*)
000b51f0 t IVP_I_FPoint_VHash::remove_point(IVP_U_Float_Point*)
000b5160 t IVP_I_FPoint_VHash::point_to_index(IVP_U_Float_Point*)
000b51a0 t IVP_I_FPoint_VHash::add_point(IVP_U_Float_Point*)
000b52c0 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
000b52c0 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
000b5100 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000b50e0 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000b50e0 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000d9680 t IVP_Ray_Solver_Min::get_ray_hit()
000d96a0 t IVP_Ray_Solver_Min::get_ray_dist()
000d7890 t IVP_Ray_Solver_Min::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, double, IVP_U_Point*)
000d9710 t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
000d9710 t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
000d95f0 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
000d95a0 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
000d95a0 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
0010ff20 t IVP_SurfaceManager::add_reference_to_ledge(IVP_Compact_Ledge const*)
0010ff30 t IVP_SurfaceManager::remove_reference_to_ledge(IVP_Compact_Ledge const*)
0010ff10 t IVP_SurfaceManager::get_ledge_specific_client_data(IVP_Compact_Ledge const*)
0010fef0 t IVP_SurfaceManager::set_ledge_specific_client_data(IVP_Compact_Ledge*, unsigned int)
0010fed0 t IVP_SurfaceManager::~IVP_SurfaceManager()
0010fec0 t IVP_SurfaceManager::~IVP_SurfaceManager()
0010fec0 t IVP_SurfaceManager::~IVP_SurfaceManager()
000da880 t IVP_Template_Force::IVP_Template_Force()
000da880 t IVP_Template_Force::IVP_Template_Force()
0010d330 t IVP_Time_Event_PSI::simulate_time_event(IVP_Environment*)
0010d910 t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
0010d910 t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
001aed80 d IVP_U_Active_Float::change_meter
00112c10 t IVP_U_Active_Float::add_dependency(IVP_U_Active_Float_Listener*)
00112720 t IVP_U_Active_Float::update_derived()
00113aa0 t IVP_U_Active_Float::get_float_value()
00113a90 t IVP_U_Active_Float::give_double_value()
00112c50 t IVP_U_Active_Float::remove_dependency(IVP_U_Active_Float_Listener*)
00112180 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
00112180 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
001108d0 t IVP_U_Active_Float::~IVP_U_Active_Float()
00110870 t IVP_U_Active_Float::~IVP_U_Active_Float()
00110870 t IVP_U_Active_Float::~IVP_U_Active_Float()
00112a60 t IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
00110c50 t IVP_U_Active_Limit::print()
00113670 t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, double, double)
00113670 t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, double, double)
001113d0 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
00111310 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
00111310 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
001128a0 t IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
00110a80 t IVP_U_Active_Pulse::print()
00113270 t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, double, int, int, double, double)
00113270 t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, double, int, int, double, double)
001114b0 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
001113f0 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
001113f0 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
00113a40 t IVP_U_Active_Value::add_reference()
00113a50 t IVP_U_Active_Value::remove_reference()
00113a80 t IVP_U_Active_Value::get_name()
00112150 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
00112150 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
00110830 t IVP_U_Active_Value::~IVP_U_Active_Value()
00110800 t IVP_U_Active_Value::~IVP_U_Active_Value()
00110800 t IVP_U_Active_Value::~IVP_U_Active_Value()
0011aff0 t IVP_U_Float_Point3::set(double const*)
0011afc0 t IVP_U_Float_Point3::set(float const*)
00119c50 t IVP_U_Float_Point3::byte_swap()
00139280 t IVP_U_Matrix_Cache::calc_matrix_at(IVP_Time, int)
001392d0 t IVP_U_Matrix_Cache::calc_matrix_at_now(IVP_Time, int)
001393c0 t IVP_U_Matrix_Cache::calc_calc_matrix_cache(IVP_Cache_Object*)
001b7a9c b IVP_U_Matrix_Cache::hits
001b7a98 b IVP_U_Matrix_Cache::misses
001392e0 t IVP_U_Matrix_Cache::p_init(IVP_Cache_Object*)
00139350 t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
00139350 t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
0004ac90 t CIVPMaterialManager::SetPropMap(int*, int)
0004c260 t CIVPMaterialManager::get_elasticity(IVP_Contact_Situation*)
0004c300 t CIVPMaterialManager::get_friction_factor(IVP_Contact_Situation*)
0004a670 t CIVPMaterialManager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
0004ab40 t CIVPMaterialManager::CIVPMaterialManager()
0004ab40 t CIVPMaterialManager::CIVPMaterialManager()
0004c240 t CIVPMaterialManager::~CIVPMaterialManager()
0004c1f0 t CIVPMaterialManager::~CIVPMaterialManager()
0004c1f0 t CIVPMaterialManager::~CIVPMaterialManager()
0003fa80 t CPhysicsEnvironment::ClearStats()
0003fdf0 t CPhysicsEnvironment::PhantomAdd(CPhysicsObject*)
000685d0 t CPhysicsEnvironment::PreRestore(physprerestoreparams_t const&)
0003f5d0 t CPhysicsEnvironment::SetGravity(Vector const&)
00068490 t CPhysicsEnvironment::PostRestore()
0003f710 t CPhysicsEnvironment::CreateSpring(IPhysicsObject*, IPhysicsObject*, springparams_t*)
000401f0 t CPhysicsEnvironment::DestroyObject(IPhysicsObject*)
0003f140 t CPhysicsEnvironment::DestroySpring(IPhysicsSpring*)
0003fe30 t CPhysicsEnvironment::PhantomRemove(CPhysicsObject*)
0003f2c0 t CPhysicsEnvironment::SetAirDensity(float)
000419e0 t CPhysicsEnvironment::SetQuickDelete(bool)
00041690 t CPhysicsEnvironment::TransferObject(IPhysicsObject*, IPhysicsEnvironment*)
0003efd0 t CPhysicsEnvironment::GetDebugOverlay()
0003ef80 t CPhysicsEnvironment::SetDebugOverlay(void* (*)(char const*, int*))
000403a0 t CPhysicsEnvironment::ClearDeadObjects()
000400b0 t CPhysicsEnvironment::CreatePolyObject(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
0003f320 t CPhysicsEnvironment::SweepCollideable(CPhysCollide const*, Vector const&, Vector const&, QAngle const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
000404e0 t CPhysicsEnvironment::CleanupDeleteList()
0003fff0 t CPhysicsEnvironment::DestroyConstraint(IPhysicsConstraint*)
00041a00 t CPhysicsEnvironment::EnableDeleteQueue(bool)
00040330 t CPhysicsEnvironment::CreateSphereObject(float, int, Vector const&, QAngle const&, objectparams_t*, bool)
0003f540 t CPhysicsEnvironment::DebugCheckContacts()
0003f190 t CPhysicsEnvironment::SetCollisionSolver(IPhysicsCollisionSolver*)
000404f0 t CPhysicsEnvironment::AddPlayerController(IPhysicsPlayerController*)
0003fd90 t CPhysicsEnvironment::FindPlayerController(IPhysicsObject*)
0003f900 t CPhysicsEnvironment::ResetSimulationClock()
0003f8e0 t CPhysicsEnvironment::CreateConstraintGroup(constraint_groupparams_t const&)
0003f840 t CPhysicsEnvironment::CreateFixedConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
0003fb50 t CPhysicsEnvironment::CreateFluidController(IPhysicsObject*, fluidparams_t*)
0003f770 t CPhysicsEnvironment::CreateHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_hingeparams_t const&)
0003f1d0 t CPhysicsEnvironment::SetObjectEventHandler(IPhysicsObjectEvent*)
0003f950 t CPhysicsEnvironment::SetSimulationTimestep(float)
0003f8c0 t CPhysicsEnvironment::CreateLengthConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0003f9a0 t CPhysicsEnvironment::CreateMotionController(IMotionEvent*)
00040550 t CPhysicsEnvironment::CreatePlayerController(IPhysicsObject*)
00040120 t CPhysicsEnvironment::CreatePolyObjectStatic(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
0003f8a0 t CPhysicsEnvironment::CreatePulleyConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
0003f980 t CPhysicsEnvironment::CreateShadowController(IPhysicsObject*, bool, bool)
0003f160 t CPhysicsEnvironment::DestroyConstraintGroup(IPhysicsConstraintGroup*)
0003f490 t CPhysicsEnvironment::DestroyFluidController(IPhysicsFluidController*)
0003f480 t CPhysicsEnvironment::EnableConstraintNotify(bool)
0003fe70 t CPhysicsEnvironment::RemovePlayerController(IPhysicsPlayerController*)
0003f9c0 t CPhysicsEnvironment::SetPerformanceSettings(physics_performanceparams_t const*)
0003f730 t CPhysicsEnvironment::CreateRagdollConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
0003f860 t CPhysicsEnvironment::CreateSlidingConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0003f9b0 t CPhysicsEnvironment::CreateVehicleController(IPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
0003f230 t CPhysicsEnvironment::DestroyMotionController(IPhysicsMotionController*)
0003fe90 t CPhysicsEnvironment::DestroyPlayerController(IPhysicsPlayerController*)
0003f210 t CPhysicsEnvironment::DestroyShadowController(IPhysicsShadowController*)
0003f6e0 t CPhysicsEnvironment::SerializeObjectToBuffer(IPhysicsObject*, unsigned char*, unsigned int)
0003f250 t CPhysicsEnvironment::DestroyVehicleController(IPhysicsVehicleController*)
0003fd50 t CPhysicsEnvironment::GetCollisionEventHandler()
0003fd60 t CPhysicsEnvironment::NotifyConstraintDisabled(IPhysicsConstraint*)
0003f1b0 t CPhysicsEnvironment::SetCollisionEventHandler(IPhysicsCollisionEvent*)
0003f1f0 t CPhysicsEnvironment::SetConstraintEventHandler(IPhysicsConstraintEvent*)
0003f880 t CPhysicsEnvironment::CreateBallsocketConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
00040190 t CPhysicsEnvironment::UnserializeObjectFromBuffer(void*, unsigned char*, unsigned int, bool)
0003f750 t CPhysicsEnvironment::CreateLimitedHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
00068360 t CPhysicsEnvironment::Save(physsaveparams_t const&)
00068630 t CPhysicsEnvironment::Restore(physrestoreparams_t const&)
00040b60 t CPhysicsEnvironment::Simulate(float)
0003f180 t CPhysicsEnvironment::TraceBox(CGameTrace*, Vector const&, Vector const&, Vector const&, Vector const&)
0003f310 t CPhysicsEnvironment::TraceRay(Ray_t const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
0003f3d0 t CPhysicsEnvironment::ReadStats(physics_stats_t*)
00040580 t CPhysicsEnvironment::CPhysicsEnvironment()
00040580 t CPhysicsEnvironment::CPhysicsEnvironment()
00040b40 t CPhysicsEnvironment::~CPhysicsEnvironment()
00040940 t CPhysicsEnvironment::~CPhysicsEnvironment()
00040940 t CPhysicsEnvironment::~CPhysicsEnvironment()
000753c0 t CUtlNoEscConversion::FindConversion(char const*, int*)
00082400 t hk_Fixed_Constraint::init_constraint(void const*)
00082490 t hk_Fixed_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
000829f0 t hk_Fixed_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00082ab0 t hk_Fixed_Constraint::get_constraint_dof()
000827c0 t hk_Fixed_Constraint::write_to_blueprint(hk_Fixed_BP*)
00082aa0 t hk_Fixed_Constraint::get_constraint_type()
000823f0 t hk_Fixed_Constraint::get_vmq_storage_size()
00082730 t hk_Fixed_Constraint::init_fixed_constraint(hk_Fixed_BP const*)
00082b10 t hk_Fixed_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00082850 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00082920 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00082850 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00082920 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00082ae0 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00082ac0 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00082ac0 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
000840f0 t hk_Hinge_BP_Builder::set_axis_ws(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&)
000840c0 t hk_Hinge_BP_Builder::set_position_os(int, hk_Vector3 const&)
000846b0 t hk_Hinge_BP_Builder::set_axis_perp_os(int, hk_Vector3 const&)
00084750 t hk_Hinge_BP_Builder::set_angular_motor(float, float)
00084790 t hk_Hinge_BP_Builder::set_angular_limits(float, float)
000847f0 t hk_Hinge_BP_Builder::set_joint_friction(float)
00084820 t hk_Hinge_BP_Builder::set_tau(float)
00087460 t hk_Hinge_Constraint::set_limits(float, float)
000874d0 t hk_Hinge_Constraint::set_friction(float)
00087100 t hk_Hinge_Constraint::init_constraint(void const*)
00084850 t hk_Hinge_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
000873b0 t hk_Hinge_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00087560 t hk_Hinge_Constraint::get_constraint_dof()
00087110 t hk_Hinge_Constraint::write_to_blueprint(hk_Hinge_BP*)
00087550 t hk_Hinge_Constraint::get_constraint_type()
00084840 t hk_Hinge_Constraint::get_vmq_storage_size()
00086730 t hk_Hinge_Constraint::init_hinge_constraint(hk_Hinge_BP const*)
00084b30 t hk_Hinge_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00087510 t hk_Hinge_Constraint::set_motor(float, float)
00087240 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00087300 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00087240 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00087300 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00087590 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
00087570 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
00087570 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
00042290 t IPhysicsEnvironment::~IPhysicsEnvironment()
000419d0 t IPhysicsEnvironment::~IPhysicsEnvironment()
000419d0 t IPhysicsEnvironment::~IPhysicsEnvironment()
00125d90 t IVP_3D_Solver_PK_KK::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000dd730 t IVP_Actuator_Spring::get_constant()
000dd300 t IVP_Actuator_Spring::set_constant(double)
000dd750 t IVP_Actuator_Spring::get_damp_factor()
000dd7b0 t IVP_Actuator_Spring::get_only_stretch()
000dd770 t IVP_Actuator_Spring::get_rel_pos_damp()
000dd360 t IVP_Actuator_Spring::set_rel_pos_damp(double)
000dd2c0 t IVP_Actuator_Spring::set_break_max_len(double)
000dd710 t IVP_Actuator_Spring::get_controller_name()
000dcf20 t IVP_Actuator_Spring::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dced0 t IVP_Actuator_Spring::fire_event_spring_broken()
000dd790 t IVP_Actuator_Spring::get_spring_length_zero_force()
000dd280 t IVP_Actuator_Spring::set_len(double)
000dd330 t IVP_Actuator_Spring::set_damp(double)
000dd400 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
000dd400 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
000dccd0 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000dcc10 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000dcc10 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000dc740 t IVP_Actuator_Torque::get_torque()
000db510 t IVP_Actuator_Torque::set_torque(double)
000dc640 t IVP_Actuator_Torque::get_controller_name()
000db4c0 t IVP_Actuator_Torque::set_max_rotation_speed(double)
000d99a0 t IVP_Actuator_Torque::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dc220 t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
000dc220 t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
000da670 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
000da630 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
000da630 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
0010de90 t IVP_Anomaly_Manager::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, double)
0010db00 t IVP_Anomaly_Manager::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
0010da60 t IVP_Anomaly_Manager::get_push_speed_penetration(IVP_Real_Object*, IVP_Real_Object*)
0010dae0 t IVP_Anomaly_Manager::environment_will_be_deleted(IVP_Environment*)
0010d9b0 t IVP_Anomaly_Manager::max_angular_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
0010d960 t IVP_Anomaly_Manager::max_collision_checks_exceeded(int)
0010dc00 t IVP_Anomaly_Manager::solve_inter_penetration_simple(IVP_Real_Object*, IVP_Real_Object*, double)
0010d950 t IVP_Anomaly_Manager::max_contacts_exceeded_check_freezing(IVP_Core**, int)
0010d940 t IVP_Anomaly_Manager::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
0010dbe0 t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
0010dbe0 t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
0010d990 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
0010d930 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
0010d930 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
000e2b50 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
000e2b50 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
00131bf0 t IVP_Buoyancy_Solver::compute_forces(IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_Real_Object*)
001300b0 t IVP_Buoyancy_Solver::compute_values_for_one_ball(IVP_Real_Object const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
00131d30 t IVP_Buoyancy_Solver::compute_values_for_one_ledge(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
001319d0 t IVP_Buoyancy_Solver::compute_values_for_one_polygon(IVP_Real_Object*, IVP_U_Float_Hesse const*)
00130340 t IVP_Buoyancy_Solver::compute_values_for_one_triangle(IVP_Real_Object*, IVP_Compact_Triangle const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_Compact_Ledge const*)
0012cc50 t IVP_Buoyancy_Solver::compute_disection_points_with_ball(IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, float const&, IVP_U_Float_Point*, IVP_U_Float_Point*)
0012ca80 t IVP_Buoyancy_Solver::compute_buoyancy_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0012cfc0 t IVP_Buoyancy_Solver::compute_dampening_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0012c970 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
0012c970 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
00106c00 t IVP_Cluster_Manager::add_object(IVP_Real_Object*)
001080b0 t IVP_Cluster_Manager::remove_object(IVP_Real_Object*)
00106890 t IVP_Cluster_Manager::get_root_cluster()
00107360 t IVP_Cluster_Manager::add_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
00107e30 t IVP_Cluster_Manager::add_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
001075d0 t IVP_Cluster_Manager::remove_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
001069d0 t IVP_Cluster_Manager::check_for_unused_objects(IVP_Universe_Manager*)
001077a0 t IVP_Cluster_Manager::fire_event_object_frozen(IVP_Event_Object*)
00108630 t IVP_Cluster_Manager::fire_event_pre_collision(IVP_Real_Object*, IVP_Event_Collision*)
00107490 t IVP_Cluster_Manager::fire_event_object_created(IVP_Event_Object*)
00107980 t IVP_Cluster_Manager::fire_event_object_deleted(IVP_Event_Object*)
00107ac0 t IVP_Cluster_Manager::fire_event_object_revived(IVP_Event_Object*)
001084e0 t IVP_Cluster_Manager::fire_event_post_collision(IVP_Real_Object*, IVP_Event_Collision*)
00108310 t IVP_Cluster_Manager::remove_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
00108780 t IVP_Cluster_Manager::fire_event_friction_created(IVP_Real_Object*, IVP_Event_Friction*)
00107f60 t IVP_Cluster_Manager::fire_event_friction_deleted(IVP_Real_Object*, IVP_Event_Friction*)
001088d0 t IVP_Cluster_Manager::fire_event_collision_object_deleted(IVP_Real_Object*)
00106950 t IVP_Cluster_Manager::get_next_real_object_in_cluster_tree(IVP_Object*)
001068a0 t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
001068a0 t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
00106bb0 t IVP_Cluster_Manager::~IVP_Cluster_Manager()
00106bb0 t IVP_Cluster_Manager::~IVP_Cluster_Manager()
00110150 t IVP_Compact_Surface::byte_swap_all(IVP_BOOL, int)
001100a0 t IVP_Compact_Surface::byte_swap()
0010d1b0 t IVP_Event_Manager_D::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
0010d890 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
0010d850 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
0010d850 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
000f63a0 t IVP_Friction_Solver::complex_failed(IVP_Friction_System*)
000f6840 t IVP_Friction_Solver::calc_solver_PSI(IVP_Friction_System*, int*)
000f5540 t IVP_Friction_Solver::do_penalty_step(float*, float*, float, float)
000f1940 t IVP_Friction_Solver::ease_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*, double)
000f4e10 t IVP_Friction_Solver::factor_result_vec()
000f1da0 t IVP_Friction_Solver::ease_friction_pair(IVP_Friction_Core_Pair*, IVP_U_Memory*)
000f60c0 t IVP_Friction_Solver::do_inactives_pushes(IVP_Friction_System*)
000f63d0 t IVP_Friction_Solver::do_resulting_pushes(IVP_Friction_System*)
000f6750 t IVP_Friction_Solver::setup_coords_mindists(IVP_Friction_System*)
000f1930 t IVP_Friction_Solver::ease_test_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*)
000f4e50 t IVP_Friction_Solver::normize_constraint_equ()
000f6390 t IVP_Friction_Solver::debug_distance_after_push(int)
000f73b0 t IVP_Friction_Solver::solve_linear_equation_and_push(IVP_Friction_System*, int*, int, IVP_U_Memory*)
000f4ce0 t IVP_Friction_Solver::test_gauss_solution_suggestion(double*, int*, int, IVP_U_Memory*)
000f2370 t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
000f2370 t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
000f3320 t IVP_Friction_System::reset_time(IVP_Time)
000f2b00 t IVP_Friction_System::add_fr_pair(IVP_Friction_Core_Pair*)
000f2b50 t IVP_Friction_System::del_fr_pair(IVP_Friction_Core_Pair*)
000f3310 t IVP_Friction_System::print_all_dists()
000f2c80 t IVP_Friction_System::union_find_fr_sys()
00106fd0 t IVP_Friction_System::add_core_to_system(IVP_Core*)
00106fa0 t IVP_Friction_System::add_dist_to_system(IVP_Contact_Point*)
000f43e0 t IVP_Friction_System::debug_fs_out_ascii()
000f76c0 t IVP_Friction_System::do_friction_system(IVP_Event_Sim const*)
000f4450 t IVP_Friction_System::find_pair_of_cores(IVP_Core*, IVP_Core*)
000f27c0 t IVP_Friction_System::apply_real_friction(IVP_Event_Sim const*)
00108b10 t IVP_Friction_System::get_controller_name()
000f7330 t IVP_Friction_System::get_max_energy_gain()
000f72e0 t IVP_Friction_System::undo_complex_pushes()
000f15e0 t IVP_Friction_System::calc_friction_forces(IVP_Event_Sim const*)
000ffa00 t IVP_Friction_System::debug_clean_tmp_info()
000f1ff0 t IVP_Friction_System::ease_friction_forces()
000f4730 t IVP_Friction_System::get_controlled_cores(IVP_U_Vector<IVP_Core>*)
000f6fe0 t IVP_Friction_System::ivp_debug_fs_pointers()
000f2dd0 t IVP_Friction_System::split_friction_system(IVP_Core*)
000f7290 t IVP_Friction_System::confirm_complex_pushes()
000f43f0 t IVP_Friction_System::core_is_found_in_pairs(IVP_Core*)
000f70b0 t IVP_Friction_System::core_is_terminal_in_fs(IVP_Core*)
000f2bf0 t IVP_Friction_System::get_pair_info_for_objs(IVP_Core*, IVP_Core*)
000f6fa0 t IVP_Friction_System::exchange_friction_dists(IVP_Contact_Point*, IVP_Contact_Point*)
001b512c b IVP_Friction_System::friction_global_counter
000f27f0 t IVP_Friction_System::fusion_friction_systems(IVP_Friction_System*)
00108b20 t IVP_Friction_System::get_controller_priority()
00107080 t IVP_Friction_System::remove_core_from_system(IVP_Core*)
00106ec0 t IVP_Friction_System::remove_dist_from_system(IVP_Contact_Point*)
000f24a0 t IVP_Friction_System::delete_friction_distance(IVP_Contact_Point*)
000f48a0 t IVP_Friction_System::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000f6740 t IVP_Friction_System::test_hole_fr_system_data()
000f50b0 t IVP_Friction_System::do_pushes_distance_keepers(IVP_Event_Sim const*)
000f71a0 t IVP_Friction_System::kinetic_energy_of_hole_frs()
00106f00 t IVP_Friction_System::dist_added_update_pair_info(IVP_Contact_Point*)
000f6ff0 t IVP_Friction_System::bubble_sort_dists_importance()
000f3450 t IVP_Friction_System::clear_integrated_anti_energy()
00106d30 t IVP_Friction_System::fs_recalc_all_contact_points()
000f6ef0 t IVP_Friction_System::reorder_mindists_for_complex()
00106e10 t IVP_Friction_System::dist_removed_update_pair_info(IVP_Contact_Point*)
000f2c40 t IVP_Friction_System::debug_check_system_consistency()
000f4750 t IVP_Friction_System::get_associated_controlled_cores()
000f5080 t IVP_Friction_System::get_num_supposed_active_frdists()
000f4740 t IVP_Friction_System::get_minimum_simulation_frequency()
000f7110 t IVP_Friction_System::static_fr_oversized_matrix_panic()
000f4a10 t IVP_Friction_System::core_is_going_to_be_deleted_event(IVP_Core*)
000f3df0 t IVP_Friction_System::remove_energy_gained_by_real_friction()
00106cb0 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
00106cb0 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
00106870 t IVP_Friction_System::~IVP_Friction_System()
001067c0 t IVP_Friction_System::~IVP_Friction_System()
001067c0 t IVP_Friction_System::~IVP_Friction_System()
000fa490 t IVP_Incr_L_U_Matrix::normize_row(int)
000faff0 t IVP_Incr_L_U_Matrix::add_neg_col_L(int, int, double)
000fba20 t IVP_Incr_L_U_Matrix::add_neg_row_L(int, int, double)
000fc860 t IVP_Incr_L_U_Matrix::debug_print_a()
000fbb20 t IVP_Incr_L_U_Matrix::decrement_l_u(int)
000fb240 t IVP_Incr_L_U_Matrix::increment_l_u()
000fa3d0 t IVP_Incr_L_U_Matrix::normize_row_L(int)
000fb600 t IVP_Incr_L_U_Matrix::solve_lin_equ()
000faca0 t IVP_Incr_L_U_Matrix::subtract_row_L(int, int, double)
000fc780 t IVP_Incr_L_U_Matrix::debug_print_l_u()
000fb110 t IVP_Incr_L_U_Matrix::mult_vec_with_L()
000fa7d0 t IVP_Incr_L_U_Matrix::pivot_search_l_u(int)
000fb4b0 t IVP_Incr_L_U_Matrix::solve_vec_with_U()
000fa5f0 t IVP_Incr_L_U_Matrix::exchange_rows_l_u(int, int)
000fb050 t IVP_Incr_L_U_Matrix::exchange_columns_L(int, int)
000fb0b0 t IVP_Incr_L_U_Matrix::exchange_columns_U(int, int)
000faa80 t IVP_Incr_L_U_Matrix::add_neg_row_to_row_l_u(int, int, double)
000fa860 t IVP_Incr_L_U_Matrix::add_neg_row_upwards_l_u(int, int, double)
000fadc0 t IVP_Incr_L_U_Matrix::l_u_decomposition_with_pivoting()
00108b40 t IVP_Listener_Object::~IVP_Listener_Object()
00108a20 t IVP_Listener_Object::~IVP_Listener_Object()
00108a20 t IVP_Listener_Object::~IVP_Listener_Object()
0010fa80 t IVP_Material_Simple::get_damping()
0010fa90 t IVP_Material_Simple::get_adhesion()
0010fa70 t IVP_Material_Simple::get_elasticity()
0010fa60 t IVP_Material_Simple::get_friction_factor()
0010fc40 t IVP_Material_Simple::get_second_friction_factor()
0010faa0 t IVP_Material_Simple::get_name()
0010fc00 t IVP_Material_Simple::IVP_Material_Simple(double, double)
0010fbc0 t IVP_Material_Simple::IVP_Material_Simple()
0010fc00 t IVP_Material_Simple::IVP_Material_Simple(double, double)
0010fbc0 t IVP_Material_Simple::IVP_Material_Simple()
0010fad0 t IVP_Material_Simple::~IVP_Material_Simple()
0010fa50 t IVP_Material_Simple::~IVP_Material_Simple()
0010fa50 t IVP_Material_Simple::~IVP_Material_Simple()
001222e0 t IVP_Mindist_Manager::print_mindists()
001224b0 t IVP_Mindist_Manager::recheck_ov_element(IVP_Real_Object*)
001235a0 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float)
00123460 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float, float)
001232d0 t IVP_Mindist_Manager::remove_hull_mindist(IVP_Mindist*)
00122340 t IVP_Mindist_Manager::insert_exact_mindist(IVP_Mindist*)
001247e0 t IVP_Mindist_Manager::mindist_left_phantom(IVP_Mindist*)
00121f80 t IVP_Mindist_Manager::mindist_left_phantom(IVP_Mindist*) [clone .part.23]
001248c0 t IVP_Mindist_Manager::recalc_exact_mindist(IVP_Mindist*)
001230f0 t IVP_Mindist_Manager::remove_exact_mindist(IVP_Mindist*)
00124b40 t IVP_Mindist_Manager::create_exact_mindists(IVP_Real_Object*, IVP_Real_Object*, double, IVP_U_FVector<IVP_Collision>*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Collision_Delegator*)
00122430 t IVP_Mindist_Manager::insert_invalid_mindist(IVP_Mindist*)
00123240 t IVP_Mindist_Manager::remove_invalid_mindist(IVP_Mindist*)
001247c0 t IVP_Mindist_Manager::mindist_entered_phantom(IVP_Mindist*)
00121f20 t IVP_Mindist_Manager::mindist_entered_phantom(IVP_Mindist*) [clone .part.22]
00123ee0 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float)
00123e40 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float, float)
00124b00 t IVP_Mindist_Manager::recalc_all_exact_mindists()
001249e0 t IVP_Mindist_Manager::recalc_all_exact_wheel_mindist()
00123cf0 t IVP_Mindist_Manager::insert_and_recalc_exact_mindist(IVP_Mindist*)
00123be0 t IVP_Mindist_Manager::recalc_all_exact_mindists_events()
00123fd0 t IVP_Mindist_Manager::insert_and_recalc_phantom_mindist(IVP_Mindist*)
00122e10 t IVP_Mindist_Manager::enable_collision_detection_for_object(IVP_Real_Object*)
00124800 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
00124800 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
00124840 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
00124840 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
00120d70 t IVP_OV_Tree_Manager::expand_tree(IVP_OV_Node const*)
001215c0 t IVP_OV_Tree_Manager::cleanup_node(IVP_OV_Node*)
00120b20 t IVP_OV_Tree_Manager::connect_boxes(IVP_OV_Node*, IVP_OV_Node*)
00120720 t IVP_OV_Tree_Manager::calc_optimal_box(IVP_OV_Element const*, double, double)
00121330 t IVP_OV_Tree_Manager::insert_ov_element(IVP_OV_Element*, double, double, IVP_U_Vector<IVP_OV_Element>*)
00121640 t IVP_OV_Tree_Manager::remove_ov_element(IVP_OV_Element*)
001217a0 t IVP_OV_Tree_Manager::get_luf_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
00121820 t IVP_OV_Tree_Manager::get_center_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
001210d0 t IVP_OV_Tree_Manager::collect_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*, IVP_OV_Node const*)
00120f90 t IVP_OV_Tree_Manager::collect_subbox_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*)
001b75e0 b IVP_OV_Tree_Manager::powerlist
00120570 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
00120570 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
00120650 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
00120650 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
0010ab10 t IVP_Simulation_Unit::reset_time(IVP_Time)
001090a0 t IVP_Simulation_Unit::clean_sim_unit()
00109b90 t IVP_Simulation_Unit::split_sim_unit(IVP_Core*)
00109650 t IVP_Simulation_Unit::add_sim_unit_core(IVP_Core*)
00109690 t IVP_Simulation_Unit::rem_sim_unit_core(IVP_Core*)
00109710 t IVP_Simulation_Unit::sim_unit_core_exists(IVP_Core*)
00109400 t IVP_Simulation_Unit::sim_unit_remove_core(IVP_Core*)
00109210 t IVP_Simulation_Unit::get_pos_of_controller(IVP_Controller*)
00109dd0 t IVP_Simulation_Unit::add_controller_of_core(IVP_Core*, IVP_Controller*)
0010a500 t IVP_Simulation_Unit::do_sim_unit_union_find()
0010ad40 t IVP_Simulation_Unit::get_unit_movement_type()
00109d50 t IVP_Simulation_Unit::perform_test_and_split()
0010ad50 t IVP_Simulation_Unit::set_unit_movement_type(IVP_Movement_Type)
00108f00 t IVP_Simulation_Unit::add_controller_unit_sim(IVP_Controller*)
00109300 t IVP_Simulation_Unit::rem_sim_unit_controller(IVP_Controller*)
00109ab0 t IVP_Simulation_Unit::sim_unit_calc_redundants()
00108f70 t IVP_Simulation_Unit::sim_unit_union_find_test()
00109da0 t IVP_Simulation_Unit::fusion_simulation_unities(IVP_Simulation_Unit*)
00109780 t IVP_Simulation_Unit::remove_controller_of_core(IVP_Core*, IVP_Controller*)
001099d0 t IVP_Simulation_Unit::sim_unit_sort_controllers()
0010a650 t IVP_Simulation_Unit::simulate_single_sim_unit_psi(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0010a530 t IVP_Simulation_Unit::sim_unit_calc_movement_state(IVP_Environment*)
00109160 t IVP_Simulation_Unit::throw_cores_into_my_sim_unit(IVP_Simulation_Unit*)
0010ad70 t IVP_Simulation_Unit::sim_unit_ensure_in_simulation()
00109ed0 t IVP_Simulation_Unit::sim_unit_exchange_controllers(int, int)
0010a1e0 t IVP_Simulation_Unit::sim_unit_ensure_cores_movement()
0010a000 t IVP_Simulation_Unit::sim_unit_revive_for_simulation(IVP_Environment*)
00108e30 t IVP_Simulation_Unit::controller_is_known_to_sim_unit(IVP_Controller*)
00108e80 t IVP_Simulation_Unit::add_controlled_core_for_controller(IVP_Controller*, IVP_Core*)
0010ad60 t IVP_Simulation_Unit::prefetch0_init_moving_core_for_psi(IVP_Core*)
0010a4b0 t IVP_Simulation_Unit::sim_unit_clear_movement_check_values()
001092c0 t IVP_Simulation_Unit::IVP_Simulation_Unit()
001092c0 t IVP_Simulation_Unit::IVP_Simulation_Unit()
00109250 t IVP_Simulation_Unit::~IVP_Simulation_Unit()
00109250 t IVP_Simulation_Unit::~IVP_Simulation_Unit()
0009b520 t IVP_SurMan_PS_Plane::get_area_size()
0009b640 t IVP_SurMan_PS_Plane::get_len_of_all_edges()
000dc670 t IVP_Template_Anchor::get_object()
000dc680 t IVP_Template_Anchor::get_anchor_point_ws()
000dab10 t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, double, double, double)
000daab0 t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, IVP_U_Float_Point const*)
000daa00 t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, double, double, double)
000da980 t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, IVP_U_Float_Point const*)
000da950 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, double, double, double)
000da910 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, IVP_U_Point const*)
0010ffc0 t IVP_Template_Object::set_name(char const*)
0010ff80 t IVP_Template_Object::IVP_Template_Object()
0010ff80 t IVP_Template_Object::IVP_Template_Object()
0010ff90 t IVP_Template_Object::~IVP_Template_Object()
0010ff90 t IVP_Template_Object::~IVP_Template_Object()
000dce70 t IVP_Template_Spring::IVP_Template_Spring()
000dce70 t IVP_Template_Spring::IVP_Template_Spring()
000da820 t IVP_Template_Torque::IVP_Template_Torque()
000da820 t IVP_Template_Torque::IVP_Template_Torque()
00112830 t IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
00110a20 t IVP_U_Active_Square::print()
001131b0 t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, double, double, double)
001131b0 t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, double, double, double)
001112f0 t IVP_U_Active_Square::~IVP_U_Active_Square()
00111230 t IVP_U_Active_Square::~IVP_U_Active_Square()
00111230 t IVP_U_Active_Square::~IVP_U_Active_Square()
001107a0 t IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
00112ab0 t IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
00110d30 t IVP_U_Active_Switch::print()
00113870 t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00113870 t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00111c80 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
00111a90 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
00111a90 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
00036bf0 t physcollideheader_t::GetBaseMap()
001ab240 d physcollideheader_t::m_DataMap
00034ca0 t CAirboatFrictionData::GetContactPoint(Vector&)
00034cd0 t CAirboatFrictionData::GetContactSpeed(Vector&)
00034c70 t CAirboatFrictionData::GetSurfaceNormal(Vector&)
00031160 t CPhysicsCollisionSet::ShouldCollide(int, int)
000310f0 t CPhysicsCollisionSet::EnableCollisions(int, int)
00031120 t CPhysicsCollisionSet::DisableCollisions(int, int)
00042870 t CPhysicsFrictionData::GetContactPoint(Vector&)
00041b30 t CPhysicsFrictionData::GetContactSpeed(Vector&)
000427c0 t CPhysicsFrictionData::GetSurfaceNormal(Vector&)
0004c1d0 t CPhysicsSurfaceProps::GetIVPManager()
0004aa70 t CPhysicsSurfaceProps::GetIVPMaterial(int)
0004aa20 t CPhysicsSurfaceProps::GetSurfaceData(int)
0004ae10 t CPhysicsSurfaceProps::ParseSurfaceData(char const*, char const*)
0004ad70 t CPhysicsSurfaceProps::AddFileToDatabase(char const*)
0004a820 t CPhysicsSurfaceProps::GetInternalSurface(int)
0004ab00 t CPhysicsSurfaceProps::CopyPhysicsProperties(CSurface*, int)
0004a4b0 t CPhysicsSurfaceProps::SetWorldMaterialIndexTable(int*, int)
0004bd70 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
0004bd70 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
0004bd50 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
0004bc60 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
0004bc60 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
00095400 t hk_Dense_Matrix_Util::invert_2x2(hk_Dense_Matrix const&, hk_Dense_Matrix&, float)
00094d20 t hk_Dense_Matrix_Util::invert_4x4(hk_Fixed_Dense_Matrix<4>&, float)
00094640 t hk_Dense_Matrix_Util::invert_5x5(hk_Fixed_Dense_Matrix<5>&, float)
00093f60 t hk_Dense_Matrix_Util::invert_6x6(hk_Fixed_Dense_Matrix<6>&, float)
00095220 t hk_Dense_Matrix_Util::invert_3x3_symmetric(hk_Dense_Matrix&, float)
00093d80 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, float const*, float*)
00093cc0 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, hk_Dense_Vector const&, hk_Dense_Vector&)
00095920 t hk_Dense_Matrix_Util::print(hk_Dense_Matrix const&)
000954a0 t hk_Dense_Matrix_Util::solve(hk_Dense_Matrix&, hk_Dense_Vector&, float)
0008b220 t hk_Pulley_Constraint::set_length(float)
0008b240 t hk_Pulley_Constraint::set_gearing(float)
0008b090 t hk_Pulley_Constraint::init_constraint(void const*)
0008add0 t hk_Pulley_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0008b2a0 t hk_Pulley_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0008b330 t hk_Pulley_Constraint::get_constraint_dof()
0008b0a0 t hk_Pulley_Constraint::write_to_blueprint(hk_Pulley_BP*)
0008b320 t hk_Pulley_Constraint::get_constraint_type()
0008adc0 t hk_Pulley_Constraint::get_vmq_storage_size()
0008b260 t hk_Pulley_Constraint::set_worldspace_point(int, hk_Vector3 const&)
0008afd0 t hk_Pulley_Constraint::init_pulley_constraint(hk_Pulley_BP const*)
0008b390 t hk_Pulley_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0008b160 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008b1c0 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008b160 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008b1c0 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008b360 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
0008b340 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
0008b340 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
0004c200 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
0004c120 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
0004c120 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
00126060 t IVP_3D_Solver_PF_NPF::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00125cf0 t IVP_3D_Solver_S_VALS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000db470 t IVP_Actuator_Rot_Mot::set_max_torque(double)
000dc630 t IVP_Actuator_Rot_Mot::get_controller_name()
000db3d0 t IVP_Actuator_Rot_Mot::set_max_rotation_speed(double)
000d97d0 t IVP_Actuator_Rot_Mot::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dc720 t IVP_Actuator_Rot_Mot::get_power()
000db420 t IVP_Actuator_Rot_Mot::set_power(double)
000dbfa0 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
000dbfa0 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
000da570 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000da530 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000da530 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000d4af0 t IVP_Collision_Filter::~IVP_Collision_Filter()
000d49e0 t IVP_Collision_Filter::~IVP_Collision_Filter()
000d49e0 t IVP_Collision_Filter::~IVP_Collision_Filter()
000d56e0 t IVP_Compact_Triangle::get_next_tri()
000d55b0 t IVP_Compact_Triangle::set_tri_index(int)
000d56a0 t IVP_Compact_Triangle::get_first_edge()
000d5610 t IVP_Compact_Triangle::set_is_virtual(unsigned int)
000d55d0 t IVP_Compact_Triangle::set_pierce_index(int)
000d55f0 t IVP_Compact_Triangle::set_material_index(int)
000d5290 t IVP_Compact_Triangle::byte_swap()
000d5250 t IVP_Compact_Triangle::IVP_Compact_Triangle()
000d5250 t IVP_Compact_Triangle::IVP_Compact_Triangle()
00135630 t IVP_Constraint_Local::get_objectA()
00135620 t IVP_Constraint_Local::get_objectR()
00134ef0 t IVP_Constraint_Local::fix_rotation_axis(IVP_COORDINATE_INDEX)
00135640 t IVP_Constraint_Local::constraint_changed()
00134f40 t IVP_Constraint_Local::free_rotation_axis(IVP_COORDINATE_INDEX)
00134f90 t IVP_Constraint_Local::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
00134ca0 t IVP_Constraint_Local::fix_translation_axis(IVP_COORDINATE_INDEX)
00134cf0 t IVP_Constraint_Local::free_translation_axis(IVP_COORDINATE_INDEX)
00134dc0 t IVP_Constraint_Local::sort_rotation_mapping()
00134d40 t IVP_Constraint_Local::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
00134580 t IVP_Constraint_Local::change_fixing_point_Ros(IVP_U_Point const*)
00134960 t IVP_Constraint_Local::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
00132220 t IVP_Constraint_Local::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00134b50 t IVP_Constraint_Local::sort_translation_mapping()
00131ef0 t IVP_Constraint_Local::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
001347b0 t IVP_Constraint_Local::change_translation_axes_Ros(IVP_U_Matrix3 const*)
00131e40 t IVP_Constraint_Local::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
001346c0 t IVP_Constraint_Local::change_target_fixing_point_Ros(IVP_U_Point const*)
00131fa0 t IVP_Constraint_Local::change_Aos_to_relaxe_constraint()
00132070 t IVP_Constraint_Local::change_Ros_to_relaxe_constraint()
00132140 t IVP_Constraint_Local::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
00131d90 t IVP_Constraint_Local::core_is_going_to_be_deleted_event(IVP_Core*)
001348d0 t IVP_Constraint_Local::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
00135020 t IVP_Constraint_Local::init(IVP_Template_Constraint const&)
00135590 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
00134ad0 t IVP_Constraint_Local::IVP_Constraint_Local()
00135590 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
00134ad0 t IVP_Constraint_Local::IVP_Constraint_Local()
00131e20 t IVP_Constraint_Local::~IVP_Constraint_Local()
00131db0 t IVP_Constraint_Local::~IVP_Constraint_Local()
00131db0 t IVP_Constraint_Local::~IVP_Constraint_Local()
00135690 t IVP_Controller_Golem::reset_time(IVP_Time)
00136a80 t IVP_Controller_Golem::set_prime_position(IVP_U_Point const*, IVP_U_Float_Point const*, IVP_Time const&)
00136b10 t IVP_Controller_Golem::set_prime_orientation(IVP_U_Quat const*, IVP_Time const&, IVP_U_Quat const*, float)
00135c80 t IVP_Controller_Golem::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00136a50 t IVP_Controller_Golem::beam_object_to_target_position(IVP_Event_Sim*)
00136940 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
00136940 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
00135c40 t IVP_Controller_Golem::~IVP_Controller_Golem()
00135c10 t IVP_Controller_Golem::~IVP_Controller_Golem()
00135c10 t IVP_Controller_Golem::~IVP_Controller_Golem()
00105d70 t IVP_Controller_VHash::controller_to_index(IVP_Controller*)
00103db0 t IVP_Controller_VHash::~IVP_Controller_VHash()
00103d90 t IVP_Controller_VHash::~IVP_Controller_VHash()
00103d90 t IVP_Controller_VHash::~IVP_Controller_VHash()
000ec350 t IVP_Core_Fast_Static::get_inv_masses()
00103a40 t IVP_Friction_Manager::generate_contact_point(IVP_Mindist*, IVP_BOOL*)
00103980 t IVP_Friction_Manager::get_associated_contact_point(IVP_Mindist*)
001039f0 t IVP_Friction_Manager::delete_all_contact_points_of_object(IVP_Real_Object*)
000bae80 t IVP_Intrusion_Status::p()
000bae00 t IVP_Intrusion_Status::print(char const*)
000baea0 t IVP_Intrusion_Status::IVP_Intrusion_Status()
000baea0 t IVP_Intrusion_Status::IVP_Intrusion_Status()
000baec0 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
000baec0 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
000e8820 t IVP_Listener_Phantom::IVP_Listener_Phantom()
000e8820 t IVP_Listener_Phantom::IVP_Listener_Phantom()
0010f9d0 t IVP_Material_Manager::get_damping(IVP_Contact_Situation*)
0010fa10 t IVP_Material_Manager::get_adhesion(IVP_Contact_Situation*)
0010f990 t IVP_Material_Manager::get_elasticity(IVP_Contact_Situation*)
0010f950 t IVP_Material_Manager::get_friction_factor(IVP_Contact_Situation*)
0010faf0 t IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
0010fc80 t IVP_Material_Manager::environment_will_be_deleted(IVP_Environment*)
0010fba0 t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
0010fba0 t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
0010fc60 t IVP_Material_Manager::~IVP_Material_Manager()
0010fc50 t IVP_Material_Manager::~IVP_Material_Manager()
0010fc50 t IVP_Material_Manager::~IVP_Material_Manager()
00121fd0 t IVP_Mindist_Settings::set_collision_tolerance(double, double)
00122130 t IVP_Mindist_Settings::set_event_queue_min_delta_time_base(double)
00122150 t IVP_Mindist_Settings::IVP_Mindist_Settings()
00122150 t IVP_Mindist_Settings::IVP_Mindist_Settings()
000f34f0 t IVP_Mutual_Energizer::calc_energy_potential(double, double, double, double, double)
000f38b0 t IVP_Mutual_Energizer::calc_energy_potential()
000f3580 t IVP_Mutual_Energizer::init_mutual_energizer(IVP_Core*, IVP_Core*)
000f39d0 t IVP_Mutual_Energizer::destroy_percent_energy(double)
000f3490 t IVP_Mutual_Energizer::calc_impulse_to_reduce_energy_level(double, double, double, double)
000d95b0 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000d9580 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000d9580 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000d82d0 t IVP_Ray_Solver_Group::check_ray_group_against_cube(IVP_U_Float_Point const*, float)
000d9210 t IVP_Ray_Solver_Group::check_ray_group_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
000d8f00 t IVP_Ray_Solver_Group::check_ray_group_against_object(IVP_Real_Object*)
000d93c0 t IVP_Ray_Solver_Group::check_ray_group_against_all_objects_in_sim(IVP_Environment const*)
000d93f0 t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
000d93f0 t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
001065b0 t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
001065b0 t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
00106380 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
00106350 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
00106350 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
000e7380 t IVP_Template_Phantom::IVP_Template_Phantom()
000e7380 t IVP_Template_Phantom::IVP_Template_Phantom()
0009d030 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0009cff0 t IVP_Template_Polygon::IVP_Template_Polygon()
0009d030 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0009cff0 t IVP_Template_Polygon::IVP_Template_Polygon()
0009d170 t IVP_Template_Polygon::~IVP_Template_Polygon()
0009d170 t IVP_Template_Polygon::~IVP_Template_Polygon()
000da800 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
000da800 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
0009d270 t IVP_Template_Surface::init_surface(int)
0009d130 t IVP_Template_Surface::close_surface()
0009d2b0 t IVP_Template_Surface::get_surface_index()
0009d200 t IVP_Template_Surface::calc_surface_normal_template(int, int, int)
0009d110 t IVP_Template_Surface::IVP_Template_Surface()
0009d110 t IVP_Template_Surface::IVP_Template_Surface()
0009d2d0 t IVP_Template_Surface::~IVP_Template_Surface()
0009d2d0 t IVP_Template_Surface::~IVP_Template_Surface()
00113bd0 t IVP_U_BigVector_Base::increment_mem()
001067a0 t IVP_Universe_Manager::event_object_deleted(IVP_Real_Object*)
00106790 t IVP_Universe_Manager::object_no_longer_needed(IVP_Real_Object*)
001067b0 t IVP_Universe_Manager::provide_universe_settings()
00106780 t IVP_Universe_Manager::ensure_objects_in_environment(IVP_Real_Object*, IVP_U_Float_Point*, double)
0009d730 t IVV_Cluster_Min_Hash::remove_min()
0009d680 t IVV_Cluster_Min_Hash::change_value(void*, double)
0009d3e0 t IVV_Cluster_Min_Hash::min_added_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0009d430 t IVV_Cluster_Min_Hash::min_removed_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0009d510 t IVV_Cluster_Min_Hash::add(void*, double)
0009d5d0 t IVV_Cluster_Min_Hash::remove(void*)
0009d6c0 t IVV_Cluster_Min_Hash::is_elem(void*)
0009d2e0 t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0009d2e0 t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0009d360 t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
0009d360 t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
00056fd0 t vehicle_axleparams_t::GetBaseMap()
001aeb60 d vehicle_axleparams_t::m_DataMap
00056cf0 t vehicle_bodyparams_t::GetBaseMap()
001aebc0 d vehicle_bodyparams_t::m_DataMap
00041a70 t CPhysicsCollisionData::GetContactPoint(Vector&)
00041ae0 t CPhysicsCollisionData::GetContactSpeed(Vector&)
00041a30 t CPhysicsCollisionData::GetSurfaceNormal(Vector&)
000725e0 t CUtlCStringConversion::FindConversion(char const*, int*)
000728c0 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000728c0 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000421a0 t CVPhysicsDebugOverlay::AddBoxOverlay(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
000421c0 t CVPhysicsDebugOverlay::AddLineOverlay(Vector const&, Vector const&, int, int, int, bool, float)
000421d0 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, float, char const*, ...)
000421e0 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, int, float, char const*, ...)
00042210 t CVPhysicsDebugOverlay::AddTextOverlayRGB(Vector const&, int, float, float, float, float, float, char const*, ...)
00042200 t CVPhysicsDebugOverlay::AddSweptBoxOverlay(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
000421b0 t CVPhysicsDebugOverlay::AddTriangleOverlay(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
00042190 t CVPhysicsDebugOverlay::AddEntityTextOverlay(int, int, float, int, int, int, int, char const*, ...)
000421f0 t CVPhysicsDebugOverlay::AddScreenTextOverlay(float, float, float, int, int, int, int, char const*)
0008cd70 t hk_Ragdoll_Constraint::init_constraint(void const*)
0008e250 t hk_Ragdoll_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0008d220 t hk_Ragdoll_Constraint::update_friction(float)
0008d130 t hk_Ragdoll_Constraint::update_transforms(hk_Transform const&, hk_Transform const&)
0008d470 t hk_Ragdoll_Constraint::apply_angular_part(hk_PSI_Info&, hk_Ragdoll_Constraint_Work&, float, float)
0008e570 t hk_Ragdoll_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0008e640 t hk_Ragdoll_Constraint::get_constraint_dof()
0008cda0 t hk_Ragdoll_Constraint::write_to_blueprint(hk_Ragdoll_Constraint_BP*)
0008e630 t hk_Ragdoll_Constraint::get_constraint_type()
0008c9b0 t hk_Ragdoll_Constraint::get_vmq_storage_size()
0008c9c0 t hk_Ragdoll_Constraint::init_ragdoll_constraint(hk_Ragdoll_Constraint_BP const*, hk_Local_Constraint_System*)
0008e6a0 t hk_Ragdoll_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0008d290 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008d380 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008d290 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008d380 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008e670 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0008e650 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0008e650 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
001260d0 t IVP_3D_Solver_KK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00125ab0 t IVP_3D_Solver_PF_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00125f30 t IVP_3D_Solver_PK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00111eb0 t IVP_Active_Value_Hash::object_to_index(IVP_U_Active_Value*)
00113b00 t IVP_Active_Value_Hash::add_active_value(IVP_U_Active_Value*)
00113b90 t IVP_Active_Value_Hash::find_active_value(IVP_U_Active_Value*)
00113b40 t IVP_Active_Value_Hash::remove_active_value(IVP_U_Active_Value*)
00113ad0 t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
00113ad0 t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
00111130 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
001110d0 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
001110d0 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
000dad40 t IVP_Anchor_Check_Dist::init_anchor_check_dist(IVP_Real_Object*, IVP_U_Point*, IVP_Actuator_Check_Dist*)
000db0e0 t IVP_Anchor_Check_Dist::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
000db2d0 t IVP_Anchor_Check_Dist::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
000dc650 t IVP_Anchor_Check_Dist::get_type()
000dc760 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
000dc760 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
000d97b0 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000d9780 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000d9780 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
00049a80 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_added(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
00049ae0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_removed(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
00049800 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::pset_is_going_to_be_deleted(IVP_U_Set_Active<IVP_Core>*)
00049bc0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
000498b0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
000498b0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
0010f5f0 t IVP_Cache_Ledge_Point::get_object_cache()
0010f620 t IVP_Cache_Ledge_Point::remove_reference()
0010f5e0 t IVP_Cache_Ledge_Point::get_compact_ledge()
0010f720 t IVP_Cache_Ledge_Point::init_cache_ledge_point(IVP_Real_Object*, IVP_Compact_Ledge const*)
0010f600 t IVP_Cache_Ledge_Point::get_core()
0010f7a0 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
0010f630 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
0010f7a0 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
0010f630 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
000b4990 t IVP_Compact_Recursive::add_compact_ledge(IVP_Compact_Ledge const*)
000b4a50 t IVP_Compact_Recursive::build_convex_hull()
000b4a30 t IVP_Compact_Recursive::add_compact_surface(IVP_Compact_Surface const*)
000b4c60 t IVP_Compact_Recursive::set_rekursive_convex_hull()
000b49d0 t IVP_Compact_Recursive::add_compact_ledge_treenode(IVP_Compact_Ledgetree_Node const*)
000b50b0 t IVP_Compact_Recursive::compile()
000b4920 t IVP_Compact_Recursive::IVP_Compact_Recursive()
000b4920 t IVP_Compact_Recursive::IVP_Compact_Recursive()
000b4950 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
000b4950 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
000f2270 t IVP_Contact_Point_API::get_vert_force(IVP_Contact_Point*)
000f2240 t IVP_Contact_Point_API::get_eliminated_energy(IVP_Contact_Point*)
000f2290 t IVP_Contact_Point_API::get_surface_normal_ws(IVP_Contact_Point*, IVP_U_Float_Point*)
000f2260 t IVP_Contact_Point_API::reset_eliminated_energy(IVP_Contact_Point*)
00100c70 t IVP_Contact_Situation::IVP_Contact_Situation()
00100c70 t IVP_Contact_Situation::IVP_Contact_Situation()
00136670 t IVP_Controller_Motion::set_max_torque(IVP_U_Float_Point const*)
00136cf0 t IVP_Controller_Motion::set_damp_factor(float)
00136cd0 t IVP_Controller_Motion::set_force_factor(float)
00136d10 t IVP_Controller_Motion::set_torque_factor(float)
001366d0 t IVP_Controller_Motion::set_target_position_ws(IVP_U_Point const*)
00136c00 t IVP_Controller_Motion::get_controller_priority()
00136d30 t IVP_Controller_Motion::set_angular_damp_factor(float)
001356b0 t IVP_Controller_Motion::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001366a0 t IVP_Controller_Motion::set_max_translation_force(IVP_U_Float_Point const*)
00136850 t IVP_Controller_Motion::set_target_q_world_f_core(IVP_U_Quat const*)
00136770 t IVP_Controller_Motion::set_target_object_position_ws(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*)
00135670 t IVP_Controller_Motion::core_is_going_to_be_deleted_event(IVP_Core*)
001365a0 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
001365a0 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
00135bd0 t IVP_Controller_Motion::~IVP_Controller_Motion()
00135ba0 t IVP_Controller_Motion::~IVP_Controller_Motion()
00135ba0 t IVP_Controller_Motion::~IVP_Controller_Motion()
000ecf20 t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
000ecf20 t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
000ecf40 t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
000ecf40 t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
000fcc90 t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
000fcc90 t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
000fcce0 t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
000fcce0 t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
00125780 t IVP_Mindist_Recursive::is_recursive()
0012b710 t IVP_Mindist_Recursive::delete_all_children()
0012b5e0 t IVP_Mindist_Recursive::mindist_rescue_push()
0012b8e0 t IVP_Mindist_Recursive::recheck_recursive_childs(double)
0012b6c0 t IVP_Mindist_Recursive::get_spawned_mindist_count()
0012ba20 t IVP_Mindist_Recursive::exact_mindist_went_invalid(IVP_Mindist_Manager*)
0012bb90 t IVP_Mindist_Recursive::invalid_mindist_went_exact()
0012b5f0 t IVP_Mindist_Recursive::change_spawned_mindist_count(int)
0012bbd0 t IVP_Mindist_Recursive::rec_hull_limit_exceeded_event()
0012b620 t IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
0012bd40 t IVP_Mindist_Recursive::do_impact()
0012b870 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
0012b870 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
0012b840 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
0012b7b0 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
0012b7b0 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
0010acc0 t IVP_Sim_Units_Manager::reset_time(IVP_Time)
00109f30 t IVP_Sim_Units_Manager::add_unit_to_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
00109f90 t IVP_Sim_Units_Manager::rem_unit_from_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
0010aba0 t IVP_Sim_Units_Manager::simulate_sim_units_psi(IVP_Environment*, IVP_U_Vector<IVP_Core>*)
00109f50 t IVP_Sim_Units_Manager::add_sim_unit_to_manager(IVP_Simulation_Unit*)
00109fc0 t IVP_Sim_Units_Manager::rem_sim_unit_from_manager(IVP_Simulation_Unit*)
00109f00 t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
00109f00 t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
00106680 t IVP_Statistic_Manager::clear_statistic()
00106610 t IVP_Statistic_Manager::output_statistic()
001066f0 t IVP_Statistic_Manager::IVP_Statistic_Manager()
001066f0 t IVP_Statistic_Manager::IVP_Statistic_Manager()
000e2aa0 t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
000e2aa0 t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
000ec330 t IVP_Vector_of_Objects::reset()
000ec310 t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
000ec310 t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
00056dc0 t vehicle_wheelparams_t::GetBaseMap()
001aeba0 d vehicle_wheelparams_t::m_DataMap
000783a0 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
000783a0 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
00036cc0 t compactsurfaceheader_t::GetBaseMap()
001ab220 d compactsurfaceheader_t::m_DataMap
001467d0 t CPolyhedron_AllocByNew::Release()
001467f0 t CPolyhedron_AllocByNew::Allocate(unsigned short, unsigned short, unsigned short, unsigned short)
00149760 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
00149710 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
00149710 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
001496f0 t CPolyhedron_TempMemory::Release()
00149740 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
00149700 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
00149700 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
000422b0 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
00041a10 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
00041a10 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
000dc6e0 t IVP_Actuator_Two_Point::get_actuator_anchor(int)
000dadd0 t IVP_Actuator_Two_Point::ensure_actuator_in_simulation()
000dbb20 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
000dbb20 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
000da380 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
000da300 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
000da300 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
0010e3b0 t IVP_BetterDebugmanager::output_function(IVP_DEBUG_CLASS, char const*)
0010e410 t IVP_BetterDebugmanager::is_debug_enabled(IVP_DEBUG_CLASS)
0010e3d0 t IVP_BetterDebugmanager::enable_debug_output(IVP_DEBUG_CLASS)
0010e3f0 t IVP_BetterDebugmanager::disable_debug_output(IVP_DEBUG_CLASS)
0010e440 t IVP_BetterDebugmanager::dprint(IVP_DEBUG_CLASS, char const*, ...)
0010e4c0 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
0010e4c0 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
0010e390 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
0010e380 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
0010e380 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
000d54f0 t IVP_Compact_Poly_Point::set_client_data(void*)
000d54b0 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
000d54b0 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
00109eb0 t IVP_Controller_Manager::add_controller_to_core(IVP_Controller_Independent*, IVP_Core*)
00109760 t IVP_Controller_Manager::ensure_core_in_simulation(IVP_Core*)
001099b0 t IVP_Controller_Manager::remove_controller_from_core(IVP_Controller_Independent*, IVP_Core*)
0010a230 t IVP_Controller_Manager::ensure_controller_in_simulation(IVP_Controller_Dependent*)
0010a0c0 t IVP_Controller_Manager::announce_controller_to_environment(IVP_Controller_Dependent*)
0010a290 t IVP_Controller_Manager::remove_controller_from_environment(IVP_Controller_Dependent*, IVP_BOOL)
00108cb0 t IVP_Controller_Manager::IVP_Controller_Manager(IVP_Environment*)
00108cb0 t IVP_Controller_Manager::IVP_Controller_Manager(IVP_Environment*)
000e7470 t IVP_Controller_Phantom::add_sleeping_object(IVP_Real_Object*)
000e8360 t IVP_Controller_Phantom::event_object_frozen(IVP_Event_Object*)
000e7d10 t IVP_Controller_Phantom::mindist_left_volume(IVP_Mindist*)
000e73b0 t IVP_Controller_Phantom::add_listener_phantom(IVP_Listener_Phantom*)
000e8350 t IVP_Controller_Phantom::event_object_created(IVP_Event_Object*)
000e7370 t IVP_Controller_Phantom::event_object_deleted(IVP_Event_Object*)
000e7680 t IVP_Controller_Phantom::event_object_revived(IVP_Event_Object*)
000e7630 t IVP_Controller_Phantom::fire_event_core_left(IVP_Core*)
000e8850 t IVP_Controller_Phantom::get_intruding_mindists()
000e79f0 t IVP_Controller_Phantom::mindist_entered_volume(IVP_Mindist*)
000e74d0 t IVP_Controller_Phantom::remove_sleeping_object(IVP_Real_Object*)
000e75e0 t IVP_Controller_Phantom::fire_event_core_entered(IVP_Core*)
000e73f0 t IVP_Controller_Phantom::remove_listener_phantom(IVP_Listener_Phantom*)
000e7530 t IVP_Controller_Phantom::wake_all_sleeping_objects()
000e7fe0 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
000e7fe0 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
000e79d0 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000e7720 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000e7720 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000f42b0 t IVP_Friction_Core_Pair::debug_printf_pair()
000f2a30 t IVP_Friction_Core_Pair::number_of_pair_dists()
000f3f70 t IVP_Friction_Core_Pair::set_friction_vectors(IVP_U_Float_Point*)
000f2a40 t IVP_Friction_Core_Pair::add_fr_dist_obj_pairs(IVP_Contact_Point*)
000f2a80 t IVP_Friction_Core_Pair::del_fr_dist_obj_pairs(IVP_Contact_Point*)
000f3cb0 t IVP_Friction_Core_Pair::destroy_mutual_energy(double)
000f4080 t IVP_Friction_Core_Pair::get_average_friction_vector(IVP_U_Float_Point*)
000f42f0 t IVP_Friction_Core_Pair::debug_read_vector_after_ease()
000f42c0 t IVP_Friction_Core_Pair::debug_store_vector_before_ease()
000f33b0 t IVP_Friction_Core_Pair::check_all_fr_mindists_to_be_valid(IVP_Friction_System*)
000f3d50 t IVP_Friction_Core_Pair::remove_energy_gained_by_real_friction()
000f3f30 t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
000f3f30 t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
000f3ef0 t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
000f3ef0 t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
00106730 t IVP_Listener_Collision::event_pre_collision(IVP_Event_Collision*)
00106740 t IVP_Listener_Collision::event_post_collision(IVP_Event_Collision*)
00108c00 t IVP_Listener_Collision::get_enabled_callbacks()
00106760 t IVP_Listener_Collision::event_friction_created(IVP_Event_Friction*)
00106770 t IVP_Listener_Collision::event_friction_deleted(IVP_Event_Friction*)
00108a30 t IVP_Listener_Collision::event_friction_pair_created(IVP_Friction_Core_Pair*)
00108a40 t IVP_Listener_Collision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
00106750 t IVP_Listener_Collision::event_collision_object_deleted(IVP_Real_Object*)
00108c10 t IVP_Listener_Collision::IVP_Listener_Collision(int)
00108c10 t IVP_Listener_Collision::IVP_Listener_Collision(int)
00108b60 t IVP_Listener_Collision::~IVP_Listener_Collision()
00108a50 t IVP_Listener_Collision::~IVP_Listener_Collision()
00108a50 t IVP_Listener_Collision::~IVP_Listener_Collision()
0010feb0 t IVP_PerformanceCounter::IVP_PerformanceCounter()
0010feb0 t IVP_PerformanceCounter::IVP_PerformanceCounter()
0010fe90 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
0010fe80 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
0010fe80 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
000ba5e0 t IVP_Rot_Inertia_Solver::find_center_given_xyz(IVP_U_BigVector<IVP_Compact_Ledge>*, int, int, int, IVP_U_Matrix const*, double*, double*, double*)
000baa80 t IVP_Rot_Inertia_Solver::calc_mass_center_and_rotation_inertia(IVP_Compact_Surface const*, IVP_U_Point*, IVP_U_Point*)
000da8a0 t IVP_Template_Two_Point::IVP_Template_Two_Point()
000da8a0 t IVP_Template_Two_Point::IVP_Template_Two_Point()
00057170 t vehicle_engineparams_t::GetBaseMap()
001aeb20 d vehicle_engineparams_t::m_DataMap
00041be0 t CEmptyCollisionListener::StartTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
00041bb0 t CEmptyCollisionListener::PreCollision(vcollisionevent_t*)
00041c10 t CEmptyCollisionListener::FluidEndTouch(IPhysicsObject*, IPhysicsFluidController*)
00041bc0 t CEmptyCollisionListener::PostCollision(vcollisionevent_t*)
00041c00 t CEmptyCollisionListener::FluidStartTouch(IPhysicsObject*, IPhysicsFluidController*)
00041c20 t CEmptyCollisionListener::ObjectEnterTrigger(IPhysicsObject*, IPhysicsObject*)
00041c30 t CEmptyCollisionListener::ObjectLeaveTrigger(IPhysicsObject*, IPhysicsObject*)
00041c40 t CEmptyCollisionListener::PostSimulationFrame()
00041bf0 t CEmptyCollisionListener::EndTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
00041bd0 t CEmptyCollisionListener::Friction(IPhysicsObject*, float, int, int, IPhysicsCollisionData*)
0005aa70 t CPhysCollideVirtualMesh::BuildLedges()
0005bc60 t CPhysCollideVirtualMesh::SetMassCenter(Vector const&)
0005bac0 t CPhysCollideVirtualMesh::BuildBoundingLedge()
0005b980 t CPhysCollideVirtualMesh::CreateMeshBoundingHull(virtualmeshlist_t const&)
0005bf70 t CPhysCollideVirtualMesh::GetAllLedgesWithinRadius(IVP_U_Point const*, double, IVP_U_BigVector<IVP_Compact_Ledge>*, IVP_Compact_Ledge const*)
0005b620 t CPhysCollideVirtualMesh::CreateBoundingSurfaceFromRange(virtualmeshlist_t const&, int, int)
0005ab40 t CPhysCollideVirtualMesh::AddRef()
0005aa50 t CPhysCollideVirtualMesh::Release()
0005a6c0 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
0005a680 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
0005a680 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
00038bd0 t CPhysicsConstraintGroup::GetErrorParams(constraint_groupparams_t*)
00038980 t CPhysicsConstraintGroup::IsInErrorState()
000389d0 t CPhysicsConstraintGroup::SetErrorParams(constraint_groupparams_t const&)
000389b0 t CPhysicsConstraintGroup::ClearErrorState()
00038af0 t CPhysicsConstraintGroup::SolvePenetration(IPhysicsObject*, IPhysicsObject*)
00038a90 t CPhysicsConstraintGroup::Activate()
000397b0 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
000397b0 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00038a50 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00038a00 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00038a00 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00049250 t CPhysicsFluidController::SetGameData(void*)
00049490 t CPhysicsFluidController::GetIVPObject()
00049440 t CPhysicsFluidController::WakeAllSleepingObjects()
00049460 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
00049460 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
00049400 t CPhysicsFluidController::~CPhysicsFluidController()
00049220 t CPhysicsFluidController::~CPhysicsFluidController()
00049220 t CPhysicsFluidController::~CPhysicsFluidController()
00063550 t CTraceSolverSweptObject::SweepLedgeTree_r(IVP_Compact_Ledgetree_Node const*)
00064390 t CTraceSolverSweptObject::DoSweep()
0005df30 t CTraceSolverSweptObject::InitOSRay()
0005de60 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
0005de60 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
00077010 t CUtlFilenameSymbolTable::FindFileName(char const*)
00077850 t CUtlFilenameSymbolTable::FindOrAddFileName(char const*)
00077230 t CUtlFilenameSymbolTable::String(void* const&, char*, int)
000775c0 t CUtlFilenameSymbolTable::RemoveAll()
00076f50 t CUtlFilenameSymbolTable::CUtlFilenameSymbolTable()
00076f50 t CUtlFilenameSymbolTable::CUtlFilenameSymbolTable()
00077620 t CUtlFilenameSymbolTable::~CUtlFilenameSymbolTable()
00077620 t CUtlFilenameSymbolTable::~CUtlFilenameSymbolTable()
000683d0 t CVPhysPtrSaveRestoreOps::PreRestore()
00068470 t CVPhysPtrSaveRestoreOps::PostRestore()
000682a0 t CVPhysPtrSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
000683e0 t CVPhysPtrSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
000683c0 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
000683c0 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
000810c0 t hk_Breakable_Constraint::init_constraint(void const*)
00081350 t hk_Breakable_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00081310 t hk_Breakable_Constraint::FireEventIfBroken()
00081ab0 t hk_Breakable_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00081ae0 t hk_Breakable_Constraint::get_constraint_dof()
000812d0 t hk_Breakable_Constraint::write_to_blueprint(hk_Breakable_Constraint_BP*)
00081ac0 t hk_Breakable_Constraint::get_constraint_type()
00081100 t hk_Breakable_Constraint::get_vmq_storage_size()
00081290 t hk_Breakable_Constraint::init_breakable_constraint(hk_Breakable_Constraint_BP const*)
00081b80 t hk_Breakable_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00081170 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
00081200 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
00081170 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
00081200 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
00081150 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00081120 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00081120 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00088d60 t hk_Prismatic_Constraint::set_limits(float, float)
00088dc0 t hk_Prismatic_Constraint::set_friction(float)
00088a80 t hk_Prismatic_Constraint::init_constraint(void const*)
000875d0 t hk_Prismatic_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00088cb0 t hk_Prismatic_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00088e40 t hk_Prismatic_Constraint::get_constraint_dof()
000884d0 t hk_Prismatic_Constraint::reset_linear_limit()
00088ab0 t hk_Prismatic_Constraint::write_to_blueprint(hk_Prismatic_BP*)
00088e30 t hk_Prismatic_Constraint::get_constraint_type()
000875c0 t hk_Prismatic_Constraint::get_vmq_storage_size()
00088890 t hk_Prismatic_Constraint::init_prismatic_constraint(hk_Prismatic_BP const*, hk_Local_Constraint_System*)
00088ea0 t hk_Prismatic_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00088df0 t hk_Prismatic_Constraint::set_motor(float, float)
00088b60 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088c10 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088b60 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088c10 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088e70 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
00088e50 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
00088e50 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
000801f0 t hk_Rigid_Body_Binary_EF::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
000936c0 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
000936c0 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
0003e530 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
0003e480 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
0003e480 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
00049870 t IPhysicsFluidController::~IPhysicsFluidController()
000497e0 t IPhysicsFluidController::~IPhysicsFluidController()
000497e0 t IPhysicsFluidController::~IPhysicsFluidController()
000dae00 t IVP_Actuator_Check_Dist::fire_check_dist_event(IVP_BOOL)
000daea0 t IVP_Actuator_Check_Dist::hull_limit_exceeded_event()
000dae50 t IVP_Actuator_Check_Dist::fire_check_dist_is_going_to_be_deleted_event()
000db100 t IVP_Actuator_Check_Dist::set_range(double)
000db120 t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
000db120 t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
000db240 t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
000db240 t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
000dc700 t IVP_Actuator_Four_Point::get_actuator_anchor(int)
000dc460 t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
000dc460 t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
000da790 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000da710 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000da710 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000dbae0 t IVP_Actuator_Stabilizer::set_stabi_constant(double)
000dc660 t IVP_Actuator_Stabilizer::get_controller_name()
000d9cf0 t IVP_Actuator_Stabilizer::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dc5a0 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
000dc5a0 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
000da7d0 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000da7b0 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000da7b0 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000dd3d0 t IVP_Actuator_Suspension::set_max_body_force(float)
000dd720 t IVP_Actuator_Suspension::get_controller_name()
000dc900 t IVP_Actuator_Suspension::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dd390 t IVP_Actuator_Suspension::set_spring_damp_compression(float)
000dd560 t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
000dd560 t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
000dcd30 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
000dcc70 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
000dcc70 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
00121bf0 t IVP_Collision_Delegator::get_spawned_mindist_count()
00121be0 t IVP_Collision_Delegator::change_spawned_mindist_count(int)
00121c40 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
00121bd0 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
00121bd0 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
000e14f0 t IVP_Controller_Buoyancy::apply_dampening(IVP_Real_Object*, float, double, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
000e2930 t IVP_Controller_Buoyancy::get_controller_name()
000e13b0 t IVP_Controller_Buoyancy::use_buoyancy_solver(IVP_Buoyancy_Input const*, IVP_Template_Buoyancy const*, IVP_Buoyancy_Output*, IVP_U_Float_Point const*, int)
000e1950 t IVP_Controller_Buoyancy::apply_buoyancy_impulse(IVP_Real_Object*, IVP_Template_Buoyancy*, double, float, IVP_U_Float_Point*)
000e2920 t IVP_Controller_Buoyancy::get_controller_priority()
000e1b30 t IVP_Controller_Buoyancy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e12a0 t IVP_Controller_Buoyancy::calculate_future_extrapolation(IVP_Controller_Buoyancy::Attacher_Interpolator::Last_IO const*, IVP_MI_Vector const*, IVP_MI_Vector const*, double, IVP_Time, IVP_MI_Vector*, IVP_MI_Vector*)
000e2910 t IVP_Controller_Buoyancy::get_minimum_simulation_frequency()
000e28f0 t IVP_Controller_Buoyancy::core_is_going_to_be_deleted_event(IVP_Core*)
000e2350 t IVP_Controller_Buoyancy::provide_new_input_solution_combination(IVP_Controller_Buoyancy::Attacher_Interpolator*, IVP_Template_Buoyancy*, IVP_MI_Vector const*, IVP_MI_Vector const*, double, IVP_Time)
000e2640 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
000e2640 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
000e1280 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000e1220 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000e1220 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000eed60 t IVP_Environment_Manager::create_environment(IVP_Application_Environment*, char const*, unsigned int)
000ecd10 t IVP_Environment_Manager::get_environment_manager()
001b5120 b IVP_Environment_Manager::static_environment_manager
000ec950 t IVP_Environment_Manager::IVP_Environment_Manager()
000ec950 t IVP_Environment_Manager::IVP_Environment_Manager()
000ec750 t IVP_Environment_Manager::~IVP_Environment_Manager()
000ec750 t IVP_Environment_Manager::~IVP_Environment_Manager()
000f4c40 t IVP_Friction_Sys_Energy::get_controller_name()
000f4c30 t IVP_Friction_Sys_Energy::get_controller_priority()
000f3e40 t IVP_Friction_Sys_Energy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000ef590 t IVP_Friction_Sys_Energy::core_is_going_to_be_deleted_event(IVP_Core*)
000f4ca0 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
000f4c50 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
000f4c50 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
000f4c70 t IVP_Friction_Sys_Static::get_controller_name()
000f4c60 t IVP_Friction_Sys_Static::get_controller_priority()
000f47e0 t IVP_Friction_Sys_Static::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000f4760 t IVP_Friction_Sys_Static::do_simulation_single_friction(IVP_Event_Sim*)
000f4c90 t IVP_Friction_Sys_Static::get_minimum_simulation_frequency()
000f26f0 t IVP_Friction_Sys_Static::core_is_going_to_be_deleted_event(IVP_Core*)
000f4cc0 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
000f4c80 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
000f4c80 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
000d77f0 t IVP_Ray_Solver_Min_Hash::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, double, IVP_U_Point*)
000d9670 t IVP_Ray_Solver_Min_Hash::get_result_min_hash()
000d96c0 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
000d96c0 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
000d9640 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
000d9610 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
000d9610 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
00136fc0 t IVP_SurfaceManager_Ball::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
00136f00 t IVP_SurfaceManager_Ball::get_all_ledges_within_radius(IVP_U_Point const*, double, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
00136ee0 t IVP_SurfaceManager_Ball::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
00136e80 t IVP_SurfaceManager_Ball::get_type()
00137010 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
00136f80 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
00136f80 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
000df5d0 t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
000df5d0 t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
000da860 t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
000da860 t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
000e6790 t IVP_Template_Constraint::sort_coordinates(IVP_Template_Constraint const&)
000e7190 t IVP_Template_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
000e6660 t IVP_Template_Constraint::set_constraint_ws(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
000e71b0 t IVP_Template_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
000e6390 t IVP_Template_Constraint::set_constraint_Ros(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
000e71d0 t IVP_Template_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
000e6fa0 t IVP_Template_Constraint::set_attached_object(IVP_Real_Object*)
000e7050 t IVP_Template_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
000e6fc0 t IVP_Template_Constraint::set_fixing_point_Ros(IVP_U_Point const*)
000e6f90 t IVP_Template_Constraint::set_reference_object(IVP_Real_Object*)
000e7070 t IVP_Template_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
000e7140 t IVP_Template_Constraint::set_rotation_axes_Ros(IVP_U_Matrix3 const*)
000e7090 t IVP_Template_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
000e7250 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
000e7210 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
000e7000 t IVP_Template_Constraint::set_translation_axes_Ros(IVP_U_Matrix3 const*)
000e72f0 t IVP_Template_Constraint::set_constraint_is_relaxed()
000e7110 t IVP_Template_Constraint::set_max_translation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
000e70d0 t IVP_Template_Constraint::set_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
000e72b0 t IVP_Template_Constraint::set_attached_fixing_point_Aos(IVP_U_Point const*)
000e6770 t IVP_Template_Constraint::set_stiffness_for_limited_axis(float)
000e7280 t IVP_Template_Constraint::set_attached_translation_axes_Aos(IVP_U_Matrix3 const*)
000e7030 t IVP_Template_Constraint::set_translation_axes_as_object_space()
000e7170 t IVP_Template_Constraint::set_rotation_axes_as_translation_axes()
000e61f0 t IVP_Template_Constraint::IVP_Template_Constraint()
000e61f0 t IVP_Template_Constraint::IVP_Template_Constraint()
000da8c0 t IVP_Template_Four_Point::IVP_Template_Four_Point()
000da8c0 t IVP_Template_Four_Point::IVP_Template_Four_Point()
000da840 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
000da840 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
000dcea0 t IVP_Template_Suspension::IVP_Template_Suspension()
000dcea0 t IVP_Template_Suspension::IVP_Template_Suspension()
00112bb0 t IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
00110cb0 t IVP_U_Active_Test_Range::print()
00113730 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00113730 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00111e90 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
00111ca0 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
00111ca0 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
000ef530 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
000ef530 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
000ef510 t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
000ef510 t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
0010ff40 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
0010ff40 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
00049950 t CLiquidSurfaceDescriptor::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
00049890 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
000497f0 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
000497f0 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
0004d460 t CPhysicsMotionController::GetObjects(IPhysicsObject**)
0004d140 t CPhysicsMotionController::RemoveCore(IVP_Core*)
0004c670 t CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
0004d4d0 t CPhysicsMotionController::WakeObjects()
0004d080 t CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
0004d6d0 t CPhysicsMotionController::ClearObjects()
0004d440 t CPhysicsMotionController::CountObjects()
0004d1b0 t CPhysicsMotionController::DetachObject(IPhysicsObject*)
0004c6c0 t CPhysicsMotionController::SetEventHandler(IMotionEvent*)
0004ce80 t CPhysicsMotionController::WriteToTemplate(vphysics_save_motioncontroller_t&)
0004cfb0 t CPhysicsMotionController::InitFromTemplate(vphysics_save_motioncontroller_t const&)
0004d430 t CPhysicsMotionController::get_controller_name()
0004c660 t CPhysicsMotionController::get_controller_priority()
0004c6e0 t CPhysicsMotionController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0004d670 t CPhysicsMotionController::core_is_going_to_be_deleted_event(IVP_Core*)
0004ce30 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
0004ce30 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
0004d270 t CPhysicsMotionController::~CPhysicsMotionController()
0004d1e0 t CPhysicsMotionController::~CPhysicsMotionController()
0004d1e0 t CPhysicsMotionController::~CPhysicsMotionController()
0004a3e0 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
0004a3d0 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
0004a3d0 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
0004d4b0 t IPhysicsMotionController::~IPhysicsMotionController()
0004d420 t IPhysicsMotionController::~IPhysicsMotionController()
0004d420 t IPhysicsMotionController::~IPhysicsMotionController()
00055940 t IPhysicsPlayerController::~IPhysicsPlayerController()
00055520 t IPhysicsPlayerController::~IPhysicsPlayerController()
00055520 t IPhysicsPlayerController::~IPhysicsPlayerController()
00055920 t IPhysicsShadowController::~IPhysicsShadowController()
00055510 t IPhysicsShadowController::~IPhysicsShadowController()
00055510 t IPhysicsShadowController::~IPhysicsShadowController()
0010f5c0 t IVP_Cache_Object_Manager::cache_object_at(int)
0010f070 t IVP_Cache_Object_Manager::get_cache_object(IVP_Real_Object*)
0010ec70 t IVP_Cache_Object_Manager::invalid_cache_object(IVP_Real_Object*)
0010ec90 t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
0010ec90 t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
0010ece0 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
0010ece0 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
00137e30 t IVP_Calc_Next_PSI_Solver::set_transformation(IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
00137260 t IVP_Calc_Next_PSI_Solver::calc_next_PSI_matrix(IVP_Event_Sim*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
001370b0 t IVP_Calc_Next_PSI_Solver::calc_psi_rotation_axis(IVP_U_Quat const*)
00138420 t IVP_Calc_Next_PSI_Solver::commit_one_hull_manager(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
001384f0 t IVP_Calc_Next_PSI_Solver::commit_all_hull_managers(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
001382f0 t IVP_Calc_Next_PSI_Solver::commit_all_calc_next_PSI_matrix(IVP_Environment*, IVP_U_Vector<IVP_Core>*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00137070 t IVP_Calc_Next_PSI_Solver::get_longest_time_step_dependent_on_rot()
000d7560 t IVP_Compact_Ledge_Solver::calc_qlen_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
000d5cb0 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Surface const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
000d5bc0 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Ledgetree_Node const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
000d5a30 t IVP_Compact_Ledge_Solver::calc_bounding_box(IVP_Compact_Ledge const*, IVP_U_Point*, IVP_U_Point*)
000d6570 t IVP_Compact_Ledge_Solver::calc_hesse_object(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Hesse*)
000d5cd0 t IVP_Compact_Ledge_Solver::calc_pos_other_space(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d70f0 t IVP_Compact_Ledge_Solver::calc_qlen_PF_F_space(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, IVP_U_Point const*)
000d7350 t IVP_Compact_Ledge_Solver::calc_qlen_PK_K_space(IVP_U_Point const*, IVP_Compact_Ledge const*, IVP_Compact_Edge const*)
000d72e0 t IVP_Compact_Ledge_Solver::calc_qlen_PP_P_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
000d7540 t IVP_Compact_Ledge_Solver::give_world_coords_AT(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d6bb0 t IVP_Compact_Ledge_Solver::calc_unscaled_KK_vals(IVP_KK_Input const&, IVP_Unscaled_KK_Result*)
0012a220 t IVP_Compact_Ledge_Solver::minimize_on_other_side(IVP_Compact_Edge const*, IVP_U_Point const*)
000d5f00 t IVP_Compact_Ledge_Solver::transform_pos_other_space(IVP_U_Float_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d5e10 t IVP_Compact_Ledge_Solver::transform_vec_other_space(IVP_U_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d5c20 t IVP_Compact_Ledge_Solver::calc_geom_center_and_radius(IVP_Compact_Ledge const*, IVP_U_Point*, double*)
000d66b0 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Ledge const*, IVP_U_Point const*, double*, double*)
000d6870 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Surface const*, IVP_U_Point const*, double*, double*)
000d6040 t IVP_Compact_Ledge_Solver::calc_unscaled_s_val_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_S_Result*)
000d6190 t IVP_Compact_Ledge_Solver::calc_unscaled_qr_vals_F_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_QR_Result*)
000d6a30 t IVP_Compact_Ledge_Solver::quad_dist_edge_to_point_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
000d65d0 t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Point*)
000d6940 t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Float_Point*)
00108bc0 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00108b30 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00108b30 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
001283c0 t IVP_Mindist_Event_Solver::next_event_BB(IVP_Mindist_Event_Solver*)
001298d0 t IVP_Mindist_Event_Solver::next_event_B_POLY(IVP_Mindist_Event_Solver*)
00128140 t IVP_Mindist_Event_Solver::calc_next_event_BB(IVP_Cache_Object*, IVP_Cache_Object*)
001269f0 t IVP_Mindist_Event_Solver::calc_next_event_BF(IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
00129280 t IVP_Mindist_Event_Solver::calc_next_event_BK(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
00127ba0 t IVP_Mindist_Event_Solver::calc_next_event_BP(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
00126c70 t IVP_Mindist_Event_Solver::calc_next_event_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00126380 t IVP_Mindist_Event_Solver::calc_next_event_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001284d0 t IVP_Mindist_Event_Solver::calc_next_event_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00127470 t IVP_Mindist_Event_Solver::calc_next_event_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001b7a00 b IVP_Mindist_Event_Solver::mim_function_table
00125a80 t IVP_Mindist_Event_Solver::next_event_illegal(IVP_Mindist_Event_Solver*)
00129b00 t IVP_Mindist_Event_Solver::init_mim_function_table()
00128f50 t IVP_Mindist_Event_Solver::next_event_default_poly_poly(IVP_Mindist_Event_Solver*)
000b7d00 t IVP_Object_Polygon_Tetra::p_link_edge(IVP_Tri_Edge*, IVP_Tri_Edge*)
000b7ca0 t IVP_Object_Polygon_Tetra::hide_triangle(IVP_Triangle*)
000b7750 t IVP_Object_Polygon_Tetra::rate_tri_edge(IVP_Tri_Edge*)
000b7670 t IVP_Object_Polygon_Tetra::free_triangles()
000b80d0 t IVP_Object_Polygon_Tetra::make_triangles()
000b9070 t IVP_Object_Polygon_Tetra::pop_concav_edge(IVP_Tri_Edge*)
000b7ba0 t IVP_Object_Polygon_Tetra::calc_concavities()
000b9cb0 t IVP_Object_Polygon_Tetra::insert_pierce_info()
000b77a0 t IVP_Object_Polygon_Tetra::add_edge_to_min_list(IVP_Tri_Edge*, P_HASH_CLASS, double)
000b8890 t IVP_Object_Polygon_Tetra::calc_extrusion_point(IVP_Tri_Edge const*, IVP_U_Point*)
000b7fc0 t IVP_Object_Polygon_Tetra::link_triangle_couple(IVP_Triangle*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*)
000b8ae0 t IVP_Object_Polygon_Tetra::pop_problematic_edge(IVP_Tri_Edge*)
000b6f20 t IVP_Object_Polygon_Tetra::final_convexify_check()
000b9020 t IVP_Object_Polygon_Tetra::link_existing_pop_edge(IVP_Tri_Edge*)
000b7f20 t IVP_Object_Polygon_Tetra::get_an_edge_with_points(IVP_Poly_Point*, IVP_Poly_Point*)
000b8650 t IVP_Object_Polygon_Tetra::generate_double_triangle(IVP_Poly_Point*, IVP_Poly_Point*, IVP_Poly_Point*)
000b7a70 t IVP_Object_Polygon_Tetra::move_edge_to_normal_hash(IVP_Tri_Edge*)
000b79b0 t IVP_Object_Polygon_Tetra::move_edge_to_epsilon_hash(IVP_Tri_Edge*)
000b7840 t IVP_Object_Polygon_Tetra::move_edge_to_problem_hash(IVP_Tri_Edge*)
000b77e0 t IVP_Object_Polygon_Tetra::remove_edge_from_min_list(IVP_Tri_Edge*)
000b7b40 t IVP_Object_Polygon_Tetra::check_concavity_and_manage(IVP_Tri_Edge*, P_CONVEXIFY_STATE)
000b8f80 t IVP_Object_Polygon_Tetra::record_intruding_convex_edges(IVP_Intrusion_Status*)
000b70b0 t IVP_Object_Polygon_Tetra::check_konsistency_of_triangles()
000b8770 t IVP_Object_Polygon_Tetra::make_double_triangle_permanent(IVP_Triangle*)
000b7f60 t IVP_Object_Polygon_Tetra::add_edge_into_point_to_edge_hash(IVP_Tri_Edge*)
000b7910 t IVP_Object_Polygon_Tetra::move_edge_to_convex_intrude_hash(IVP_Tri_Edge*)
000b9590 t IVP_Object_Polygon_Tetra::convexify()
000b6e20 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
000b6e20 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
000b7700 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
000b7700 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
0010b560 t IVP_Solver_Core_Reaction::init_rot_ws(IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
0010adb0 t IVP_Solver_Core_Reaction::init_trans_ws(IVP_U_Point const*, IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
0010d0a0 t IVP_Solver_Core_Reaction::invert_3x3_matrix()
0010c700 t IVP_Solver_Core_Reaction::exert_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
0010c270 t IVP_Solver_Core_Reaction::exert_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
0010bbc0 t IVP_Solver_Core_Reaction::exert_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
0010cf50 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
0010ccf0 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
0010c980 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
0010bb00 t IVP_Solver_Core_Reaction::init_reaction_solver_rotation_ws(IVP_Core*, IVP_Core*, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
0010ba10 t IVP_Solver_Core_Reaction::init_reaction_solver_translation_ws(IVP_Core*, IVP_Core*, IVP_U_Point&, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
00110000 t IVP_Template_Real_Object::IVP_Template_Real_Object()
00110000 t IVP_Template_Real_Object::IVP_Template_Real_Object()
00110070 t IVP_Template_Real_Object::~IVP_Template_Real_Object()
00110070 t IVP_Template_Real_Object::~IVP_Template_Real_Object()
0010ff60 t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
0010ff60 t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
000570a0 t vehicle_steeringparams_t::GetBaseMap()
001aeb40 d vehicle_steeringparams_t::m_DataMap
00081b00 t BreakableConstraintHelper::~BreakableConstraintHelper()
00081b00 t BreakableConstraintHelper::~BreakableConstraintHelper()
00041f10 t CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
00041fb0 t CPhysicsListenerCollision::CorePairLessFunc(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&)
00041e90 t CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
00042930 t CPhysicsListenerCollision::event_pre_collision(IVP_Event_Collision*)
00041e70 t CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00042a80 t CPhysicsListenerCollision::event_post_collision(IVP_Event_Collision*)
00041c60 t CPhysicsListenerCollision::event_friction_created(IVP_Event_Friction*)
00041da0 t CPhysicsListenerCollision::event_friction_deleted(IVP_Event_Friction*)
00041e50 t CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
000413c0 t CPhysicsListenerCollision::event_friction_pair_created(IVP_Friction_Core_Pair*)
00041530 t CPhysicsListenerCollision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
00041c50 t CPhysicsListenerCollision::event_collision_object_deleted(IVP_Real_Object*)
00041f90 t CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
0003fce0 t CPhysicsListenerCollision::CPhysicsListenerCollision()
0003fce0 t CPhysicsListenerCollision::CPhysicsListenerCollision()
00044030 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
00043fe0 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
00043fe0 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
0007fbc0 t hk_Ball_Socket_Constraint::init_constraint(void const*)
0007fc30 t hk_Ball_Socket_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00080100 t hk_Ball_Socket_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00080190 t hk_Ball_Socket_Constraint::get_constraint_dof()
000800a0 t hk_Ball_Socket_Constraint::write_to_blueprint(hk_Ball_Socket_BP*)
00080180 t hk_Ball_Socket_Constraint::get_constraint_type()
0007fc20 t hk_Ball_Socket_Constraint::get_vmq_storage_size()
00080270 t hk_Ball_Socket_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00080040 t hk_Ball_Socket_Constraint::init_ball_socket_constraint(hk_Ball_Socket_BP const*)
0007ff00 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007ffa0 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007ff00 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007ffa0 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
000801c0 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
000801a0 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
000801a0 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
0005a360 t IPhysicsVehicleController::~IPhysicsVehicleController()
0005a280 t IPhysicsVehicleController::~IPhysicsVehicleController()
0005a280 t IPhysicsVehicleController::~IPhysicsVehicleController()
00126220 t IVP_3D_Solver_KK_PARALLEL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000da020 t IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
000dbcf0 t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
000dbcf0 t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
000da430 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000da3f0 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000da3f0 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000df910 t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
000df910 t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
000dfa10 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
000dfa10 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
000e11f0 t IVP_Constraint_Solver_Car::get_controller_name()
000e0f70 t IVP_Constraint_Solver_Car::init_constraint_system(IVP_Environment*, IVP_Real_Object*, IVP_U_Vector<IVP_Real_Object>&, IVP_U_Vector<IVP_U_Float_Point>&)
000e1210 t IVP_Constraint_Solver_Car::get_controller_priority()
000dfe30 t IVP_Constraint_Solver_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e11e0 t IVP_Constraint_Solver_Car::get_associated_controlled_cores()
000e1200 t IVP_Constraint_Solver_Car::get_minimum_simulation_frequency()
000df6f0 t IVP_Constraint_Solver_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000dfaf0 t IVP_Constraint_Solver_Car::do_simulation_controller_rotation(IVP_Event_Sim*, IVP_Core*, IVP_U_Matrix const*)
000dfa30 t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
000dfa30 t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
000df8f0 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000df7d0 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000df7d0 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000d5040 t IVP_Meta_Collision_Filter::add_collision_filter(IVP_Collision_Filter*)
000d5080 t IVP_Meta_Collision_Filter::remove_collision_filter(IVP_Collision_Filter*)
000d4c40 t IVP_Meta_Collision_Filter::environment_will_be_deleted(IVP_Environment*)
000d4a80 t IVP_Meta_Collision_Filter::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000d5100 t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
000d5100 t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
000d4bf0 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
000d4d00 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
000d4d00 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
00106b30 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
00106b30 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
001129b0 t IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
00110b70 t IVP_U_Active_Add_Multiple::print()
001134d0 t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, double)
001134d0 t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, double)
00111900 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
001117b0 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
001117b0 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
00112b70 t IVP_U_Active_Terminal_Int::update_int()
00110990 t IVP_U_Active_Terminal_Int::print()
00110f00 t IVP_U_Active_Terminal_Int::set_int(int, IVP_BOOL)
00112e20 t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
00112e20 t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
001139f0 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
001139d0 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
001139d0 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
0011c8d0 t IVP_U_Min_Hash_Enumerator::get_next_element()
0011c930 t IVP_U_Min_Hash_Enumerator::get_next_element_lt(double)
0011c8b0 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
0011c8b0 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
0011d030 t IVP_U_Min_List_Enumerator::get_next_element()
0011d090 t IVP_U_Min_List_Enumerator::get_next_element_lt(float)
0011d060 t IVP_U_Min_List_Enumerator::get_next_element_header()
0011d010 t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
0011d010 t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
0009d330 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
0009d330 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
00056bd0 t vehicle_operatingparams_t::GetBaseMap()
001aebe0 d vehicle_operatingparams_t::m_DataMap
00034d80 t CPhysCollideCompactSurface::SetMassCenter(Vector const&)
000378c0 t CPhysCollideCompactSurface::InitCollideMap()
00034df0 t CPhysCollideCompactSurface::SetOrthographicAreas(Vector const&)
00035700 t CPhysCollideCompactSurface::ComputeOrthographicAreas(float)
000379b0 t CPhysCollideCompactSurface::Init(char const*, unsigned int, int, bool)
00037d70 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
00037a90 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
00037a40 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
00037d70 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
00037a90 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
00037a40 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
00035550 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00035510 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00035510 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00042150 t CPhysicsListenerConstraint::event_constraint_broken(IVP_Constraint*)
00042380 t CPhysicsListenerConstraint::event_constraint_broken(hk_Breakable_Constraint*)
00030170 t CVPhysicsVirtualMeshWriter::LedgeCanBePacked(IVP_Compact_Ledge const*, virtualmeshlist_t const&)
0002ff10 t CVPhysicsVirtualMeshWriter::DestroyPackedHull(virtualmeshhull_t*)
0002ff30 t CVPhysicsVirtualMeshWriter::UnpackLedgeListFromHull(unsigned char*, virtualmeshhull_t*, IVP_Compact_Poly_Point*)
0002fe00 t CVPhysicsVirtualMeshWriter::InitTwoSidedTriangleLege(triangleledge_t*, IVP_Compact_Poly_Point const*, int, int, int, int)
000308d0 t CVPhysicsVirtualMeshWriter::CreatePackedHullFromLedges(virtualmeshlist_t const&, IVP_Compact_Ledge const**, int)
0002fa90 t CVPhysicsVirtualMeshWriter::UnpackCompactLedgeFromHull(IVP_Compact_Ledge*, int, IVP_Compact_Poly_Point const*, virtualmeshhull_t const*, int, bool)
0007ecd0 t hk_Local_Constraint_System::deactivate()
0007f060 t hk_Local_Constraint_System::get_epsilon()
0007ed10 t hk_Local_Constraint_System::add_constraint(hk_Constraint*, int)
0007f130 t hk_Local_Constraint_System::sort_constraints()
0007ef80 t hk_Local_Constraint_System::solve_penetration(IVP_Real_Object*, IVP_Real_Object*)
0007f360 t hk_Local_Constraint_System::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0007eb60 t hk_Local_Constraint_System::write_to_blueprint(hk_Local_Constraint_System_BP*)
0007ee50 t hk_Local_Constraint_System::deactivate_silently()
0007eba0 t hk_Local_Constraint_System::recalc_storage_size()
0007f070 t hk_Local_Constraint_System::report_square_error(float)
0007e950 t hk_Local_Constraint_System::entity_deletion_event(hk_Rigid_Body*)
0007ee80 t hk_Local_Constraint_System::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
0007fad0 t hk_Local_Constraint_System::get_effector_priority()
0007ec00 t hk_Local_Constraint_System::constraint_deletion_event(hk_Constraint*)
0007ef00 t hk_Local_Constraint_System::get_constraints_in_system(hk_Array<hk_Constraint*>&)
0007e8e0 t hk_Local_Constraint_System::core_is_going_to_be_deleted_event(IVP_Core*)
0007ec90 t hk_Local_Constraint_System::activate()
0007f090 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0007f090 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0007eb40 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0007ea30 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0007ea30 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
00091e40 t hk_Stiff_Spring_Constraint::set_length(float)
00091970 t hk_Stiff_Spring_Constraint::init_constraint(void const*)
000919f0 t hk_Stiff_Spring_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00091e60 t hk_Stiff_Spring_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00091ef0 t hk_Stiff_Spring_Constraint::get_constraint_dof()
00091c60 t hk_Stiff_Spring_Constraint::write_to_blueprint(hk_Stiff_Spring_BP*)
00091ee0 t hk_Stiff_Spring_Constraint::get_constraint_type()
000919e0 t hk_Stiff_Spring_Constraint::get_vmq_storage_size()
00091f50 t hk_Stiff_Spring_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00091bf0 t hk_Stiff_Spring_Constraint::init_stiff_spring_constraint(hk_Stiff_Spring_BP const*)
00091cd0 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00091d90 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00091cd0 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00091d90 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00091f20 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
00091f00 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
00091f00 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
000dc7b0 t IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
000dd5c0 t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
000dd5c0 t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
000dce50 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000dcd90 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000dcd90 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000da080 t IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
000dc340 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
000dc340 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
000da6f0 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000da690 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000da690 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000de5e0 t IVP_Car_System_Real_Wheels::do_steering(float, bool)
000dd970 t IVP_Car_System_Real_Wheels::get_skid_info(IVP_Wheel_Skid_Info*)
000dd840 t IVP_Car_System_Real_Wheels::get_body_speed(IVP_COORDINATE_INDEX)
000ddca0 t IVP_Car_System_Real_Wheels::set_powerslide(float, float)
000de0c0 t IVP_Car_System_Real_Wheels::update_booster(float)
000df590 t IVP_Car_System_Real_Wheels::update_throttle(float)
000de120 t IVP_Car_System_Real_Wheels::activate_booster(float, float, float)
000dd820 t IVP_Car_System_Real_Wheels::get_wheel_torque(IVP_POS_WHEEL)
000ddd20 t IVP_Car_System_Real_Wheels::do_steering_wheel(IVP_POS_WHEEL, float)
000dd9e0 t IVP_Car_System_Real_Wheels::get_booster_delay()
000ddbe0 t IVP_Car_System_Real_Wheels::change_wheel_torque(IVP_POS_WHEEL, float)
000ddb80 t IVP_Car_System_Real_Wheels::change_spring_length(IVP_POS_WHEEL, float)
000de500 t IVP_Car_System_Real_Wheels::event_object_deleted(IVP_Event_Object*)
000ddc70 t IVP_Car_System_Real_Wheels::change_body_downforce(float)
000ddb10 t IVP_Car_System_Real_Wheels::change_max_body_force(IVP_POS_WHEEL, float)
000de010 t IVP_Car_System_Real_Wheels::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
000dda70 t IVP_Car_System_Real_Wheels::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000dddf0 t IVP_Car_System_Real_Wheels::change_spring_constant(IVP_POS_WHEEL, float)
000df5b0 t IVP_Car_System_Real_Wheels::get_booster_time_to_go()
000df5a0 t IVP_Car_System_Real_Wheels::update_wheel_positions()
000dd800 t IVP_Car_System_Real_Wheels::change_fast_turn_factor(float)
000ddae0 t IVP_Car_System_Real_Wheels::change_spring_dampening(IVP_POS_WHEEL, float)
000dd900 t IVP_Car_System_Real_Wheels::get_orig_axles_distance()
000de470 t IVP_Car_System_Real_Wheels::set_booster_acceleration(float)
000de1d0 t IVP_Car_System_Real_Wheels::set_booster_acceleration(float) [clone .part.7]
000ddb50 t IVP_Car_System_Real_Wheels::change_spring_pre_tension(IVP_POS_WHEEL, float)
000ddc10 t IVP_Car_System_Real_Wheels::update_body_countertorque()
000ddbb0 t IVP_Car_System_Real_Wheels::change_stabilizer_constant(IVP_POS_AXIS, float)
000dd940 t IVP_Car_System_Real_Wheels::get_wheel_angular_velocity(IVP_POS_WHEEL)
000dda40 t IVP_Car_System_Real_Wheels::environment_will_be_deleted(IVP_Environment*)
000de4e0 t IVP_Car_System_Real_Wheels::change_wheel_speed_dampening(IVP_POS_WHEEL, float)
000dd8c0 t IVP_Car_System_Real_Wheels::get_orig_front_wheel_distance()
000ddb30 t IVP_Car_System_Real_Wheels::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000dde20 t IVP_Car_System_Real_Wheels::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000de840 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
000de840 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
000dda80 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000dda00 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000dda00 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000d5470 t IVP_Compact_Ledgetree_Node::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
000d5420 t IVP_Compact_Ledgetree_Node::byte_swap()
001b5160 b IVP_Controller_Independent::empty_list
00108ab0 t IVP_Controller_Independent::get_associated_controlled_cores()
00108ba0 t IVP_Controller_Independent::~IVP_Controller_Independent()
00108ae0 t IVP_Controller_Independent::~IVP_Controller_Independent()
00108ae0 t IVP_Controller_Independent::~IVP_Controller_Independent()
000e3170 t IVP_Controller_Raycast_Car::do_steering(float, bool)
000e2e80 t IVP_Controller_Raycast_Car::get_skid_info(IVP_Wheel_Skid_Info*)
000e2d90 t IVP_Controller_Raycast_Car::get_body_speed(IVP_COORDINATE_INDEX)
000e49f0 t IVP_Controller_Raycast_Car::set_powerslide(float, float)
000e4a00 t IVP_Controller_Raycast_Car::update_booster(float)
000e49d0 t IVP_Controller_Raycast_Car::update_throttle(float)
000e3120 t IVP_Controller_Raycast_Car::activate_booster(float, float, float)
000e2c60 t IVP_Controller_Raycast_Car::get_wheel_torque(IVP_POS_WHEEL)
000e3090 t IVP_Controller_Raycast_Car::do_steering_wheel(IVP_POS_WHEEL, float)
000e2d40 t IVP_Controller_Raycast_Car::get_booster_delay()
000e3b50 t IVP_Controller_Raycast_Car::CalcSteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
000e3800 t IVP_Controller_Raycast_Car::DoSimulationShocks(IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, IVP_Event_Sim*, IVP_Core*)
000e3370 t IVP_Controller_Raycast_Car::DoSimulationWheels(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, float*, IVP_Core*)
000e4900 t IVP_Controller_Raycast_Car::InitRaycastCarAxes(IVP_Template_Car_System const*)
000e45c0 t IVP_Controller_Raycast_Car::InitRaycastCarBody(IVP_Template_Car_System const*)
000e32a0 t IVP_Controller_Raycast_Car::SetupWheelRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*)
000e3e60 t IVP_Controller_Raycast_Car::ApplySteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
000e30e0 t IVP_Controller_Raycast_Car::change_wheel_torque(IVP_POS_WHEEL, float)
000e3a10 t IVP_Controller_Raycast_Car::DoSimulationBooster(IVP_Event_Sim*, IVP_Core*)
000e2c40 t IVP_Controller_Raycast_Car::change_spring_length(IVP_POS_WHEEL, float)
000e4280 t IVP_Controller_Raycast_Car::DoSimulationSteering(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*)
000e4660 t IVP_Controller_Raycast_Car::InitRaycastCarWheels(IVP_Template_Car_System const*)
000e2ce0 t IVP_Controller_Raycast_Car::change_body_downforce(float)
000e49c0 t IVP_Controller_Raycast_Car::change_max_body_force(IVP_POS_WHEEL, float)
000e2fb0 t IVP_Controller_Raycast_Car::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
000e2ee0 t IVP_Controller_Raycast_Car::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000e2bb0 t IVP_Controller_Raycast_Car::change_spring_constant(IVP_POS_WHEEL, float)
000e4a10 t IVP_Controller_Raycast_Car::get_booster_time_to_go()
000e2cd0 t IVP_Controller_Raycast_Car::change_fast_turn_factor(float)
000e2bd0 t IVP_Controller_Raycast_Car::change_spring_dampening(IVP_POS_WHEEL, float)
000e3700 t IVP_Controller_Raycast_Car::DoSimulationStabilizers(IVP_Raycast_Car_Wheel_Temp*)
000e2d00 t IVP_Controller_Raycast_Car::get_controller_priority()
000e2e40 t IVP_Controller_Raycast_Car::get_orig_axles_distance()
000e42e0 t IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e2d20 t IVP_Controller_Raycast_Car::set_booster_acceleration(float)
000e2c10 t IVP_Controller_Raycast_Car::change_spring_pre_tension(IVP_POS_WHEEL, float)
000e44e0 t IVP_Controller_Raycast_Car::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
000e49e0 t IVP_Controller_Raycast_Car::update_body_countertorque()
000e2cb0 t IVP_Controller_Raycast_Car::change_stabilizer_constant(IVP_POS_AXIS, float)
000e2d60 t IVP_Controller_Raycast_Car::get_wheel_angular_velocity(IVP_POS_WHEEL)
000e2e00 t IVP_Controller_Raycast_Car::get_orig_front_wheel_distance()
000e49a0 t IVP_Controller_Raycast_Car::get_associated_controlled_cores()
000e4970 t IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000e2bf0 t IVP_Controller_Raycast_Car::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000e4a70 t IVP_Controller_Raycast_Car::get_axis(IVP_POS_AXIS)
000e2c90 t IVP_Controller_Raycast_Car::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000e4a50 t IVP_Controller_Raycast_Car::get_wheel(IVP_POS_WHEEL)
000e4800 t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
000e4800 t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
000e3270 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000e31f0 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000e31f0 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
0010d0f0 t IVP_Event_Manager_Standard::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
0010d8b0 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
0010d860 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
0010d860 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
000f2360 t IVP_Friction_Info_For_Core::dist_number()
000f1830 t IVP_Friction_Info_For_Core::set_all_dists_of_obj_neutral()
000f22e0 t IVP_Friction_Info_For_Core::friction_info_delete_friction_dist(IVP_Contact_Point*)
000f22a0 t IVP_Friction_Info_For_Core::friction_info_insert_friction_dist(IVP_Contact_Point*)
000fa290 t IVP_Great_Matrix_Many_Zero::lu_inverse(IVP_Great_Matrix_Many_Zero*, int*)
000f7b40 t IVP_Great_Matrix_Many_Zero::copy_matrix(double*, double*)
000f7ad0 t IVP_Great_Matrix_Many_Zero::copy_matrix(IVP_Great_Matrix_Many_Zero*)
000f81f0 t IVP_Great_Matrix_Many_Zero::test_result(double*, double*)
000f85d0 t IVP_Great_Matrix_Many_Zero::mult_aligned()
000f7ba0 t IVP_Great_Matrix_Many_Zero::exchange_rows(int, int)
000f7a70 t IVP_Great_Matrix_Many_Zero::debug_fill_zero()
000f7950 t IVP_Great_Matrix_Many_Zero::add_multiple_line(int, int, double)
000f8420 t IVP_Great_Matrix_Many_Zero::copy_to_sub_matrix(double*, IVP_Great_Matrix_Many_Zero*, int*)
000f7b30 t IVP_Great_Matrix_Many_Zero::align_matrix_values()
000f7cb0 t IVP_Great_Matrix_Many_Zero::find_pivot_in_column(int)
000f8090 t IVP_Great_Matrix_Many_Zero::matrix_multiplication(double*, double*)
000f7930 t IVP_Great_Matrix_Many_Zero::matrix_test_unequation()
000f8290 t IVP_Great_Matrix_Many_Zero::fill_from_bigger_matrix(IVP_Great_Matrix_Many_Zero*, int*, int)
000f7940 t IVP_Great_Matrix_Many_Zero::matrix_out_before_gauss()
000f7e60 t IVP_Great_Matrix_Many_Zero::solve_lower_null_matrix()
000f7840 t IVP_Great_Matrix_Many_Zero::matrix_check_unequation_line(int)
000f8070 t IVP_Great_Matrix_Many_Zero::solve_great_matrix_many_zero()
000f7d40 t IVP_Great_Matrix_Many_Zero::transform_to_lower_null_triangle()
000f86d0 t IVP_Great_Matrix_Many_Zero::mult()
000fa360 t IVP_Great_Matrix_Many_Zero::invert(IVP_Great_Matrix_Many_Zero*)
000f99b0 t IVP_Great_Matrix_Many_Zero::lu_crout(int*, double*)
000f9f10 t IVP_Great_Matrix_Many_Zero::lu_solve(int*)
000f8490 t IVP_Great_Matrix_Many_Zero::set_value(double, int, int)
000f8200 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
000f8260 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
000f8200 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
000f8260 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
000bade0 t IVP_Intrusion_Intersection::p()
000bad10 t IVP_Intrusion_Intersection::print(char const*)
001102a0 t IVP_SurfaceManager_Polygon::add_reference_to_ledge(IVP_Compact_Ledge const*)
00110300 t IVP_SurfaceManager_Polygon::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
001102b0 t IVP_SurfaceManager_Polygon::remove_reference_to_ledge(IVP_Compact_Ledge const*)
00110600 t IVP_SurfaceManager_Polygon::get_all_ledges_within_radius(IVP_U_Point const*, double, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
001102c0 t IVP_SurfaceManager_Polygon::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
00110290 t IVP_SurfaceManager_Polygon::get_type()
00110730 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
00110710 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
00110730 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
00110710 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
001103f0 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
001103d0 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
001103d0 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
00110e30 t IVP_U_Active_Value_Manager::delay_active_int(IVP_U_Active_Int_Delayed*)
00112f80 t IVP_U_Active_Value_Manager::create_active_int(char const*, int)
00112090 t IVP_U_Active_Value_Manager::insert_active_int(IVP_U_Active_Int*)
00111f70 t IVP_U_Active_Value_Manager::remove_active_int(IVP_U_Active_Int*)
00110db0 t IVP_U_Active_Value_Manager::delay_active_float(IVP_U_Active_Float_Delayed*)
00113030 t IVP_U_Active_Value_Manager::install_active_int(char const*, int)
001125f0 t IVP_U_Active_Value_Manager::create_active_float(char const*, double)
00111fd0 t IVP_U_Active_Value_Manager::insert_active_float(IVP_U_Active_Float*)
00111f10 t IVP_U_Active_Value_Manager::remove_active_float(IVP_U_Active_Float*)
00112520 t IVP_U_Active_Value_Manager::install_active_float(char const*, double)
00112e90 t IVP_U_Active_Value_Manager::get_active_int_by_name(char const*)
00112420 t IVP_U_Active_Value_Manager::get_active_float_by_name(char const*)
00110750 t IVP_U_Active_Value_Manager::refresh_psi_active_values(IVP_Environment*)
001121e0 t IVP_U_Active_Value_Manager::init_active_values_generic()
00113a20 t IVP_U_Active_Value_Manager::environment_will_be_deleted(IVP_Environment*)
00111020 t IVP_U_Active_Value_Manager::update_delayed_active_values()
001122d0 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
001122d0 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
00111000 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
00110f50 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
00110f50 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
00056f00 t vehicle_suspensionparams_t::GetBaseMap()
001aeb80 d vehicle_suspensionparams_t::m_DataMap
000da140 t IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
000dc080 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
000dc080 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
000da610 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000da590 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000da590 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
00106710 t IVP_Application_Environment::IVP_Application_Environment()
00106710 t IVP_Application_Environment::IVP_Application_Environment()
0010ea20 t IVP_BetterStatisticsmanager::remove_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
0010e9e0 t IVP_BetterStatisticsmanager::install_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
0010e9a0 t IVP_BetterStatisticsmanager::set_simulation_time(double)
0010eaf0 t IVP_BetterStatisticsmanager::remove_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
0010eab0 t IVP_BetterStatisticsmanager::install_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
0010e910 t IVP_BetterStatisticsmanager::print()
0010eb80 t IVP_BetterStatisticsmanager::enable()
0010eb90 t IVP_BetterStatisticsmanager::disable()
0010eba0 t IVP_BetterStatisticsmanager::get_state()
0010ebb0 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
0010ebb0 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
0010ec00 t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
0010ec00 t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
000b43d0 t IVP_Compact_Ledge_Generator::prepare_compact_ledge(IVP_U_Vector<IVP_Triangle>*)
000b4730 t IVP_Compact_Ledge_Generator::generate_compact_ledge(unsigned char*)
000b43b0 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
000b43b0 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
000b4810 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
000b4810 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
00134aa0 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
00134aa0 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
00134ac0 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
00134ac0 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
000ffc10 t IVP_Impact_Solver_Long_Term::do_impact_long_term(IVP_Core**, float, IVP_Contact_Point*)
000ff680 t IVP_Impact_Solver_Long_Term::get_best_merge_core(IVP_Core*, IVP_Core*, IVP_Core*)
00100810 t IVP_Impact_Solver_Long_Term::do_impact_of_two_objects(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*)
000ff600 t IVP_Impact_Solver_Long_Term::find_second_critical_impact_core(IVP_Core*, IVP_Core*)
00129ea0 t IVP_Mindist_Minimize_Solver::minimize_BB(IVP_Mindist_Minimize_Solver*)
00129e60 t IVP_Mindist_Minimize_Solver::minimize_FB(IVP_Mindist_Minimize_Solver*)
00129e20 t IVP_Mindist_Minimize_Solver::minimize_KB(IVP_Mindist_Minimize_Solver*)
00129de0 t IVP_Mindist_Minimize_Solver::minimize_PB(IVP_Mindist_Minimize_Solver*)
00139b50 t IVP_Mindist_Minimize_Solver::p_minimize_BF(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00139a80 t IVP_Mindist_Minimize_Solver::p_minimize_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00139e40 t IVP_Mindist_Minimize_Solver::p_minimize_BP(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
0012a770 t IVP_Mindist_Minimize_Solver::p_minimize_FF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0013b240 t IVP_Mindist_Minimize_Solver::p_minimize_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0013c720 t IVP_Mindist_Minimize_Solver::p_minimize_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0013b180 t IVP_Mindist_Minimize_Solver::p_minimize_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0013aba0 t IVP_Mindist_Minimize_Solver::p_minimize_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0012a110 t IVP_Mindist_Minimize_Solver::init_loop_hash()
0012a350 t IVP_Mindist_Minimize_Solver::pierce_mindist()
0012a120 t IVP_Mindist_Minimize_Solver::check_loop_hash(IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*)
00129be0 t IVP_Mindist_Minimize_Solver::minimize_B_POLY(IVP_Mindist_Minimize_Solver*)
00129bb0 t IVP_Mindist_Minimize_Solver::minimize_illegal(IVP_Mindist_Minimize_Solver*)
001b7a40 b IVP_Mindist_Minimize_Solver::mms_function_table
00139460 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
0013bcf0 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_KK_Input const&, IVP_Unscaled_KK_Result const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0013b6a0 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PF(IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0013a240 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0012a640 t IVP_Mindist_Minimize_Solver::init_mms_function_table()
0012b240 t IVP_Mindist_Minimize_Solver::minimize_default_poly_poly(IVP_Mindist_Minimize_Solver*)
0012b510 t IVP_Mindist_Minimize_Solver::minimize_swapped_poly_poly(IVP_Mindist_Minimize_Solver*)
00106580 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
00106580 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
00106320 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00106300 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00106300 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00038800 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
00038800 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
0004c220 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
0004c1e0 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
0004c1e0 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
00106b70 t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
00106b70 t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
00121c80 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
00121c30 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
00121c30 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
000fb840 t IVP_Linear_Constraint_Solver::full_setup()
000f8a90 t IVP_Linear_Constraint_Solver::alloc_memory(IVP_U_Memory*)
000fc9e0 t IVP_Linear_Constraint_Solver::debug_dep_var(int)
000f9280 t IVP_Linear_Constraint_Solver::debug_out_lcs()
000fc3f0 t IVP_Linear_Constraint_Solver::startup_setup(int)
000fb650 t IVP_Linear_Constraint_Solver::get_fdirection()
000f9190 t IVP_Linear_Constraint_Solver::start_debug_lcs()
000faf60 t IVP_Linear_Constraint_Solver::setup_l_u_solver()
000f90a0 t IVP_Linear_Constraint_Solver::update_step_vars(double)
000fc5b0 t IVP_Linear_Constraint_Solver::init_and_solve_lc(double*, double*, double*, int, int, IVP_U_Memory*)
000f8f30 t IVP_Linear_Constraint_Solver::increase_step_count(int*)
000fbd50 t IVP_Linear_Constraint_Solver::decrement_sub_solver(int)
000fbd20 t IVP_Linear_Constraint_Solver::decrement_sub_solver(int) [clone .part.2]
000fb3e0 t IVP_Linear_Constraint_Solver::increment_sub_solver()
000f97a0 t IVP_Linear_Constraint_Solver::move_variable_to_end(int)
000f9910 t IVP_Linear_Constraint_Solver::debug_test_all_values()
000f96c0 t IVP_Linear_Constraint_Solver::get_values_when_setup()
000f9060 t IVP_Linear_Constraint_Solver::exchange_activ_inactiv(int)
000f8f40 t IVP_Linear_Constraint_Solver::exchange_lcs_variables(int, int)
000f97f0 t IVP_Linear_Constraint_Solver::full_setup_test_ranges()
000f95f0 t IVP_Linear_Constraint_Solver::lcs_bubble_sort_x_vals()
000f89d0 t IVP_Linear_Constraint_Solver::numerical_stability_ok()
000f87e0 t IVP_Linear_Constraint_Solver::mult_active_x_for_accel()
000f88a0 t IVP_Linear_Constraint_Solver::mult_x_with_full_A_minus_b()
000f8f80 t IVP_Linear_Constraint_Solver::do_a_little_random_permutation()
000fbd80 t IVP_Linear_Constraint_Solver::move_not_necessary_actives_to_inactives()
000fbe20 t IVP_Linear_Constraint_Solver::solve_lc()
0009b6d0 t IVP_SurfaceBuilder_Pointsoup::error_output(IVP_Template_Polygon*)
001b3920 b IVP_SurfaceBuilder_Pointsoup::single_tri_ledge
0009af40 t IVP_SurfaceBuilder_Pointsoup::planes_to_template(IVP_U_Vector<IVP_U_Point>*, IVP_U_Vector<IVP_SurMan_PS_Plane>*)
0009aed0 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_lineslist(IVP_Template_Line*, int, int, int, char*)
0009ae80 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_pointlist(IVP_Template_Point*, int, IVP_U_Point*)
0009bd30 t IVP_SurfaceBuilder_Pointsoup::convert_triangle_to_compace_ledge(IVP_U_Point*, IVP_U_Point*, IVP_U_Point*)
0009bf60 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge(IVP_U_Vector<IVP_U_Point>*)
0009c740 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_surface(IVP_U_Vector<IVP_U_Point>*)
0009bfb0 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge_internal(IVP_U_Vector<IVP_U_Point>*)
0009b820 t IVP_SurfaceBuilder_Pointsoup::try_to_build_convex_ledge_from_qhull_result(IVP_U_Vector<IVP_U_Point>*, IVP_BOOL*, char*, char*)
0009bcf0 t IVP_SurfaceBuilder_Pointsoup::cleanup()
00110eb0 t IVP_U_Active_Terminal_Double::set_double(double, IVP_BOOL)
00112770 t IVP_U_Active_Terminal_Double::update_float()
00110970 t IVP_U_Active_Terminal_Double::print()
00112dd0 t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, double)
00112dd0 t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, double)
001139a0 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
00113980 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
00113980 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
001b08a0 b vehicleparams_t_DataDescInit::g_DataMapHolder
000bacf0 t IVP_Intrusion_Included_Points::p()
000baca0 t IVP_Intrusion_Included_Points::print(char const*)
0010f900 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
0010f8e0 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
0010f8e0 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
0010fd10 t IVP_PerformanceCounter_Simple::stop_pcount()
0010fd00 t IVP_PerformanceCounter_Simple::start_pcount()
0010fcc0 t IVP_PerformanceCounter_Simple::environment_is_going_to_be_deleted(IVP_Environment*)
0010fd40 t IVP_PerformanceCounter_Simple::reset_and_print_performance_counters(IVP_Time)
0010fcf0 t IVP_PerformanceCounter_Simple::pcount(IVP_PERFORMANCE_ELEMENT)
0010fe60 t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
0010fe60 t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
0010fd20 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
0010fce0 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
0010fce0 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
00097c00 t IVP_SurfaceBuilder_Ledge_Soup::insert_ledge(IVP_Compact_Ledge*)
00099820 t IVP_SurfaceBuilder_Ledge_Soup::build_ledgetree(IVV_Sphere*)
00097e90 t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_spheres()
00098a50 t IVP_SurfaceBuilder_Ledge_Soup::build_minimal_sphere(IVV_Sphere*, IVV_Sphere*)
000991f0 t IVP_SurfaceBuilder_Ledge_Soup::calculate_boundingbox(IVP_U_Vector<IVV_Sphere>*, IVP_U_Float_Point*, IVP_U_Float_Point*)
000994d0 t IVP_SurfaceBuilder_Ledge_Soup::insert_compact_ledges()
00097cf0 t IVP_SurfaceBuilder_Ledge_Soup::build_root_convex_hull()
000995d0 t IVP_SurfaceBuilder_Ledge_Soup::allocate_compact_surface()
00098d90 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_bottomup(double)
00099b20 t IVP_SurfaceBuilder_Ledge_Soup::create_compact_ledgetree()
00098710 t IVP_SurfaceBuilder_Ledge_Soup::combine_spheres_in_vector(IVV_Cluster_Min_Hash*)
00098630 t IVP_SurfaceBuilder_Ledge_Soup::generate_interval_minhash(float)
00099b60 t IVP_SurfaceBuilder_Ledge_Soup::convert_ledges_to_templates(IVP_U_BigVector<IVP_Compact_Ledge>&, IVP_U_Vector<IVP_Template_Polygon>*)
000981f0 t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_boxes_and_spheres()
00099960 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_array_debug_output()
00097c80 t IVP_SurfaceBuilder_Ledge_Soup::add_ledge_tree_to_convex_hull(IVP_Compact_Recursive&, IVV_Sphere*)
00099a40 t IVP_SurfaceBuilder_Ledge_Soup::insert_radius_in_compact_surface()
0009ac50 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut(double)
00099370 t IVP_SurfaceBuilder_Ledge_Soup::recompile_point_indizes_of_compact_ledge(IVP_Compact_Ledge*, char*)
00099f20 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut_recursively(IVP_U_Vector<IVV_Sphere>*)
000989d0 t IVP_SurfaceBuilder_Ledge_Soup::remove_all_further_spherecombinations_from_hash(IVV_Cluster_Min_Hash*, int)
00098cc0 t IVP_SurfaceBuilder_Ledge_Soup::replace_childspheres_in_spherelist_with_motherspheres()
00097dd0 t IVP_SurfaceBuilder_Ledge_Soup::cleanup()
0009ad40 t IVP_SurfaceBuilder_Ledge_Soup::compile(IVP_Template_Surbuild_LedgeSoup*)
00097a90 t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
00097a90 t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
00097ae0 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
00097ae0 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
00136900 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
00136900 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
00106b10 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
00106b10 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
000e2950 t IVP_Attacher_To_Cores_Buoyancy::get_buoyancy_surface(IVP_Real_Object*)
000e2940 t IVP_Attacher_To_Cores_Buoyancy::get_parameters_per_core(IVP_Core*)
000e2720 t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000e2720 t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000e2a00 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
000e2960 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
000e2960 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
00106460 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
00106460 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
00106470 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
00106470 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
00138950 t IVP_Object_Callback_Table_Hash::find_table(IVP_Real_Object*)
001388c0 t IVP_Object_Callback_Table_Hash::remove_table(IVP_Real_Object*)
00138820 t IVP_Object_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
00138860 t IVP_Object_Callback_Table_Hash::add_table(IVP_Object_Callback_Table*)
001389e0 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
001389e0 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
00138800 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
001387a0 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
001387a0 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
0005ac30 t IVP_SurfaceManager_VirtualMesh::add_reference_to_ledge(IVP_Compact_Ledge const*)
0005a4d0 t IVP_SurfaceManager_VirtualMesh::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
0005a590 t IVP_SurfaceManager_VirtualMesh::remove_reference_to_ledge(IVP_Compact_Ledge const*)
0005ae30 t IVP_SurfaceManager_VirtualMesh::get_all_ledges_within_radius(IVP_U_Point const*, double, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
0005b150 t IVP_SurfaceManager_VirtualMesh::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
0005bbe0 t IVP_SurfaceManager_VirtualMesh::get_type()
0005bbc0 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
0005bbc0 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
0005a700 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
0005a6e0 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
0005a6e0 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
00136540 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
00136540 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
000511d0 t vphysics_save_cphysicsobject_t::GetBaseMap()
001ac9d0 d vphysics_save_cphysicsobject_t::m_DataMap
00055be0 t vphysics_save_cphysicsspring_t::GetBaseMap()
001ad190 d vphysics_save_cphysicsspring_t::m_DataMap
00125c80 t IVP_3D_Solver_VEC_PARALLEL_AREA::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00108ad0 t IVP_Standard_Gravity_Controller::get_controller_name()
0010a350 t IVP_Standard_Gravity_Controller::set_standard_gravity(IVP_U_Point*)
00108ac0 t IVP_Standard_Gravity_Controller::get_controller_priority()
0010a390 t IVP_Standard_Gravity_Controller::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00108b00 t IVP_Standard_Gravity_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
00108be0 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00108af0 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00108af0 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00039ac0 t vphysics_save_constraintfixed_t::GetBaseMap()
001ac160 d vphysics_save_constraintfixed_t::m_DataMap
00039b90 t vphysics_save_constrainthinge_t::GetBaseMap()
001ac140 d vphysics_save_constrainthinge_t::m_DataMap
000682f0 t CVPhysPtrUtlVectorSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
000684b0 t CVPhysPtrUtlVectorSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
000910f0 t hk_Ragdoll_Constraint_BP_Builder::set_ragdoll_constraint(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Interval<float> const&, hk_Interval<float> const&, hk_Interval<float> const&, bool)
0008fbd0 t hk_Ragdoll_Constraint_BP_Builder::initialize_from_limited_ball_socket_bp(hk_Limited_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
000974a0 t IVP_SurfaceBuilder_Halfspacesoup::insert_point_into_list(IVP_U_Point*, IVP_U_Vector<IVP_U_Point>*, double)
00097560 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_points(IVP_Halfspacesoup*, double, IVP_U_Vector<IVP_U_Point>*)
00097870 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_ledge(IVP_Halfspacesoup*, double)
00097930 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_surface(IVP_Halfspacesoup*, double)
001afec4 b physcollideheader_t_DataDescInit::g_DataMapHolder
00039e00 t vphysics_save_constraintlength_t::GetBaseMap()
001ac0e0 d vphysics_save_constraintlength_t::m_DataMap
00039d30 t vphysics_save_constraintpulley_t::GetBaseMap()
001ac100 d vphysics_save_constraintpulley_t::m_DataMap
0004cd60 t vphysics_save_motioncontroller_t::GetBaseMap()
001ac2d0 d vphysics_save_motioncontroller_t::m_DataMap
00121db0 t IVP_Collision_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
00121d90 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
00121d30 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
00121d30 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
000e0560 t IVP_Constraint_Solver_Car_Builder::disable_constraint(int)
000e0590 t IVP_Constraint_Solver_Car_Builder::calc_pushing_behavior(int, int)
000e0e20 t IVP_Constraint_Solver_Car_Builder::calc_constraint_matrix()
000e0500 t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
000e0500 t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
000e5620 t IVP_Multidimensional_Interpolator::sort_vectors(int)
000e61e0 t IVP_Multidimensional_Interpolator::get_nr_occupied()
000e61d0 t IVP_Multidimensional_Interpolator::get_nr_of_vectors()
000e5990 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_stochastic(IVP_MI_Vector const*, IVP_MI_Vector const*)
000e5710 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_conventional(IVP_MI_Vector const*, IVP_MI_Vector const*)
000e5160 t IVP_Multidimensional_Interpolator::linfit(int, int, IVP_MI_Vector**, float*, float*)
000e5bf0 t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
000e5bf0 t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
000e6120 t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
000e6120 t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
0009ca90 t IVP_SurfaceBuilder_Polygon_Convex::convert_template_to_ledge(IVP_Template_Polygon*)
0009c840 t IVP_SurfaceBuilder_Polygon_Convex::fill_list_with_all_triangles(IVP_U_Vector<IVP_Triangle>*)
0009cf90 t IVP_SurfaceBuilder_Polygon_Convex::get_and_remove_compact_ledge()
0009c8a0 t IVP_SurfaceBuilder_Polygon_Convex::init_surface_manager_polygon()
0009cf40 t IVP_SurfaceBuilder_Polygon_Convex::convert_templateledgepolygonsoup_to_ledge(IVP_Template_Ledge_Polygon_Soup*)
0009ca10 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
0009cae0 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
0009ca10 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
0009cae0 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
0009c7c0 t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
0009c7c0 t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
00110420 t IVP_SurfaceManager_Polygon_Solver::traverse_cluster(IVP_Compact_Ledgetree_Node const*, IVP_U_Point const*, double, IVP_U_BigVector<IVP_Compact_Ledge>*)
001b08ac b vehicle_axleparams_t_DataDescInit::g_DataMapHolder
001b08b8 b vehicle_bodyparams_t_DataDescInit::g_DataMapHolder
00039fa0 t vphysics_save_constraintragdoll_t::GetBaseMap()
001ac0a0 d vphysics_save_constraintragdoll_t::m_DataMap
00039c60 t vphysics_save_constraintsliding_t::GetBaseMap()
001ac120 d vphysics_save_constraintsliding_t::m_DataMap
00054fd0 t vphysics_save_cshadowcontroller_t::GetBaseMap()
001acee0 d vphysics_save_cshadowcontroller_t::m_DataMap
0003e830 t CPhysics_Car_System_Raycast_Wheels::do_raycasts(IVP_Event_Sim*, int, IVP_Ray_Solver_Template*, IVP_Ray_Hit*, float*)
0003ef60 t CPhysics_Car_System_Raycast_Wheels::get_controller_name()
0003eef0 t CPhysics_Car_System_Raycast_Wheels::InitCarSystemWheels(IVP_Template_Car_System const*)
0003eb40 t CPhysics_Car_System_Raycast_Wheels::update_wheel_positions()
0003ef40 t CPhysics_Car_System_Raycast_Wheels::GetWheel(int)
0003ee70 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
0003ee70 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
0003e7f0 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003e7c0 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003e7c0 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
000ba510 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledge(IVP_Compact_Ledge const*)
000ba560 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
000ba280 t IVP_Compact_Ledge_Find_Mass_Center::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*)
000b9d90 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
000b9d90 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
001b08b4 b vehicle_wheelparams_t_DataDescInit::g_DataMapHolder
00039850 t vphysics_save_cphysicsconstraint_t::GetBaseMap()
001ac1c0 d vphysics_save_cphysicsconstraint_t::m_DataMap
00056b00 t vphysics_save_cvehiclecontroller_t::GetBaseMap()
001aec00 d vphysics_save_cvehiclecontroller_t::m_DataMap
001afec0 b compactsurfaceheader_t_DataDescInit::g_DataMapHolder
000d4ee0 t IVP_Collision_Filter_Exclusive_Pair::generate_hash_entry(IVP_Real_Object*, IVP_Real_Object*, IVP_CFEP_Objectpair*)
000d4a20 t IVP_Collision_Filter_Exclusive_Pair::environment_will_be_deleted(IVP_Environment*)
000d4f80 t IVP_Collision_Filter_Exclusive_Pair::enable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
000d4f00 t IVP_Collision_Filter_Exclusive_Pair::disable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
000d4e70 t IVP_Collision_Filter_Exclusive_Pair::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000d4fe0 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
000d4fe0 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
000d4b10 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
000d4a40 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
000d4a40 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
001b08a4 b vehicle_engineparams_t_DataDescInit::g_DataMapHolder
000399f0 t vphysics_save_constraintaxislimit_t::GetBaseMap()
001ac180 d vphysics_save_constraintaxislimit_t::m_DataMap
00039920 t vphysics_save_constraintbreakable_t::GetBaseMap()
001ac1a0 d vphysics_save_constraintbreakable_t::m_DataMap
00054f00 t vphysics_save_shadowcontrolparams_t::GetBaseMap()
001acf00 d vphysics_save_shadowcontrolparams_t::m_DataMap
001262b0 t IVP_3D_Solver_DISTANCE_OF_TWO_POINTS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00121a70 t IVP_Collision_Delegator_Root_Mindist::delegate_collisions_for_object(IVP_Real_Object*, IVP_Real_Object*)
00121a20 t IVP_Collision_Delegator_Root_Mindist::collision_is_going_to_be_deleted_event(IVP_Collision*)
001219d0 t IVP_Collision_Delegator_Root_Mindist::environment_is_going_to_be_deleted_event(IVP_Environment*)
00121980 t IVP_Collision_Delegator_Root_Mindist::object_is_removed_from_collision_detection(IVP_Real_Object*)
00121bc0 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
00121bc0 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
00121a00 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
001219f0 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
001219f0 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
000b9dc0 t IVP_Compact_Ledge_Mass_Center_Solver::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, int, int, int)
000b9d70 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
000b9d70 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
0010f820 t IVP_Liquid_Surface_Descriptor_Simple::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
0010f880 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0010f880 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0010f920 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
0010f8f0 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
0010f8f0 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
00039ed0 t vphysics_save_constraintballsocket_t::GetBaseMap()
001ac0c0 d vphysics_save_constraintballsocket_t::m_DataMap
001b08a8 b vehicle_steeringparams_t_DataDescInit::g_DataMapHolder
001b08bc b vehicle_operatingparams_t_DataDescInit::g_DataMapHolder
0010e780 t IVP_BetterStatisticsmanager_Data_Entity::set_position(int, int)
0010e5c0 t IVP_BetterStatisticsmanager_Data_Entity::set_int_value(int)
0010e5f0 t IVP_BetterStatisticsmanager_Data_Entity::set_array_size(int)
0010e5d0 t IVP_BetterStatisticsmanager_Data_Entity::set_double_value(double)
0010e670 t IVP_BetterStatisticsmanager_Data_Entity::set_int_array_latest_value(int)
0010e6c0 t IVP_BetterStatisticsmanager_Data_Entity::set_double_array_latest_value(double)
0010e710 t IVP_BetterStatisticsmanager_Data_Entity::enable()
0010e720 t IVP_BetterStatisticsmanager_Data_Entity::disable()
0010e740 t IVP_BetterStatisticsmanager_Data_Entity::set_text(char const*)
0010e730 t IVP_BetterStatisticsmanager_Data_Entity::get_state()
0010e7a0 t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
0010e7a0 t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
0010e8e0 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
0010e8e0 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
001b08b0 b vehicle_suspensionparams_t_DataDescInit::g_DataMapHolder
000396e0 t vphysics_save_cphysicsconstraintgroup_t::GetBaseMap()
001ac1e0 d vphysics_save_cphysicsconstraintgroup_t::m_DataMap
001b06c0 b vphysics_save_cphysicsobject_t_DataDescInit::g_DataMapHolder
001b0820 b vphysics_save_cphysicsspring_t_DataDescInit::g_DataMapHolder
000e4a30 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
000e4a30 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
001affd8 b vphysics_save_constraintfixed_t_DataDescInit::g_DataMapHolder
001affd4 b vphysics_save_constrainthinge_t_DataDescInit::g_DataMapHolder
001affc8 b vphysics_save_constraintlength_t_DataDescInit::g_DataMapHolder
001affcc b vphysics_save_constraintpulley_t_DataDescInit::g_DataMapHolder
001b0640 b vphysics_save_motioncontroller_t_DataDescInit::g_DataMapHolder
001affc0 b vphysics_save_constraintragdoll_t_DataDescInit::g_DataMapHolder
001affd0 b vphysics_save_constraintsliding_t_DataDescInit::g_DataMapHolder
001b0760 b vphysics_save_cshadowcontroller_t_DataDescInit::g_DataMapHolder
001affe4 b vphysics_save_cphysicsconstraint_t_DataDescInit::g_DataMapHolder
001b08c0 b vphysics_save_cvehiclecontroller_t_DataDescInit::g_DataMapHolder
00034b90 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00034b90 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
001affdc b vphysics_save_constraintaxislimit_t_DataDescInit::g_DataMapHolder
001affe0 b vphysics_save_constraintbreakable_t_DataDescInit::g_DataMapHolder
001b0764 b vphysics_save_shadowcontrolparams_t_DataDescInit::g_DataMapHolder
001affc4 b vphysics_save_constraintballsocket_t_DataDescInit::g_DataMapHolder
001affe8 b vphysics_save_cphysicsconstraintgroup_t_DataDescInit::g_DataMapHolder
0006b100 t ConVar::ClampValue(float&)
0006bb70 t ConVar::SetDefault(char const*)
0006ad40 t ConVar::InternalSetValue(char const*)
0006af90 t ConVar::ChangeStringValue(char const*, float)
0006ac40 t ConVar::InternalSetIntValue(int)
0006bac0 t ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float))
0006ab30 t ConVar::InternalSetFloatValue(float)
0006a9e0 t ConVar::Init()
0006ae80 t ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006bb00 t ConVar::Revert()
0006a980 t ConVar::AddFlags(int)
0006aa30 t ConVar::SetValue(float)
0006aa60 t ConVar::SetValue(int)
0006aa00 t ConVar::SetValue(char const*)
0006b7a0 t ConVar::ConVar(char const*, char const*, int)
0006b840 t ConVar::ConVar(char const*, char const*, int, char const*)
0006b8e0 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0006ba20 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006b980 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0006b7a0 t ConVar::ConVar(char const*, char const*, int)
0006b840 t ConVar::ConVar(char const*, char const*, int, char const*)
0006b8e0 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0006ba20 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006b980 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0006ab10 t ConVar::~ConVar()
0006aad0 t ConVar::~ConVar()
0006aad0 t ConVar::~ConVar()
00068720 t CDefOps<void*>::LessFunc(void* const&, void* const&)
0005c360 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
0005c360 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
000652a0 t CTSPool<CVisitHash>::~CTSPool()
000652a0 t CTSPool<CVisitHash>::~CTSPool()
000689a0 t CUtlMap<void*, void*, unsigned short>::~CUtlMap()
000689a0 t CUtlMap<void*, void*, unsigned short>::~CUtlMap()
001aed20 d hk_Math::hk_random_seed
000959e0 t hk_Math::rand01()
000959d0 t hk_Math::srand01(unsigned int)
0006b510 t CCommand::DefaultBreakSet()
0006b4f0 t CCommand::Reset()
0006c220 t CCommand::Tokenize(char const*, characterset_t*)
0006b390 t CCommand::CCommand(int, char const**)
0006b340 t CCommand::CCommand()
0006b390 t CCommand::CCommand(int, char const**)
0006b340 t CCommand::CCommand()
0012b530 t CFmtStrN<256, false>::InitQuietTruncation()
0012b540 t CFmtStrN<256, false>::sprintf(char const*, ...)
0004c190 t CSurface::get_damping()
0004c180 t CSurface::get_adhesion()
0004c150 t CSurface::get_elasticity()
0004c130 t CSurface::get_friction_factor()
0004c170 t CSurface::get_second_friction_factor()
0004a770 t CSurface::get_name()
0004c2d0 t CSurface::~CSurface()
0004c2b0 t CSurface::~CSurface()
0004c2b0 t CSurface::~CSurface()
0007fb80 t hk_Array<hk_Constraint*>::~hk_Array()
0007fb80 t hk_Array<hk_Constraint*>::~hk_Array()
00136da0 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00136da0 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00136d70 t IVP_Ball::~IVP_Ball()
00136d50 t IVP_Ball::~IVP_Ball()
00136d50 t IVP_Ball::~IVP_Ball()
000ea280 t IVP_Core::reset_time(IVP_Time)
000e8fe0 t IVP_Core::set_radius(float, float)
000e9260 t IVP_Core::damp_object(double, IVP_U_Float_Point const*, double)
000e9590 t IVP_Core::push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
000ec560 t IVP_Core::clip_velocity(IVP_U_Float_Point*, IVP_U_Float_Point*)
000e9cc0 t IVP_Core::async_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000ec450 t IVP_Core::get_environment()
000ec470 t IVP_Core::get_position_PSI()
000e9ef0 t IVP_Core::get_rot_speed_cs(IVP_U_Float_Point const*)
000e94b0 t IVP_Core::global_damp_core(double)
000ea090 t IVP_Core::rot_push_core_cs(IVP_U_Float_Point const*)
000eb880 t IVP_Core::add_friction_info(IVP_Friction_Info_For_Core*)
000eb830 t IVP_Core::get_friction_info(IVP_Friction_System*)
000e9780 t IVP_Core::async_push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
000e8f50 t IVP_Core::get_energy_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000e9ea0 t IVP_Core::get_rot_inertia_cs(IVP_U_Float_Point const*)
00109e40 t IVP_Core::add_core_controller(IVP_Controller*)
000eadb0 t IVP_Core::calc_movement_state(IVP_Time)
000ec3e0 t IVP_Core::fast_piling_allowed()
001098f0 t IVP_Core::rem_core_controller(IVP_Controller*)
000eb550 t IVP_Core::apply_velocity_limit()
000ec3f0 t IVP_Core::calc_next_PSI_matrix(IVP_U_Vector<IVP_Core>*, IVP_Event_Sim*)
000ea2f0 t IVP_Core::core_add_link_to_obj(IVP_Real_Object*)
000eb7c0 t IVP_Core::core_plausible_check()
000eb990 t IVP_Core::delete_friction_info(IVP_Friction_Info_For_Core*)
000e89f0 t IVP_Core::get_surface_speed_ws(IVP_U_Point const*, IVP_U_Float_Point*)
000f45c0 t IVP_Core::grow_friction_system()
000eaa20 t IVP_Core::set_rotation_inertia(IVP_U_Float_Point const*)
000eb950 t IVP_Core::unlink_friction_info(IVP_Friction_Info_For_Core*)
000f2c50 t IVP_Core::union_find_get_father()
000e9100 t IVP_Core::abort_all_async_pushes()
00107960 t IVP_Core::freeze_simulation_core()
000ec460 t IVP_Core::get_m_world_f_core_PSI()
00107c00 t IVP_Core::revive_simulation_core()
000eb2b0 t IVP_Core::set_matrizes_and_speed(IVP_Core_Merged*, IVP_U_Matrix*)
000ea3f0 t IVP_Core::stop_physical_movement()
000ea5e0 t IVP_Core::synchronize_with_rot_z()
000ea860 t IVP_Core::undo_synchronize_rot_z()
000ea0f0 t IVP_Core::commit_all_async_pushes()
00106c10 t IVP_Core::debug_out_movement_vars()
000ec3c0 t IVP_Core::set_fast_piling_allowed(IVP_BOOL)
00106ca0 t IVP_Core::debug_vec_movement_state()
001078e0 t IVP_Core::fire_event_object_frozen()
000ea530 t IVP_Core::init_core_for_simulation()
000ea500 t IVP_Core::reset_freeze_check_values()
000e9fe0 t IVP_Core::rot_push_core_multiple_cs(IVP_U_Float_Point const*, double)
000e9a20 t IVP_Core::rot_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000eb810 t IVP_Core::rot_speed_plausible_check(IVP_U_Float_Point const*)
000eaa50 t IVP_Core::transform_PSI_matrizes_core(IVP_U_Matrix const*)
000e9130 t IVP_Core::center_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000ebaa0 t IVP_Core::revive_adjacent_to_unmoveable()
000e9e20 t IVP_Core::test_rot_push_core_multiple_cs(IVP_U_Float_Point const*, double, IVP_U_Float_Point*)
000e9f40 t IVP_Core::async_rot_push_core_multiple_cs(IVP_U_Float_Point const*, double)
000e9950 t IVP_Core::async_rot_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000ea1a0 t IVP_Core::calc_next_PSI_matrix_zero_speed(IVP_Event_Sim*)
000eba10 t IVP_Core::ensure_core_to_be_in_simulation()
000eb870 t IVP_Core::moveable_core_has_friction_info()
000ebc00 t IVP_Core::values_changed_recalc_redundants()
000eb290 t IVP_Core::create_collision_merged_core_with(IVP_Core*)
000ec430 t IVP_Core::ensure_core_in_simulation_delayed()
000e91d0 t IVP_Core::async_center_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000eba50 t IVP_Core::ensure_all_core_objs_in_simulation()
000eb910 t IVP_Core::unmovable_core_debug_friction_hash()
000e8b10 t IVP_Core::get_diff_surface_speed_of_two_cores(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000eb480 t IVP_Core::update_exact_mindist_events_of_core()
000ebe70 t IVP_Core::ensure_all_core_objs_in_simulation_now()
000eace0 t IVP_Core::unlink_obj_from_core_and_maybe_destroy(IVP_Real_Object*)
000ea330 t IVP_Core::stop_movement_without_collision_recheck()
000e8be0 t IVP_Core::get_diff_surface_speed_of_two_cores_on_test(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000eab20 t IVP_Core::init(IVP_Real_Object*, bool)
000eb4e0 t IVP_Core::set_mass(float)
000ea910 t IVP_Core::calc_calc()
000e9d60 t IVP_Core::push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000ebec0 t IVP_Core::IVP_Core(IVP_Real_Object*)
000ec100 t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
000ebec0 t IVP_Core::IVP_Core(IVP_Real_Object*)
000ec100 t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
000eabd0 t IVP_Core::~IVP_Core()
000eabd0 t IVP_Core::~IVP_Core()
00114680 t IVP_Hash::add(char const*, void*)
00114720 t IVP_Hash::remove(char const*)
00114530 t IVP_Hash::IVP_Hash(int, int, void*)
00114530 t IVP_Hash::IVP_Hash(int, int, void*)
00114570 t IVP_Hash::~IVP_Hash()
00114570 t IVP_Hash::~IVP_Hash()
0011e900 t P_String::string_cmp(char const*, char const*, IVP_BOOL)
0011e780 t P_String::find_string(char const*, char const*, int)
0011e750 t P_String::uppercase(char*)
000b6390 t P_Sur_2D::calc_line_representation()
000b67a0 t P_Sur_2D::calc_triangle_representation()
000b6280 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
000b6280 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
000b62a0 t P_Sur_2D::~P_Sur_2D()
000b62a0 t P_Sur_2D::~P_Sur_2D()
0006a440 t CByteswap::SwapFieldToTargetEndian(void*, void*, typedescription_t*)
0006a3c0 t CByteswap::SwapFieldsToTargetEndian(void*, void*, datamap_t*)
0006bb90 t ConVarRef::Init(char const*, bool)
0006bc80 t ConVarRef::ConVarRef(IConVar*)
0006bc40 t ConVarRef::ConVarRef(char const*)
0006bc70 t ConVarRef::ConVarRef(char const*, bool)
0006bc80 t ConVarRef::ConVarRef(IConVar*)
0006bc40 t ConVarRef::ConVarRef(char const*)
0006bc70 t ConVarRef::ConVarRef(char const*, bool)
0002d71c t CTraceIVP::AllocateVisitHash() [clone .isra.24] [clone .part.25]
0005d940 t CTraceIVP::BuildLeafmapCache(leafmap_t const*)
0005d650 t CTraceIVP::BuildLeafmapCacheRLE(leafmap_t const*)
0002d670 t CTraceIVP::SetLedge(IVP_Compact_Ledge const*) [clone .part.26]
0005d3f0 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
0005d3f0 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
000653a0 t CTraceIVP::~CTraceIVP()
000653a0 t CTraceIVP::~CTraceIVP()
0005db80 t CTraceRay::Init(Vector const&, Vector const&)
0005dd80 t CTraceRay::Reset(float)
0005dcf0 t CTraceRay::CTraceRay(Ray_t const&)
0005dd20 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
0005dca0 t CTraceRay::CTraceRay(Vector const&, Vector const&)
0005dcf0 t CTraceRay::CTraceRay(Ray_t const&)
0005dd20 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
0005dca0 t CTraceRay::CTraceRay(Vector const&, Vector const&)
00065330 t CVProfile::ExitScope()
000939a0 t hk_Memory::deallocate(void*, int, hk_MEMORY_CLASS)
00093880 t hk_Memory::init_memory(char*, int)
00093c30 t hk_Memory::aligned_free(void*)
00093c40 t hk_Memory::get_instance()
00093a00 t hk_Memory::allocate_real(int)
00093c20 t hk_Memory::aligned_malloc(unsigned int, unsigned int)
00093b70 t hk_Memory::allocate_debug(int, char const*, int)
00093b80 t hk_Memory::deallocate_debug(void*, int, char const*, int)
00093be0 t hk_Memory::deallocate_stored_size(void*, hk_MEMORY_CLASS)
00093ba0 t hk_Memory::allocate_and_store_size(int, hk_MEMORY_CLASS)
00093b00 t hk_Memory::allocate(int, hk_MEMORY_CLASS)
00093990 t hk_Memory::hk_Memory(char*, int)
00093960 t hk_Memory::hk_Memory()
00093990 t hk_Memory::hk_Memory(char*, int)
00093960 t hk_Memory::hk_Memory()
00093870 t hk_Memory::~hk_Memory()
00093870 t hk_Memory::~hk_Memory()
0014d030 t hk_String::memcpy(void*, void const*, int)
0014d020 t hk_String::strcmp(char const*, char const*)
000e8440 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000e8420 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000e8420 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000e83f0 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000e83d0 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000e83d0 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000e8490 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
000e8470 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
000e8470 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
0011f410 t IVP_VHash::deactivate()
0011f6b0 t IVP_VHash::remove_elem(void const*, unsigned int)
0011f480 t IVP_VHash::untouch_all()
0011f900 t IVP_VHash::touch_element(void const*, unsigned int)
0011f660 t IVP_VHash::garbage_collection(int)
0011f860 t IVP_VHash::check()
0011f5c0 t IVP_VHash::rehash(int)
0011f3d0 t IVP_VHash::activate(int)
0011f4c0 t IVP_VHash::add_elem(void const*, int)
0011f390 t IVP_VHash::IVP_VHash(int)
0011f450 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
0011f390 t IVP_VHash::IVP_VHash(int)
0011f450 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
0011f300 t IVP_VHash::~IVP_VHash()
0011f350 t IVP_VHash::~IVP_VHash()
0011f350 t IVP_VHash::~IVP_VHash()
0005f7b0 t simplex_t::SolveGJKSet(simplexvert_t const&, Vector*)
00060550 t simplex_t::ClipRayToTriangle(Vector const&, float)
0005e0f0 t simplex_t::SolveVoronoiRegion2(simplexvert_t const&, Vector*)
0005e290 t simplex_t::SolveVoronoiRegion3(simplexvert_t const&, Vector*)
0005e820 t simplex_t::SolveVoronoiRegion4(simplexvert_t const&, Vector*)
000600f0 t simplex_t::ClipRayToTetrahedron(Vector const&)
0005f9c0 t simplex_t::ClipRayToTetrahedronBase(Vector const&)
         U operator new[](unsigned int)@@GLIBCXX_3.4
0006a920 t ConCommand::IsCommand() const
0005c490 t CTraceAABB::SupportMap(Vector const&, Vector*) const
0005c410 t CTraceAABB::GetVertByIndex(int) const
00065090 t CTraceAABB::Radius() const
000650c0 t CTraceCone::SupportMap(Vector const&, Vector*) const
00065030 t CTraceCone::GetVertByIndex(int) const
00065050 t CTraceCone::Radius() const
00042b90 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
00043120 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Find(CPhysicsListenerCollision::corepair_t const&) const
00068740 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<void*, void*, unsigned short>::Node_t const&) const
00076720 t CUtlString::GetExtension() const
00076640 t CUtlString::StripFilename() const
000759b0 t CUtlString::MatchesPattern(CUtlString const&, int) const
000765c0 t CUtlString::StripExtension() const
000766a0 t CUtlString::GetBaseFilename() const
000764e0 t CUtlString::UnqualifiedFilename() const
000755e0 t CUtlString::IsEqual_CaseSensitive(char const*) const
00075630 t CUtlString::IsEqual_CaseInsensitive(char const*) const
00075500 t CUtlString::Get() const
00076000 t CUtlString::Left(int) const
00076040 t CUtlString::Right(int) const
00075ef0 t CUtlString::Slice(int, int) const
00076460 t CUtlString::AbsPath(char const*) const
00076520 t CUtlString::DirName() const
00076080 t CUtlString::Replace(char, char) const
00076160 t CUtlString::Replace(char const*, char const*) const
00075740 t CUtlString::operator==(CUtlString const&) const
00075560 t CUtlString::operator[](int) const
000768b0 t CUtlString::operator+(int) const
00076810 t CUtlString::operator+(char const*) const
00076860 t CUtlString::operator+(CUtlString const&) const
000774e0 t CUtlSymbol::String() const
00077590 t CUtlSymbol::operator==(char const*) const
00095b40 t hk_Matrix3::is_identity_rotation() const
001063f0 t IVP_Object::get_environment() const
001063e0 t IVP_Object::get_name() const
001063d0 t IVP_Object::get_type() const
0011d6e0 t IVP_U_Quat::set_matrix(IVP_U_Matrix3*) const
0011d5a0 t IVP_U_Quat::set_matrix(double (*) [4]) const
0011bf30 t IVP_U_Quat::inline_estimate_q_diff_to(IVP_U_Float_Quat const*) const
0011abd0 t IVP_U_Quat::acos_quat(IVP_U_Quat const*) const
001259f0 t IVP_Mindist::get_synapse(int) const
00125a10 t IVP_Mindist::get_sorted_synapse(int) const
00125830 t IVP_Synapse::get_status() const
00125850 t IVP_Synapse::get_synapse_mindist() const
00125840 t IVP_Synapse::get_edge() const
001222b0 t IVP_Synapse::get_ledge() const
00115db0 t IVP_U_Hesse::proj_on_plane(IVP_U_Point const*, IVP_U_Point*) const
00114020 t IVP_U_Hesse::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*) const
0011a6a0 t IVP_U_Hesse::get_dist(IVP_U_Float_Point const*) const
001141b0 t IVP_U_Plain::calc_intersect_with(IVP_U_Hesse const*, IVP_U_Straight*) const
00119d50 t IVP_U_Point::dot_product(IVP_U_Float_Point const*) const
00119d10 t IVP_U_Point::dot_product(IVP_U_Point const*) const
00115610 t IVP_U_Point::is_parallel(IVP_U_Point const*, double) const
00114cb0 t IVP_U_Point::real_length() const
00115710 t IVP_U_Point::fast_real_length() const
0006c5b0 t CEmptyConVar::GetName() const
0006c5d0 t CEmptyConVar::IsFlagSet(int) const
000385e0 t CPhysCollide::GetCollideMap() const
000385b0 t CPhysCollide::GetSphereRadius() const
00038580 t CPhysCollide::GetCompactSurface() const
00038590 t CPhysCollide::GetOrthographicAreas() const
00096c00 t hk_Transform::get_4x4_column_major(float*) const
0011a140 t IVP_U_Matrix::get_position() const
0011b9b0 t IVP_U_Matrix::inline_mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
0011a960 t IVP_U_Matrix::inline_vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0011bc20 t IVP_U_Matrix::inline_mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
0011a740 t IVP_U_Matrix::inline_vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0011be60 t IVP_U_Matrix::get_4x4_column_major(float*) const
001181e0 t IVP_U_Matrix::mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00119260 t IVP_U_Matrix::vmult4(IVP_U_Point const*, IVP_U_Point*) const
00119300 t IVP_U_Matrix::vmult4(IVP_U_Float_Point const*, IVP_U_Point*) const
001191a0 t IVP_U_Matrix::vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00118450 t IVP_U_Matrix::mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00118f90 t IVP_U_Matrix::vimult4(IVP_U_Point const*, IVP_U_Float_Point*) const
00119040 t IVP_U_Matrix::vimult4(IVP_U_Point const*, IVP_U_Point*) const
001190e0 t IVP_U_Matrix::vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00118b00 t IVP_U_Matrix::mi2mult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00076a40 t unsigned int CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoLookup<char const*>(char const*, unsigned int, unsigned int*) const [clone .part.48] [clone .constprop.51]
000d49f0 t IVP_CFEP_Hash::compare(void*, void*) const
00121ca0 t IVP_Collision::get_fvector_index(int) const
000e60a0 t IVP_MI_Vector::print() const
000e4f70 t IVP_MI_Vector::length() const
0011b850 t IVP_U_Matrix3::inline_mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
0011a800 t IVP_U_Matrix3::inline_vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0011b6a0 t IVP_U_Matrix3::inline_mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
0011a8b0 t IVP_U_Matrix3::inline_vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00116760 t IVP_U_Matrix3::get_determinante() const
00118690 t IVP_U_Matrix3::mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00119450 t IVP_U_Matrix3::vmult3(IVP_U_Point const*, IVP_U_Point*) const
001193a0 t IVP_U_Matrix3::vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0011b4f0 t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Point*) const
0011b520 t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
0011b470 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Point*) const
0011b4a0 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
001187f0 t IVP_U_Matrix3::mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
001194e0 t IVP_U_Matrix3::vimult3(IVP_U_Point const*, IVP_U_Point*) const
00119570 t IVP_U_Matrix3::vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0011a090 t IVP_U_Matrix3::get_elem(int, int) const
001189a0 t IVP_U_Matrix3::mi2mult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
0006a8e0 t ConCommandBase::GetHelpText() const
0006a8f0 t ConCommandBase::IsRegistered() const
0006a810 t ConCommandBase::GetDLLIdentifier() const
0006a8a0 t ConCommandBase::GetName() const
0006b2c0 t ConCommandBase::GetNext() const
0006a800 t ConCommandBase::IsCommand() const
0006a8b0 t ConCommandBase::IsFlagSet(int) const
0004dc00 t CPhysicsObject::GetCollide() const
0004da60 t CPhysicsObject::GetDamping(float*, float*) const
0004d9c0 t CPhysicsObject::GetInertia() const
0004d990 t CPhysicsObject::GetInvMass() const
0004d8a0 t CPhysicsObject::IsMoveable() const
00051e00 t CPhysicsObject::GetContents() const
0004d950 t CPhysicsObject::GetGameData() const
0004e4a0 t CPhysicsObject::GetPosition(Vector*, QAngle*) const
0004f7a0 t CPhysicsObject::GetVelocity(Vector*, Vector*) const
0004d790 t CPhysicsObject::GetGameFlags() const
0004d7b0 t CPhysicsObject::GetGameIndex() const
0004e110 t CPhysicsObject::LocalToWorld(Vector*, Vector const&) const
0004e160 t CPhysicsObject::WorldToLocal(Vector*, Vector const&) const
0004da10 t CPhysicsObject::GetInvInertia() const
000504d0 t CPhysicsObject::IsControlling(IVP_Controller const*) const
000501a0 t CPhysicsObject::IsDragEnabled() const
0004e9b0 t CPhysicsObject::GetContactPoint(Vector*, IPhysicsObject**) const
0004f890 t CPhysicsObject::GetSphereRadius() const
0004d880 t CPhysicsObject::IsMotionEnabled() const
0004ec50 t CPhysicsObject::OutputDebugInfo() const
0004d770 t CPhysicsObject::GetCallbackFlags() const
00051df0 t CPhysicsObject::GetMaterialIndex() const
00050120 t CPhysicsObject::IsGravityEnabled() const
0004e550 t CPhysicsObject::GetPositionMatrix(matrix3x4_t*) const
0004ea80 t CPhysicsObject::GetShadowPosition(Vector*, QAngle*) const
00050bb0 t CPhysicsObject::GetSurfaceManager() const
00050be0 t CPhysicsObject::GetDragInDirection(IVP_U_Float_Point const&) const
0004e590 t CPhysicsObject::GetVelocityAtPoint(Vector const&, Vector*) const
0004de00 t CPhysicsObject::IsCollisionEnabled() const
00050a20 t CPhysicsObject::IsControlledByGame() const
0004e1b0 t CPhysicsObject::LocalToWorldVector(Vector*, Vector const&) const
0004e200 t CPhysicsObject::WorldToLocalVector(Vector*, Vector const&) const
00050c80 t CPhysicsObject::CalculateLinearDrag(Vector const&) const
0004f660 t CPhysicsObject::GetImplicitVelocity(Vector*, Vector*) const
0004dbf0 t CPhysicsObject::GetShadowController() const
0004dcf0 t CPhysicsObject::CalculateAngularDrag(Vector const&) const
00050220 t CPhysicsObject::CalculateForceOffset(Vector const&, Vector const&, Vector*, Vector*) const
00050a60 t CPhysicsObject::IsMassCenterAtDefault() const
000504b0 t CPhysicsObject::GetVPhysicsEnvironment() const
0004f150 t CPhysicsObject::IsAttachedToConstraint(bool) const
0004e250 t CPhysicsObject::CalculateVelocityOffset(Vector const&, Vector const&, Vector*, Vector*) const
0004f5e0 t CPhysicsObject::GetMassCenterLocalSpace() const
00050cd0 t CPhysicsObject::GetAngularDragInDirection(IVP_U_Float_Point const&) const
0004d960 t CPhysicsObject::GetMass() const
0004dc10 t CPhysicsObject::GetName() const
0004ddd0 t CPhysicsObject::IsFluid() const
0004f350 t CPhysicsObject::IsAsleep() const
00051de0 t CPhysicsObject::IsHinged() const
0004d7c0 t CPhysicsObject::IsStatic() const
0004dc20 t CPhysicsObject::GetEnergy() const
00050b20 t CPhysicsObject::GetVolume() const
0004ddb0 t CPhysicsObject::IsTrigger() const
000b5580 t IVP_point_hash::element_at(int) const
000b5570 t IVP_point_hash::len() const
000b55d0 t IVP_point_hash::print() const
000b53a0 t IVP_point_hash::compare(void*, void*) const
0011c7f0 t IVP_U_Min_Hash::is_elem(void*) const
00113cf0 t IVP_U_Straight::get_quad_dist_to_point(IVP_U_Point*) const
00113c40 t IVP_U_Straight::calc_orthogonal_vec_from_point(IVP_U_Point const*, IVP_U_Point*) const
00076ec0 t CUtlSymbolTable::FindPoolWithSpace(int) const
00076d20 t CUtlSymbolTable::Find(char const*) const
00076bb0 t CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
00076f10 t CUtlSymbolTable::String(CUtlSymbol) const
000ef330 t IVP_Environment::get_time_manager() const
000ef3a0 t IVP_Environment::get_debug_manager() const
000ef3f0 t IVP_Environment::get_range_manager() const
000ef480 t IVP_Environment::get_static_object() const
000ef470 t IVP_Environment::get_anomaly_limits() const
000ef4e0 t IVP_Environment::get_gravity_length() const
000ef3b0 t IVP_Environment::get_memory_manager() const
000ef460 t IVP_Environment::get_anomaly_manager() const
000ef390 t IVP_Environment::get_cluster_manager() const
000ef350 t IVP_Environment::get_mindist_manager() const
000ef380 t IVP_Environment::get_ov_tree_manager() const
000ef410 t IVP_Environment::get_collision_filter() const
000ef400 t IVP_Environment::get_material_manager() const
000ef450 t IVP_Environment::get_universe_manager() const
000ef360 t IVP_Environment::get_sim_units_manager() const
000ef340 t IVP_Environment::get_controller_manager() const
000ef440 t IVP_Environment::get_active_value_manager() const
000ef370 t IVP_Environment::get_cache_object_manager() const
00106520 t IVP_Real_Object::to_nonconst() const
00105280 t IVP_Real_Object::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
00105cd0 t IVP_Real_Object::get_geom_radius() const
00106500 t IVP_Real_Object::get_extra_radius() const
00106540 t IVP_Real_Object::get_original_core() const
001054c0 t IVP_Real_Object::calc_at_quaternion(IVP_Time, IVP_U_Quat*, IVP_U_Point*) const
001064d0 t IVP_Real_Object::get_surface_manager() const
00105cf0 t IVP_Real_Object::get_geom_center_speed() const
00105490 t IVP_Real_Object::get_m_world_f_object_AT(IVP_U_Matrix*) const
00105d30 t IVP_Real_Object::get_geom_center_speed_vec(IVP_U_Point*) const
00105700 t IVP_Real_Object::get_quat_world_f_object_AT(IVP_U_Quat*, IVP_U_Point*) const
00105c90 t IVP_Real_Object::get_geom_center_world_space(IVP_U_Point*) const
00106530 t IVP_Real_Object::get_core() const
         U CThreadLocalBase::Get() const
0010f460 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Point const*, IVP_U_Point*) const
0010f4f0 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0010f320 t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
0010f3b0 t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0010f270 t IVP_Cache_Object::transform_position_to_world_coords(IVP_U_Float_Point const*, IVP_U_Point*) const
0010f1b0 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Float_Point*) const
0010f110 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
000d59c0 t IVP_Compact_Edge::get_opposite() const
000d58c0 t IVP_Compact_Edge::get_triangle() const
000d5940 t IVP_Compact_Edge::get_edge_index() const
000d5590 t IVP_Compact_Edge::get_is_virtual() const
000d5900 t IVP_Compact_Edge::get_start_point(IVP_Compact_Ledge const*) const
000d58d0 t IVP_Compact_Edge::get_compact_ledge() const
000d5570 t IVP_Compact_Edge::get_opposite_index() const
000d5560 t IVP_Compact_Edge::get_start_point_index() const
000d5920 t IVP_Compact_Edge::get_next() const
000d5980 t IVP_Compact_Edge::get_prev() const
001258e0 t IVP_Mindist_Base::get_length() const
001258c0 t IVP_Mindist_Base::get_mindist_synapse(int) const
00121900 t IVP_ov_tree_hash::compare(void*, void*) const
001222a0 t IVP_Synapse_Real::check_consistency_of_ledge(IVP_Compact_Edge const*) const
00125990 t IVP_Synapse_Real::get_core() const
000d5780 t IVP_Compact_Ledge::is_terminal() const
000d57c0 t IVP_Compact_Ledge::get_n_points() const
000d5820 t IVP_Compact_Ledge::get_client_data() const
000d57b0 t IVP_Compact_Ledge::get_n_triangles() const
000d5740 t IVP_Compact_Ledge::get_point_array() const
000d5760 t IVP_Compact_Ledge::get_first_triangle() const
000d57a0 t IVP_Compact_Ledge::get_ledgetree_node() const
000d57e0 t IVP_Compact_Ledge::get_size() const
000f4b70 t IVP_Contact_Point::is_same_as(IVP_Mindist const*) const
000b56e0 t IVP_I_Point_VHash::element_at(int) const
000b56d0 t IVP_I_Point_VHash::len() const
000b5730 t IVP_I_Point_VHash::print() const
000b53d0 t IVP_I_Point_VHash::compare(void*, void*) const
00116160 t IVP_U_Float_Hesse::proj_on_plane(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0011a6f0 t IVP_U_Float_Hesse::get_dist(IVP_U_Float_Point const*) const
0011a400 t IVP_U_Float_Point::dot_product(IVP_U_Float_Point const*) const
0011a600 t IVP_U_Float_Point::quad_length() const
00114c70 t IVP_U_Float_Point::real_length() const
00115750 t IVP_U_Float_Point::fast_real_length() const
0011a640 t IVP_U_Float_Point::quad_distance_to(IVP_U_Float_Point const*) const
00115820 t IVP_U_Float_Point::print(char const*) const
001148a0 t IVP_U_String_Hash::find(char const*) const
0003ba70 t CPhysicsConstraint::WriteFixed(constraint_fixedparams_t&) const
0003bdb0 t CPhysicsConstraint::WriteHinge(constraint_hingeparams_t&) const
0003e4a0 t CPhysicsConstraint::GetGameData() const
0003c510 t CPhysicsConstraint::WriteLength(constraint_lengthparams_t&) const
0003c2f0 t CPhysicsConstraint::WritePulley(constraint_pulleyparams_t&) const
0003bb30 t CPhysicsConstraint::WriteRagdoll(constraint_ragdollparams_t&) const
0003c040 t CPhysicsConstraint::WriteSliding(constraint_slidingparams_t&) const
0003c6a0 t CPhysicsConstraint::WriteBallsocket(constraint_ballsocketparams_t&) const
0003c7f0 t CPhysicsConstraint::WriteToTemplate(vphysics_save_cphysicsconstraint_t&, vphysics_save_constraint_t&) const
00038a40 t CPhysicsConstraint::GetAttachedObject() const
0003b980 t CPhysicsConstraint::GetConstraintGroup() const
00038a30 t CPhysicsConstraint::GetReferenceObject() const
0003c8e0 t CPhysicsConstraint::GetConstraintParams(constraint_breakableparams_t*) const
000393e0 t CPhysicsConstraint::GetConstraintTransform(matrix3x4_t*, matrix3x4_t*) const
0003b9a0 t CPhysicsConstraint::ReadBreakableConstraint(constraint_breakableparams_t&) const
00072950 t CUtlCharConversion::GetDelimiter() const
00072940 t CUtlCharConversion::GetEscapeChar() const
00072960 t CUtlCharConversion::GetDelimiterLength() const
00072990 t CUtlCharConversion::GetConversionLength(char) const
00072970 t CUtlCharConversion::GetConversionString(char) const
000729b0 t CUtlCharConversion::MaxConversionLength() const
0010e320 t IVP_Anomaly_Limits::get_max_velocity() const
0010e340 t IVP_Anomaly_Limits::get_max_angular_velocity_per_psi() const
000b52a0 t IVP_I_FPoint_VHash::element_at(int) const
000b5290 t IVP_I_FPoint_VHash::len() const
000b52f0 t IVP_I_FPoint_VHash::print() const
000b5130 t IVP_I_FPoint_VHash::compare(void*, void*) const
0004ac70 t CIVPMaterialManager::RemapIVPMaterialIndex(int) const
0003efe0 t CPhysicsEnvironment::GetGravity(Vector*) const
0003f2e0 t CPhysicsEnvironment::GetAirDensity() const
0003f070 t CPhysicsEnvironment::GetObjectList(int*) const
0003f130 t CPhysicsEnvironment::IsInSimulation() const
0003f280 t CPhysicsEnvironment::GetActiveObjects(IPhysicsObject**) const
0003f100 t CPhysicsEnvironment::GetNextFrameTime() const
0003f0d0 t CPhysicsEnvironment::GetSimulationTime() const
000419f0 t CPhysicsEnvironment::ShouldQuickDelete() const
0003f270 t CPhysicsEnvironment::GetActiveObjectCount() const
0003fab0 t CPhysicsEnvironment::IsCollisionModelUsed(CPhysCollide*) const
0003f0a0 t CPhysicsEnvironment::GetSimulationTimestep() const
0003f060 t CPhysicsEnvironment::GetObjectSerializeSize(IPhysicsObject*) const
0003f330 t CPhysicsEnvironment::GetPerformanceSettings(physics_performanceparams_t*) const
001206a0 t IVP_OV_Tree_Manager::box_contains_box(IVP_OV_Node_Data const*, IVP_OV_Node const*, int) const
00120a90 t IVP_OV_Tree_Manager::find_smallest_box(IVP_OV_Node const*, IVP_OV_Node const*) const
001209e0 t IVP_OV_Tree_Manager::box_overlaps_with_box(IVP_OV_Node const*, IVP_OV_Node const*, int) const
00120680 t IVP_OV_Tree_Manager::log_base2(double) const
000dc690 t IVP_Template_Anchor::get_anchor_position_ws() const
0004a870 t CPhysicsSurfaceProps::GetPropName(int) const
0004aad0 t CPhysicsSurfaceProps::GetIVPMaterial(int) const
0004a5b0 t CPhysicsSurfaceProps::GetSurfaceIndex(char const*) const
0004a450 t CPhysicsSurfaceProps::SurfacePropCount() const
0004aa80 t CPhysicsSurfaceProps::GetInternalSurface(int) const
0004a480 t CPhysicsSurfaceProps::GetIVPMaterialIndex(IVP_Material const*) const
0004aae0 t CPhysicsSurfaceProps::GetReservedFallBack(int) const
0004a9d0 t CPhysicsSurfaceProps::GetPhysicsParameters(int, surfacephysicsparams_t*) const
0004a930 t CPhysicsSurfaceProps::GetPhysicsProperties(int, float*, float*, float*, float*) const
0004c1b0 t CPhysicsSurfaceProps::RemapIVPMaterialIndex(int) const
0004a460 t CPhysicsSurfaceProps::GetReservedMaterialName(int) const
0004aaa0 t CPhysicsSurfaceProps::GetReservedSurfaceIndex(char const*) const
0004aa90 t CPhysicsSurfaceProps::IsReservedMaterialIndex(int) const
0004a6e0 t CPhysicsSurfaceProps::GetString(unsigned short) const
000d56d0 t IVP_Compact_Triangle::get_next_tri() const
000d5630 t IVP_Compact_Triangle::get_tri_index() const
000d5690 t IVP_Compact_Triangle::get_first_edge() const
000d5670 t IVP_Compact_Triangle::get_is_virtual() const
000d5640 t IVP_Compact_Triangle::get_pierce_index() const
000d5a00 t IVP_Compact_Triangle::get_compact_ledge() const
000d5660 t IVP_Compact_Triangle::get_material_index() const
000d56b0 t IVP_Compact_Triangle::get_edge(int) const
00103ad0 t IVP_Controller_VHash::compare(void*, void*) const
000ec3a0 t IVP_Core_Fast_Static::get_inv_mass() const
000ec380 t IVP_Core_Fast_Static::get_rot_inertia() const
000ec390 t IVP_Core_Fast_Static::get_inv_rot_inertia() const
000ec360 t IVP_Core_Fast_Static::get_mass() const
000f4a40 t IVP_Synapse_Friction::is_same_as(IVP_Synapse_Real const*) const
000f4a20 t IVP_Synapse_Friction::get_material_index() const
001107d0 t IVP_Active_Value_Hash::compare(void*, void*) const
00136c10 t IVP_Controller_Motion::get_max_torque() const
00136c50 t IVP_Controller_Motion::get_damp_factor() const
00136c30 t IVP_Controller_Motion::get_force_factor() const
00136c70 t IVP_Controller_Motion::get_torque_factor() const
00136cc0 t IVP_Controller_Motion::get_target_orientation() const
00136cb0 t IVP_Controller_Motion::get_target_position_ws() const
00136c90 t IVP_Controller_Motion::get_angular_damp_factor() const
00136c20 t IVP_Controller_Motion::get_max_translation_force() const
000d5500 t IVP_Compact_Poly_Point::get_client_data() const
000e8860 t IVP_Controller_Phantom::get_object() const
000e8840 t IVP_Controller_Phantom::get_intruding_cores() const
000e8830 t IVP_Controller_Phantom::get_intruding_objects() const
0005bef0 t CPhysCollideVirtualMesh::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
0005a380 t CPhysCollideVirtualMesh::GetMassCenter() const
0005a4f0 t CPhysCollideVirtualMesh::GetSphereRadius() const
0005bd50 t CPhysCollideVirtualMesh::OutputDebugInfo() const
0005bc50 t CPhysCollideVirtualMesh::GetVCollideIndex() const
0005bd10 t CPhysCollideVirtualMesh::SerializeToBuffer(char*, bool) const
0005aa20 t CPhysCollideVirtualMesh::GetSphereRadiusIVP() const
0005bce0 t CPhysCollideVirtualMesh::CreateSurfaceManager(short&) const
0005bc70 t CPhysCollideVirtualMesh::GetOrthographicAreas() const
0005bbf0 t CPhysCollideVirtualMesh::GetSerializationSize() const
00049350 t CPhysicsFluidController::GetDensity() const
00049370 t CPhysicsFluidController::GetContents() const
00049260 t CPhysicsFluidController::GetGameData() const
000494a0 t CPhysicsFluidController::GetIVPObject() const
00049270 t CPhysicsFluidController::GetSurfacePlane(Vector*, float*) const
00136e60 t IVP_SurfaceManager_Ball::get_mass_center(IVP_U_Float_Point*) const
00136e50 t IVP_SurfaceManager_Ball::get_single_convex() const
00136eb0 t IVP_SurfaceManager_Ball::get_rotation_inertia(IVP_U_Float_Point*) const
00136e90 t IVP_SurfaceManager_Ball::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00035590 t CPhysCollideCompactSurface::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
00038630 t CPhysCollideCompactSurface::GetCollideMap() const
00034d30 t CPhysCollideCompactSurface::GetMassCenter() const
00036e20 t CPhysCollideCompactSurface::OutputDebugInfo() const
00038610 t CPhysCollideCompactSurface::GetVCollideIndex() const
00036dc0 t CPhysCollideCompactSurface::ComputeHullInfo_r(CPhysCollideCompactSurface::hullinfo_t*, IVP_Compact_Ledgetree_Node const*) const
00038620 t CPhysCollideCompactSurface::GetCompactSurface() const
000355b0 t CPhysCollideCompactSurface::SerializeToBuffer(char*, bool) const
000354e0 t CPhysCollideCompactSurface::CreateSurfaceManager(short&) const
00034dd0 t CPhysCollideCompactSurface::GetOrthographicAreas() const
00034d10 t CPhysCollideCompactSurface::GetSerializationSize() const
000d5880 t IVP_Compact_Ledgetree_Node::is_terminal() const
000d58a0 t IVP_Compact_Ledgetree_Node::get_compact_hull() const
000d5850 t IVP_Compact_Ledgetree_Node::get_compact_ledge() const
000d5860 t IVP_Compact_Ledgetree_Node::left_son() const
000d5870 t IVP_Compact_Ledgetree_Node::right_son() const
000f84d0 t IVP_Great_Matrix_Many_Zero::print_great_matrix(char const*) const
000f84b0 t IVP_Great_Matrix_Many_Zero::get_value(int, int) const
00110200 t IVP_SurfaceManager_Polygon::get_mass_center(IVP_U_Float_Point*) const
00110260 t IVP_SurfaceManager_Polygon::get_single_convex() const
00110720 t IVP_SurfaceManager_Polygon::get_compact_surface() const
00110230 t IVP_SurfaceManager_Polygon::get_rotation_inertia(IVP_U_Float_Point*) const
00110320 t IVP_SurfaceManager_Polygon::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00106480 t IVP_Real_Object_Fast_Static::get_shift_core_f_object() const
00099920 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_debug_output(IVP_Compact_Ledgetree_Node const*) const
00138780 t IVP_Object_Callback_Table_Hash::compare(void*, void*) const
0005a440 t IVP_SurfaceManager_VirtualMesh::get_mass_center(IVP_U_Float_Point*) const
0005ac50 t IVP_SurfaceManager_VirtualMesh::get_single_convex() const
0005a4b0 t IVP_SurfaceManager_VirtualMesh::get_rotation_inertia(IVP_U_Float_Point*) const
0005a400 t IVP_SurfaceManager_VirtualMesh::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00121d10 t IVP_Collision_Callback_Table_Hash::compare(void*, void*) const
0006bb60 t ConVar::GetDefault() const
0006a970 t ConVar::GetHelpText() const
0006a9a0 t ConVar::IsRegistered() const
0006bb40 t ConVar::GetMax(float&) const
0006bb20 t ConVar::GetMin(float&) const
0006a9b0 t ConVar::GetName() const
0006a9d0 t ConVar::IsCommand() const
0006a940 t ConVar::IsFlagSet(int) const
0006b5a0 t CCommand::FindArgInt(char const*, int) const
0006b520 t CCommand::FindArg(char const*) const
00137050 t IVP_Ball::get_radius() const
000e9000 t IVP_Core::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
000e8e40 t IVP_Core::calc_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
000e9b00 t IVP_Core::test_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*, IVP_U_Float_Point*) const
000e9550 t IVP_Core::get_surface_speed(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
000e9c20 t IVP_Core::calc_correct_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
000ec4e0 t IVP_Core::inline_calc_at_position(IVP_Time, IVP_U_Point*) const
000e8cc0 t IVP_Core::calc_virt_mass_worst_case(IVP_U_Float_Point const*) const
000e8870 t IVP_Core::get_surface_speed_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*) const
000ec480 t IVP_Core::inline_calc_at_quaternion(IVP_Time, IVP_U_Quat*) const
001145e0 t IVP_Hash::find(char const*) const
0006bca0 t ConVarRef::IsValid() const
0005cb50 t CTraceIVP::SupportMap(Vector const&, Vector*) const
0005c510 t CTraceIVP::GetVertByIndex(int) const
00065070 t CTraceIVP::Radius() const
0005dde0 t CTraceRay::SupportMap(Vector const&, Vector*) const
000e8370 t IVP_U_Set<IVP_Real_Object>::compare(void*, void*) const
000e83b0 t IVP_U_Set<IVP_Mindist_Base>::compare(void*, void*) const
000e8390 t IVP_U_Set<IVP_Core>::compare(void*, void*) const
0011f990 t IVP_VHash::print() const
0011f870 t IVP_VHash::find_elem(void const*, unsigned int) const
         U CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
         U operator new(unsigned int)@@GLIBCXX_3.4
000d97a0 t non-virtual thunk to IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
000da070 t non-virtual thunk to IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
0012b700 t non-virtual thunk to IVP_Mindist_Recursive::get_spawned_mindist_count()
0012b610 t non-virtual thunk to IVP_Mindist_Recursive::change_spawned_mindist_count(int)
0012b6b0 t non-virtual thunk to IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
0012b860 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
0012b830 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
000da130 t non-virtual thunk to IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
000dc8f0 t non-virtual thunk to IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
000da250 t non-virtual thunk to IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
0012c0c0 t non-virtual thunk to IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
0012c230 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
0012c200 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
0006c580 t non-virtual thunk to CEmptyConVar::SetValue(float)
0006c5a0 t non-virtual thunk to CEmptyConVar::SetValue(int)
0006c560 t non-virtual thunk to CEmptyConVar::SetValue(char const*)
0006aa50 t non-virtual thunk to ConVar::SetValue(float)
0006aa80 t non-virtual thunk to ConVar::SetValue(int)
0006aa20 t non-virtual thunk to ConVar::SetValue(char const*)
0006c5c0 t non-virtual thunk to CEmptyConVar::GetName() const
0006c5e0 t non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
0006a9c0 t non-virtual thunk to ConVar::GetName() const
0006a960 t non-virtual thunk to ConVar::IsFlagSet(int) const
00112c00 t non-virtual thunk to IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
00112ba0 t non-virtual thunk to IVP_U_Active_Terminal_Int::update_int()
00112950 t non-virtual thunk to IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
001129a0 t non-virtual thunk to IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
00112a50 t non-virtual thunk to IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
00112820 t non-virtual thunk to IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
00112aa0 t non-virtual thunk to IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
00112900 t non-virtual thunk to IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
00112890 t non-virtual thunk to IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
00112b10 t non-virtual thunk to IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
00112a00 t non-virtual thunk to IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
001127a0 t non-virtual thunk to IVP_U_Active_Terminal_Double::update_float()
001107c0 t non-virtual thunk to IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
00056350 t non-virtual thunk to CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
00056310 t non-virtual thunk to CPhysicsSpring::event_object_created(IVP_Event_Object*)
00055e60 t non-virtual thunk to CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
00056330 t non-virtual thunk to CPhysicsSpring::event_object_revived(IVP_Event_Object*)
00055e40 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
00055e10 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
000491a0 t non-virtual thunk to CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, double)
00049210 t non-virtual thunk to CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
000420b0 t non-virtual thunk to CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
00042140 t non-virtual thunk to CCollisionSolver::max_collision_checks_exceeded(int)
00043b70 t non-virtual thunk to CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00042100 t non-virtual thunk to CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
00044190 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
00044120 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
00034bd0 t non-virtual thunk to CPhysics_Airboat::get_controller_name()
00031650 t non-virtual thunk to CPhysics_Airboat::get_controller_priority()
00034520 t non-virtual thunk to CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00031990 t non-virtual thunk to CPhysics_Airboat::get_associated_controlled_cores()
000319c0 t non-virtual thunk to CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
00031c10 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
00031be0 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
00052560 t non-virtual thunk to CPlayerController::IsInContact()
000555d0 t non-virtual thunk to CPlayerController::GetLastImpulse(Vector*)
00052110 t non-virtual thunk to CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
00055680 t non-virtual thunk to CPlayerController::GetPushMassLimit()
00055620 t non-virtual thunk to CPlayerController::SetPushMassLimit(float)
000556b0 t non-virtual thunk to CPlayerController::GetPushSpeedLimit()
00055a20 t non-virtual thunk to CPlayerController::GetShadowPosition(Vector*, QAngle*)
00052380 t non-virtual thunk to CPlayerController::GetShadowVelocity(Vector*)
00055650 t non-virtual thunk to CPlayerController::SetPushSpeedLimit(float)
000520f0 t non-virtual thunk to CPlayerController::Jump()
000526b0 t non-virtual thunk to CPlayerController::StepUp(float)
00053060 t non-virtual thunk to CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
000524e0 t non-virtual thunk to CPlayerController::MaxSpeed(Vector const&)
000555f0 t non-virtual thunk to CPlayerController::GetObject()
00053310 t non-virtual thunk to CPlayerController::SetObject(IPhysicsObject*)
00055570 t non-virtual thunk to CPlayerController::WasFrozen()
000532b0 t non-virtual thunk to CPlayerController::~CPlayerController()
00053240 t non-virtual thunk to CPlayerController::~CPlayerController()
00052200 t non-virtual thunk to CShadowController::GetMaxSpeed(float*, float*)
000557b0 t non-virtual thunk to CShadowController::AllowsRotation()
00055810 t non-virtual thunk to CShadowController::GetLastImpulse(Vector*)
00055780 t non-virtual thunk to CShadowController::AllowsTranslation()
00052610 t non-virtual thunk to CShadowController::GetTargetPosition(Vector*, QAngle*)
000558e0 t non-virtual thunk to CShadowController::UseShadowMaterial(bool)
00052180 t non-virtual thunk to CShadowController::GetTeleportDistance()
00052140 t non-virtual thunk to CShadowController::SetTeleportDistance(float)
00055910 t non-virtual thunk to CShadowController::ObjectMaterialChanged(int)
00055880 t non-virtual thunk to CShadowController::IsPhysicallyControlled()
00055850 t non-virtual thunk to CShadowController::SetPhysicallyControlled(bool)
00052290 t non-virtual thunk to CShadowController::StepUp(float)
00052890 t non-virtual thunk to CShadowController::Update(Vector const&, QAngle const&, float)
000521c0 t non-virtual thunk to CShadowController::MaxSpeed(float, float)
00054eb0 t non-virtual thunk to CShadowController::~CShadowController()
00054e60 t non-virtual thunk to CShadowController::~CShadowController()
0003e500 t non-virtual thunk to CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
0003e4c0 t non-virtual thunk to CPhysicsConstraint::event_object_created(IVP_Event_Object*)
0003cc30 t non-virtual thunk to CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
0003e4e0 t non-virtual thunk to CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
0003cce0 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
0003ccb0 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
0005a350 t non-virtual thunk to CVehicleController::event_object_frozen(IVP_Event_Object*)
0005a310 t non-virtual thunk to CVehicleController::event_object_created(IVP_Event_Object*)
00058250 t non-virtual thunk to CVehicleController::event_object_deleted(IVP_Event_Object*)
0005a330 t non-virtual thunk to CVehicleController::event_object_revived(IVP_Event_Object*)
00058220 t non-virtual thunk to CVehicleController::~CVehicleController()
000581d0 t non-virtual thunk to CVehicleController::~CVehicleController()
0004d4a0 t non-virtual thunk to CPhysicsMotionController::GetObjects(IPhysicsObject**)
0004c6b0 t non-virtual thunk to CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
0004d510 t non-virtual thunk to CPhysicsMotionController::WakeObjects()
0004d130 t non-virtual thunk to CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
0004d710 t non-virtual thunk to CPhysicsMotionController::ClearObjects()
0004d450 t non-virtual thunk to CPhysicsMotionController::CountObjects()
0004d1d0 t non-virtual thunk to CPhysicsMotionController::DetachObject(IPhysicsObject*)
0004c6d0 t non-virtual thunk to CPhysicsMotionController::SetEventHandler(IMotionEvent*)
0004d290 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
0004d260 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
000e2d10 t non-virtual thunk to IVP_Controller_Raycast_Car::get_controller_priority()
000e44d0 t non-virtual thunk to IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e49b0 t non-virtual thunk to IVP_Controller_Raycast_Car::get_associated_controlled_cores()
000e4990 t non-virtual thunk to IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000e3290 t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000e3260 t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
0003ef70 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::get_controller_name()
0003e820 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003e7e0 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
00055730 t non-virtual thunk to CPlayerController::event_object_frozen(IVP_Event_Object*)
000556f0 t non-virtual thunk to CPlayerController::event_object_created(IVP_Event_Object*)
000556d0 t non-virtual thunk to CPlayerController::event_object_deleted(IVP_Event_Object*)
00055710 t non-virtual thunk to CPlayerController::event_object_revived(IVP_Event_Object*)
000532c0 t non-virtual thunk to CPlayerController::~CPlayerController()
00053250 t non-virtual thunk to CPlayerController::~CPlayerController()
00041f80 t non-virtual thunk to CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
00041f00 t non-virtual thunk to CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
00041e80 t non-virtual thunk to CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00041e60 t non-virtual thunk to CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00041fa0 t non-virtual thunk to CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
00155cd0 r typeinfo for ConCommand
00155474 r typeinfo for CTraceAABB
00155434 r typeinfo for CTraceCone
0016a440 r typeinfo for hk_Console
001562d8 r typeinfo for hk_Link_EF
00151790 r typeinfo for IAppSystem
001671a4 r typeinfo for IVP_Object
00169ea0 r typeinfo for CPolyhedron
00155404 r typeinfo for IConvexInfo
001671bc r typeinfo for IVP_Cluster
00168f30 r typeinfo for IVP_Mindist
001676f0 r typeinfo for IVP_Polygon
00168e20 r typeinfo for IVP_Synapse
00155190 r typeinfo for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
00152d2c r typeinfo for CDeleteProxy<IPhysicsConstraint>
00155d64 r typeinfo for CEmptyConVar
00151de4 r typeinfo for CPhysCollide
001554a0 r typeinfo for CTraceSolver
00151dcc r typeinfo for IPhysCollide
0015541c r typeinfo for ITraceObject
00165d8c r typeinfo for IVP_Actuator
00167ac4 r typeinfo for IVP_Material
0015f608 r typeinfo for IVP_Triangle
001543b0 r typeinfo for aligned_tmp_t
00152bb8 r typeinfo for CSleepObjects
00152ce4 r typeinfo for CVoidPairHash
001564ac r typeinfo for hk_Constraint
00169944 r typeinfo for IVP_3D_Solver
00165a4c r typeinfo for IVP_CFEP_Hash
00168c84 r typeinfo for IVP_Collision
00151804 r typeinfo for CBaseAppSystem<IPhysics>
00155480 r typeinfo for CDefConvexInfo
00155cb8 r typeinfo for ConCommandBase
00153edc r typeinfo for CPhysicsObject
001548a0 r typeinfo for CPhysicsSpring
001557f8 r typeinfo for CVPhysicsParse
00153e70 r typeinfo for IPhysicsObject
0015485c r typeinfo for IPhysicsSpring
00166564 r typeinfo for IVP_Car_System
00169cfc r typeinfo for IVP_Constraint
001673e8 r typeinfo for IVP_Controller
00168ee0 r typeinfo for IVP_OO_Watcher
00168ba4 r typeinfo for IVP_OV_Element
0015edd0 r typeinfo for IVP_point_hash
00165b8c r typeinfo for IVP_Ray_Solver
00168ea8 r typeinfo for IVP_Synapse_OO
00167790 r typeinfo for IVP_Time_Event
00151e60 r typeinfo for CCollisionQuery
00152ca0 r typeinfo for CDragController
00152d0c r typeinfo for CObjectPairHash
0015182c r typeinfo for CTier0AppSystem<IPhysics>
00151858 r typeinfo for CTier1AppSystem<IPhysics, 0>
00151db0 r typeinfo for ICollisionQuery
00153e8c r typeinfo for ISaveRestoreOps
0016722c r typeinfo for IVP_Real_Object
00152c40 r typeinfo for CCollisionSolver
00155f70 r typeinfo for CDataManagerBase
00155d44 r typeinfo for CDefaultAccessor
00156034 r typeinfo for CDllDemandLoader
001519e0 r typeinfo for CPhysics_Airboat
00152b54 r typeinfo for IDeleteQueueItem
00168e40 r typeinfo for IVP_Mindist_Base
00168bf4 r typeinfo for IVP_ov_tree_hash
00168f14 r typeinfo for IVP_Synapse_Real
001677d0 r typeinfo for IVP_Time_Event_D
001677f0 r typeinfo for IVP_Time_Event_N
00168260 r typeinfo for IVP_U_Active_Add
001680e8 r typeinfo for IVP_U_Active_Int
001682a0 r typeinfo for IVP_U_Active_Sub
00166b28 r typeinfo for IVP_U_Set_Active<IVP_Real_Object>
00166a4c r typeinfo for IVP_U_Set_Active<IVP_Mindist_Base>
00166ad0 r typeinfo for IVP_U_Set_Active<IVP_Core>
001543c8 r typeinfo for CAlignedNewDelete<16, aligned_tmp_t>
00153388 r typeinfo for CBuoyancyAttacher
001534d4 r typeinfo for CFrictionSnapshot
00153ee8 r typeinfo for CMaterialIndexOps
00151e14 r typeinfo for CPhysicsCollision
001518b8 r typeinfo for CPhysicsInterface
00154480 r typeinfo for CPlayerController
001544c0 r typeinfo for CShadowController
00151d94 r typeinfo for IPhysicsCollision
00167810 r typeinfo for IVP_Event_Manager
0015edfc r typeinfo for IVP_I_Point_VHash
0016705c r typeinfo for IVP_Listener_Hull
0016958c r typeinfo for IVP_Range_Manager
00168320 r typeinfo for IVP_U_Active_Mult
001681a0 r typeinfo for IVP_U_Active_Sine
00153ea8 r typeinfo for CDefSaveRestoreOps
00152660 r typeinfo for CPhysicsConstraint
00156240 r typeinfo for CUtlCharConversion
00154fe0 r typeinfo for CVehicleController
001525d4 r typeinfo for IPhysicsConstraint
00165fe0 r typeinfo for IVP_Actuator_Extra
00165e00 r typeinfo for IVP_Actuator_Force
00167908 r typeinfo for IVP_Anomaly_Limits
001557c8 r typeinfo for IVPhysicsKeyParser
0015ed90 r typeinfo for IVP_I_FPoint_VHash
00165bd8 r typeinfo for IVP_Ray_Solver_Min
00167d48 r typeinfo for IVP_SurfaceManager
001677b0 r typeinfo for IVP_Time_Event_PSI
001680c8 r typeinfo for IVP_U_Active_Float
00168360 r typeinfo for IVP_U_Active_Limit
00168220 r typeinfo for IVP_U_Active_Pulse
001680a8 r typeinfo for IVP_U_Active_Value
00153774 r typeinfo for CIVPMaterialManager
00152b24 r typeinfo for CPhysicsEnvironment
0015626c r typeinfo for CUtlNoEscConversion
00156528 r typeinfo for hk_Fixed_Constraint
0015658c r typeinfo for hk_Hinge_Constraint
00152af0 r typeinfo for IPhysicsEnvironment
00169290 r typeinfo for IVP_3D_Solver_PK_KK
001663f8 r typeinfo for IVP_Actuator_Spring
00165ef8 r typeinfo for IVP_Actuator_Torque
00167928 r typeinfo for IVP_Anomaly_Manager
0016785c r typeinfo for IVP_Event_Manager_D
001674d8 r typeinfo for IVP_Friction_System
001673a8 r typeinfo for IVP_Listener_Object
001663d8 r typeinfo for IVP_Listener_Spring
00167ae4 r typeinfo for IVP_Material_Simple
001681e0 r typeinfo for IVP_U_Active_Square
001683e0 r typeinfo for IVP_U_Active_Switch
00151a00 r typeinfo for CAirboatFrictionData
00155d20 r typeinfo for ConVar_ServerBounded
001517e0 r typeinfo for CPhysicsCollisionSet
00152b94 r typeinfo for CPhysicsFrictionData
00153798 r typeinfo for CPhysicsSurfaceProps
0015666c r typeinfo for hk_Pulley_Constraint
001517c0 r typeinfo for IPhysicsCollisionSet
001536f8 r typeinfo for IPhysicsSurfaceProps
001692d8 r typeinfo for IVP_3D_Solver_PF_NPF
0016926c r typeinfo for IVP_3D_Solver_S_VALS
00165e78 r typeinfo for IVP_Actuator_Rot_Mot
001659c0 r typeinfo for IVP_Collision_Filter
00169658 r typeinfo for IVP_Constraint_Local
0016973c r typeinfo for IVP_Controller_Golem
00167250 r typeinfo for IVP_Controller_VHash
00166a18 r typeinfo for IVP_Listener_Phantom
00167b08 r typeinfo for IVP_Material_Manager
00165b70 r typeinfo for IVP_Ray_Hit_Listener
0016720c r typeinfo for IVP_Real_Object_Fast
001674fc r typeinfo for IVP_Universe_Manager
00152b70 r typeinfo for CPhysicsCollisionData
00156260 r typeinfo for CUtlCStringConversion
00152cc0 r typeinfo for CVPhysicsDebugOverlay
001566d0 r typeinfo for hk_Ragdoll_Constraint
001519a4 r typeinfo for IPhysicsCollisionData
001692fc r typeinfo for IVP_3D_Solver_KK_COLL
001691c0 r typeinfo for IVP_3D_Solver_PF_COLL
001692b4 r typeinfo for IVP_3D_Solver_PK_COLL
00168420 r typeinfo for IVP_Active_Value_Hash
00165fa0 r typeinfo for IVP_Anchor_Check_Dist
00153328 r typeinfo for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00169718 r typeinfo for IVP_Controller_Motion
00152aac r typeinfo for IVPhysicsDebugOverlay
00168f60 r typeinfo for IVP_Mindist_Recursive
00169ed0 r typeinfo for CPolyhedron_AllocByNew
00169edc r typeinfo for CPolyhedron_TempMemory
00152acc r typeinfo for IPhysicsCollisionEvent
00152b30 r typeinfo for IPhysicsObjectPairHash
00165db4 r typeinfo for IVP_Actuator_Two_Point
001679bc r typeinfo for IVP_BetterDebugmanager
00166aa0 r typeinfo for IVP_Controller_Phantom
001673cc r typeinfo for IVP_Listener_Collision
00167c6c r typeinfo for IVP_PerformanceCounter
00152bd4 r typeinfo for CEmptyCollisionListener
00155204 r typeinfo for CPhysCollideVirtualMesh
00152630 r typeinfo for CPhysicsConstraintGroup
001532ec r typeinfo for CPhysicsFluidController
001554d4 r typeinfo for CTraceSolverSweptObject
00155928 r typeinfo for CVPhysPtrSaveRestoreOps
00156428 r typeinfo for hk_Breakable_Constraint
001565fc r typeinfo for hk_Prismatic_Constraint
00156478 r typeinfo for hk_Rigid_Body_Binary_EF
00155c84 r typeinfo for IConCommandBaseAccessor
001525f4 r typeinfo for IPhysicsConstraintGroup
001532b0 r typeinfo for IPhysicsFluidController
00165ddc r typeinfo for IVP_Actuator_Four_Point
0016601c r typeinfo for IVP_Actuator_Stabilizer
0016647c r typeinfo for IVP_Actuator_Suspension
00168c40 r typeinfo for IVP_Collision_Delegator
001667d8 r typeinfo for IVP_Controller_Buoyancy
00166d90 r typeinfo for IVP_Friction_Sys_Energy
00166db8 r typeinfo for IVP_Friction_Sys_Static
00166c9c r typeinfo for IVP_Listener_Constraint
001532f8 r typeinfo for IVP_Listener_Set_Active<IVP_Core>
00165bb4 r typeinfo for IVP_Ray_Solver_Min_Hash
00169840 r typeinfo for IVP_SurfaceManager_Ball
001683a0 r typeinfo for IVP_U_Active_Test_Range
00153394 r typeinfo for CLiquidSurfaceDescriptor
00153a00 r typeinfo for CPhysicsMotionController
0015349c r typeinfo for IPhysicsFrictionSnapshot
001539b8 r typeinfo for IPhysicsMotionController
00154430 r typeinfo for IPhysicsPlayerController
0015440c r typeinfo for IPhysicsShadowController
00167438 r typeinfo for IVP_Controller_Dependent
00168060 r typeinfo for IVP_U_Active_Int_Delayed
00152c20 r typeinfo for CPhysicsListenerCollision
001563c4 r typeinfo for hk_Ball_Socket_Constraint
00154f88 r typeinfo for IPhysicsVehicleController
00169324 r typeinfo for IVP_3D_Solver_KK_PARALLEL
00165e40 r typeinfo for IVP_Actuator_Force_Active
00166720 r typeinfo for IVP_Constraint_Solver_Car
00165a30 r typeinfo for IVP_Meta_Collision_Filter
001682e0 r typeinfo for IVP_U_Active_Add_Multiple
0016803c r typeinfo for IVP_U_Active_Int_Listener
00168160 r typeinfo for IVP_U_Active_Terminal_Int
00151e40 r typeinfo for CPhysCollideCompactSurface
00152c74 r typeinfo for CPhysicsListenerConstraint
00156310 r typeinfo for hk_Local_Constraint_System
0015674c r typeinfo for hk_Stiff_Spring_Constraint
00166440 r typeinfo for IVP_Actuator_Spring_Active
00165f40 r typeinfo for IVP_Actuator_Torque_Active
0016658c r typeinfo for IVP_Car_System_Real_Wheels
00167410 r typeinfo for IVP_Controller_Independent
00166900 r typeinfo for IVP_Controller_Raycast_Car
00167838 r typeinfo for IVP_Event_Manager_Standard
00167db8 r typeinfo for IVP_SurfaceManager_Polygon
00168088 r typeinfo for IVP_U_Active_Float_Delayed
00167ff0 r typeinfo for IVP_U_Active_Value_Manager
00165ec0 r typeinfo for IVP_Actuator_Rot_Mot_Active
001671e8 r typeinfo for IVP_Real_Object_Fast_Static
00168018 r typeinfo for IVP_U_Active_Float_Listener
00153718 r typeinfo for IPhysicsSurfacePropsInternal
00168c68 r typeinfo for IVP_Collision_Delegator_Root
00168120 r typeinfo for IVP_U_Active_Terminal_Double
00167a20 r typeinfo for IVP_Liquid_Surface_Descriptor
00165f80 r typeinfo for IVP_Listener_Check_Dist_Event
00167ca0 r typeinfo for IVP_PerformanceCounter_Simple
00166824 r typeinfo for IVP_Attacher_To_Cores_Buoyancy
00169904 r typeinfo for IVP_Object_Callback_Table_Hash
00155184 r typeinfo for IVP_SurfaceManager_VirtualMesh
00169204 r typeinfo for IVP_3D_Solver_VEC_PARALLEL_AREA
001674a0 r typeinfo for IVP_Standard_Gravity_Controller
00155964 r typeinfo for CVPhysPtrUtlVectorSaveRestoreOps
00168d44 r typeinfo for IVP_Collision_Callback_Table_Hash
00152808 r typeinfo for CPhysics_Car_System_Raycast_Wheels
00165a08 r typeinfo for IVP_Collision_Filter_Exclusive_Pair
00169248 r typeinfo for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00168e88 r typeinfo for IVP_Collision_Delegator_Root_Mindist
00167a68 r typeinfo for IVP_Liquid_Surface_Descriptor_Simple
00155d00 r typeinfo for ConVar
00155c70 r typeinfo for IConVar
001694cc r typeinfo for CFmtStrN<256, false>
00153750 r typeinfo for CSurface
001517a8 r typeinfo for IPhysics
00169834 r typeinfo for IVP_Ball
00155458 r typeinfo for CTraceIVP
00166afc r typeinfo for IVP_U_Set<IVP_Real_Object>
00166a20 r typeinfo for IVP_U_Set<IVP_Mindist_Base>
00166aac r typeinfo for IVP_U_Set<IVP_Core>
00168b10 r typeinfo for IVP_VHash
00155cc0 r typeinfo name for ConCommand
00155464 r typeinfo name for CTraceAABB
00155440 r typeinfo name for CTraceCone
0016a430 r typeinfo name for hk_Console
001562e4 r typeinfo name for hk_Link_EF
00151798 r typeinfo name for IAppSystem
00167196 r typeinfo name for IVP_Object
00169ea8 r typeinfo name for CPolyhedron
0015540c r typeinfo name for IConvexInfo
001671ac r typeinfo name for IVP_Cluster
00168f20 r typeinfo name for IVP_Mindist
001676e0 r typeinfo name for IVP_Polygon
00168e12 r typeinfo name for IVP_Synapse
001551a0 r typeinfo name for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
00152d40 r typeinfo name for CDeleteProxy<IPhysicsConstraint>
00155d70 r typeinfo name for CEmptyConVar
00151df0 r typeinfo name for CPhysCollide
001554a8 r typeinfo name for CTraceSolver
00151dd4 r typeinfo name for IPhysCollide
00155424 r typeinfo name for ITraceObject
00165d7c r typeinfo name for IVP_Actuator
00167ab4 r typeinfo name for IVP_Material
0015f5f7 r typeinfo name for IVP_Triangle
001543b8 r typeinfo name for aligned_tmp_t
00152bc4 r typeinfo name for CSleepObjects
00152cfc r typeinfo name for CVoidPairHash
0015649a r typeinfo name for hk_Constraint
00169934 r typeinfo name for IVP_3D_Solver
00165a3c r typeinfo name for IVP_CFEP_Hash
00168c74 r typeinfo name for IVP_Collision
00151810 r typeinfo name for CBaseAppSystem<IPhysics>
0015548c r typeinfo name for CDefConvexInfo
00155ca6 r typeinfo name for ConCommandBase
00153ec9 r typeinfo name for CPhysicsObject
00154875 r typeinfo name for CPhysicsSpring
001557e5 r typeinfo name for CVPhysicsParse
00153e78 r typeinfo name for IPhysicsObject
00154864 r typeinfo name for IPhysicsSpring
00166550 r typeinfo name for IVP_Car_System
00169ce9 r typeinfo name for IVP_Constraint
001673d4 r typeinfo name for IVP_Controller
00168eb4 r typeinfo name for IVP_OO_Watcher
00168b90 r typeinfo name for IVP_OV_Element
0015edbc r typeinfo name for IVP_point_hash
00165b78 r typeinfo name for IVP_Ray_Solver
00168e94 r typeinfo name for IVP_Synapse_OO
0016777c r typeinfo name for IVP_Time_Event
00151e4c r typeinfo name for CCollisionQuery
00152cac r typeinfo name for CDragController
00152d18 r typeinfo name for CObjectPairHash
00151838 r typeinfo name for CTier0AppSystem<IPhysics>
00151880 r typeinfo name for CTier1AppSystem<IPhysics, 0>
00151db8 r typeinfo name for ICollisionQuery
00153e94 r typeinfo name for ISaveRestoreOps
00167218 r typeinfo name for IVP_Real_Object
00152c60 r typeinfo name for CCollisionSolver
00155f5a r typeinfo name for CDataManagerBase
00155d50 r typeinfo name for CDefaultAccessor
0015601f r typeinfo name for CDllDemandLoader
001519c4 r typeinfo name for CPhysics_Airboat
00152b5c r typeinfo name for IDeleteQueueItem
00168e2c r typeinfo name for IVP_Mindist_Base
00168be0 r typeinfo name for IVP_ov_tree_hash
00168f00 r typeinfo name for IVP_Synapse_Real
001677bc r typeinfo name for IVP_Time_Event_D
001677dc r typeinfo name for IVP_Time_Event_N
00168240 r typeinfo name for IVP_U_Active_Add
001680d4 r typeinfo name for IVP_U_Active_Int
00168280 r typeinfo name for IVP_U_Active_Sub
00166b40 r typeinfo name for IVP_U_Set_Active<IVP_Real_Object>
00166a60 r typeinfo name for IVP_U_Set_Active<IVP_Mindist_Base>
00166adc r typeinfo name for IVP_U_Set_Active<IVP_Core>
001543e0 r typeinfo name for CAlignedNewDelete<16, aligned_tmp_t>
00153373 r typeinfo name for CBuoyancyAttacher
001534bf r typeinfo name for CFrictionSnapshot
00153ef4 r typeinfo name for CMaterialIndexOps
00151dff r typeinfo name for CPhysicsCollision
001518a1 r typeinfo name for CPhysicsInterface
00154453 r typeinfo name for CPlayerController
001544a8 r typeinfo name for CShadowController
00151d9c r typeinfo name for IPhysicsCollision
001677fc r typeinfo name for IVP_Event_Manager
0015ede8 r typeinfo name for IVP_I_Point_VHash
00167048 r typeinfo name for IVP_Listener_Hull
00169578 r typeinfo name for IVP_Range_Manager
00168300 r typeinfo name for IVP_U_Active_Mult
00168180 r typeinfo name for IVP_U_Active_Sine
00153eb4 r typeinfo name for CDefSaveRestoreOps
0015263c r typeinfo name for CPhysicsConstraint
00156229 r typeinfo name for CUtlCharConversion
00154fac r typeinfo name for CVehicleController
001525dc r typeinfo name for IPhysicsConstraint
00165fac r typeinfo name for IVP_Actuator_Extra
00165de8 r typeinfo name for IVP_Actuator_Force
001678f0 r typeinfo name for IVP_Anomaly_Limits
001557d0 r typeinfo name for IVPhysicsKeyParser
0015ed78 r typeinfo name for IVP_I_FPoint_VHash
00165bc0 r typeinfo name for IVP_Ray_Solver_Min
00167d30 r typeinfo name for IVP_SurfaceManager
00167798 r typeinfo name for IVP_Time_Event_PSI
001680b0 r typeinfo name for IVP_U_Active_Float
00168340 r typeinfo name for IVP_U_Active_Limit
00168200 r typeinfo name for IVP_U_Active_Pulse
00168090 r typeinfo name for IVP_U_Active_Value
0015375c r typeinfo name for CIVPMaterialManager
00152b0e r typeinfo name for CPhysicsEnvironment
00156278 r typeinfo name for CUtlNoEscConversion
00156512 r typeinfo name for hk_Fixed_Constraint
00156576 r typeinfo name for hk_Hinge_Constraint
00152af8 r typeinfo name for IPhysicsEnvironment
00169278 r typeinfo name for IVP_3D_Solver_PK_KK
001663e0 r typeinfo name for IVP_Actuator_Spring
00165ee0 r typeinfo name for IVP_Actuator_Torque
00167910 r typeinfo name for IVP_Anomaly_Manager
00167844 r typeinfo name for IVP_Event_Manager_D
001674c0 r typeinfo name for IVP_Friction_System
00167392 r typeinfo name for IVP_Listener_Object
001663bf r typeinfo name for IVP_Listener_Spring
00167acc r typeinfo name for IVP_Material_Simple
001681c0 r typeinfo name for IVP_U_Active_Square
001683c0 r typeinfo name for IVP_U_Active_Switch
00151a0c r typeinfo name for CAirboatFrictionData
00155d2c r typeinfo name for ConVar_ServerBounded
001517ec r typeinfo name for CPhysicsCollisionSet
00152ba0 r typeinfo name for CPhysicsFrictionData
00153780 r typeinfo name for CPhysicsSurfaceProps
00156653 r typeinfo name for hk_Pulley_Constraint
001517c8 r typeinfo name for IPhysicsCollisionSet
00153700 r typeinfo name for IPhysicsSurfaceProps
001692c0 r typeinfo name for IVP_3D_Solver_PF_NPF
00169254 r typeinfo name for IVP_3D_Solver_S_VALS
00165e60 r typeinfo name for IVP_Actuator_Rot_Mot
001659a8 r typeinfo name for IVP_Collision_Filter
00169640 r typeinfo name for IVP_Constraint_Local
00169724 r typeinfo name for IVP_Controller_Golem
00167238 r typeinfo name for IVP_Controller_VHash
001669ff r typeinfo name for IVP_Listener_Phantom
00167af0 r typeinfo name for IVP_Material_Manager
00165b58 r typeinfo name for IVP_Ray_Hit_Listener
001671f4 r typeinfo name for IVP_Real_Object_Fast
001674e4 r typeinfo name for IVP_Universe_Manager
00152b7c r typeinfo name for CPhysicsCollisionData
00156248 r typeinfo name for CUtlCStringConversion
00152ccc r typeinfo name for CVPhysicsDebugOverlay
001566b8 r typeinfo name for hk_Ragdoll_Constraint
001519ac r typeinfo name for IPhysicsCollisionData
001692e4 r typeinfo name for IVP_3D_Solver_KK_COLL
001691a8 r typeinfo name for IVP_3D_Solver_PF_COLL
0016929c r typeinfo name for IVP_3D_Solver_PK_COLL
00168408 r typeinfo name for IVP_Active_Value_Hash
00165f88 r typeinfo name for IVP_Anchor_Check_Dist
00153340 r typeinfo name for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00169700 r typeinfo name for IVP_Controller_Motion
00152ab4 r typeinfo name for IVPhysicsDebugOverlay
00168f3c r typeinfo name for IVP_Mindist_Recursive
00169eb6 r typeinfo name for CPolyhedron_AllocByNew
00169ee8 r typeinfo name for CPolyhedron_TempMemory
00152ad4 r typeinfo name for IPhysicsCollisionEvent
00152b38 r typeinfo name for IPhysicsObjectPairHash
00165d98 r typeinfo name for IVP_Actuator_Two_Point
001679a0 r typeinfo name for IVP_BetterDebugmanager
00166a87 r typeinfo name for IVP_Controller_Phantom
001673b0 r typeinfo name for IVP_Listener_Collision
00167c52 r typeinfo name for IVP_PerformanceCounter
00152be0 r typeinfo name for CEmptyCollisionListener
001551e9 r typeinfo name for CPhysCollideVirtualMesh
00152616 r typeinfo name for CPhysicsConstraintGroup
001532d2 r typeinfo name for CPhysicsFluidController
001554b7 r typeinfo name for CTraceSolverSweptObject
0015590c r typeinfo name for CVPhysPtrSaveRestoreOps
0015640c r typeinfo name for hk_Breakable_Constraint
001565e2 r typeinfo name for hk_Prismatic_Constraint
00156480 r typeinfo name for hk_Rigid_Body_Binary_EF
00155c8c r typeinfo name for IConCommandBaseAccessor
001525fc r typeinfo name for IPhysicsConstraintGroup
001532b8 r typeinfo name for IPhysicsFluidController
00165dc0 r typeinfo name for IVP_Actuator_Four_Point
00166000 r typeinfo name for IVP_Actuator_Stabilizer
00166460 r typeinfo name for IVP_Actuator_Suspension
00168c24 r typeinfo name for IVP_Collision_Delegator
001667bd r typeinfo name for IVP_Controller_Buoyancy
00166d75 r typeinfo name for IVP_Friction_Sys_Energy
00166d9c r typeinfo name for IVP_Friction_Sys_Static
00166c82 r typeinfo name for IVP_Listener_Constraint
00153300 r typeinfo name for IVP_Listener_Set_Active<IVP_Core>
00165b98 r typeinfo name for IVP_Ray_Solver_Min_Hash
0016984c r typeinfo name for IVP_SurfaceManager_Ball
00168380 r typeinfo name for IVP_U_Active_Test_Range
001533a0 r typeinfo name for CLiquidSurfaceDescriptor
001539db r typeinfo name for CPhysicsMotionController
001534a4 r typeinfo name for IPhysicsFrictionSnapshot
001539c0 r typeinfo name for IPhysicsMotionController
00154438 r typeinfo name for IPhysicsPlayerController
00154414 r typeinfo name for IPhysicsShadowController
0016741c r typeinfo name for IVP_Controller_Dependent
00168044 r typeinfo name for IVP_U_Active_Int_Delayed
00152bfa r typeinfo name for CPhysicsListenerCollision
001563a8 r typeinfo name for hk_Ball_Socket_Constraint
00154f90 r typeinfo name for IPhysicsVehicleController
00169308 r typeinfo name for IVP_3D_Solver_KK_PARALLEL
00165e0c r typeinfo name for IVP_Actuator_Force_Active
00166703 r typeinfo name for IVP_Constraint_Solver_Car
00165a14 r typeinfo name for IVP_Meta_Collision_Filter
001682c0 r typeinfo name for IVP_U_Active_Add_Multiple
00168020 r typeinfo name for IVP_U_Active_Int_Listener
00168140 r typeinfo name for IVP_U_Active_Terminal_Int
00151e20 r typeinfo name for CPhysCollideCompactSurface
00152c80 r typeinfo name for CPhysicsListenerConstraint
001562f1 r typeinfo name for hk_Local_Constraint_System
0015672d r typeinfo name for hk_Stiff_Spring_Constraint
00166404 r typeinfo name for IVP_Actuator_Spring_Active
00165f04 r typeinfo name for IVP_Actuator_Torque_Active
0016656c r typeinfo name for IVP_Car_System_Real_Wheels
001673f0 r typeinfo name for IVP_Controller_Independent
001668c4 r typeinfo name for IVP_Controller_Raycast_Car
00167818 r typeinfo name for IVP_Event_Manager_Standard
00167d98 r typeinfo name for IVP_SurfaceManager_Polygon
00168068 r typeinfo name for IVP_U_Active_Float_Delayed
00167fd3 r typeinfo name for IVP_U_Active_Value_Manager
00165e84 r typeinfo name for IVP_Actuator_Rot_Mot_Active
001671c8 r typeinfo name for IVP_Real_Object_Fast_Static
00167ff8 r typeinfo name for IVP_U_Active_Float_Listener
00153724 r typeinfo name for IPhysicsSurfacePropsInternal
00168c48 r typeinfo name for IVP_Collision_Delegator_Root
001680f4 r typeinfo name for IVP_U_Active_Terminal_Double
00167a00 r typeinfo name for IVP_Liquid_Surface_Descriptor
00165f60 r typeinfo name for IVP_Listener_Check_Dist_Event
00167c80 r typeinfo name for IVP_PerformanceCounter_Simple
00166800 r typeinfo name for IVP_Attacher_To_Cores_Buoyancy
001698e0 r typeinfo name for IVP_Object_Callback_Table_Hash
00155160 r typeinfo name for IVP_SurfaceManager_VirtualMesh
001691e0 r typeinfo name for IVP_3D_Solver_VEC_PARALLEL_AREA
00167460 r typeinfo name for IVP_Standard_Gravity_Controller
00155940 r typeinfo name for CVPhysPtrUtlVectorSaveRestoreOps
00168d20 r typeinfo name for IVP_Collision_Callback_Table_Hash
001527e0 r typeinfo name for CPhysics_Car_System_Raycast_Wheels
001659e0 r typeinfo name for IVP_Collision_Filter_Exclusive_Pair
00169220 r typeinfo name for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00168e60 r typeinfo name for IVP_Collision_Delegator_Root_Mindist
00167a40 r typeinfo name for IVP_Liquid_Surface_Descriptor_Simple
00155cdc r typeinfo name for ConVar
00155c78 r typeinfo name for IConVar
001694d4 r typeinfo name for CFmtStrN<256, false>
00153743 r typeinfo name for CSurface
001517b4 r typeinfo name for IPhysics
00169828 r typeinfo name for IVP_Ball
0015544d r typeinfo name for CTraceIVP
00166b08 r typeinfo name for IVP_U_Set<IVP_Real_Object>
00166a2c r typeinfo name for IVP_U_Set<IVP_Mindist_Base>
00166ab8 r typeinfo name for IVP_U_Set<IVP_Core>
00168b05 r typeinfo name for IVP_VHash
00155e00 r vtable for ConCommand
00155528 r vtable for CTraceAABB
001554f8 r vtable for CTraceCone
0016a448 r vtable for hk_Console
00156320 r vtable for hk_Link_EF
00167268 r vtable for IVP_Object
00169f08 r vtable for CPolyhedron
00167278 r vtable for IVP_Cluster
001690a0 r vtable for IVP_Mindist
00167700 r vtable for IVP_Polygon
00168f80 r vtable for IVP_Synapse
00155220 r vtable for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
00153250 r vtable for CDeleteProxy<IPhysicsConstraint>
00155ec0 r vtable for CEmptyConVar
00151fe0 r vtable for CPhysCollide
00155550 r vtable for CTraceSolver
00151fa0 r vtable for IPhysCollide
001554e0 r vtable for ITraceObject
00166040 r vtable for IVP_Actuator
00167b20 r vtable for IVP_Material
0015f610 r vtable for IVP_Triangle
00152f20 r vtable for CSleepObjects
00153208 r vtable for CVoidPairHash
001564e0 r vtable for hk_Constraint
00169950 r vtable for IVP_3D_Solver
00165a80 r vtable for IVP_CFEP_Hash
00168d00 r vtable for IVP_Collision
00155540 r vtable for CDefConvexInfo
00155dc0 r vtable for ConCommandBase
00154080 r vtable for CPhysicsObject
00154900 r vtable for CPhysicsSpring
00155860 r vtable for CVPhysicsParse
00153f20 r vtable for IPhysicsObject
001548c0 r vtable for IPhysicsSpring
001665a0 r vtable for IVP_Car_System
00169d20 r vtable for IVP_Constraint
00167580 r vtable for IVP_Controller
00169020 r vtable for IVP_OO_Watcher
00168bc0 r vtable for IVP_OV_Element
0015ee18 r vtable for IVP_point_hash
00165c00 r vtable for IVP_Ray_Solver
00169000 r vtable for IVP_Synapse_OO
00167868 r vtable for IVP_Time_Event
00152180 r vtable for CCollisionQuery
00153060 r vtable for CDragController
00153220 r vtable for CObjectPairHash
00151f60 r vtable for ICollisionQuery
00155970 r vtable for ISaveRestoreOps
001672a8 r vtable for IVP_Real_Object
00152fe0 r vtable for CCollisionSolver
00155f80 r vtable for CDataManagerBase
00155da0 r vtable for CDefaultAccessor
00156040 r vtable for CDllDemandLoader
00151a40 r vtable for CPhysics_Airboat
00152ed0 r vtable for IDeleteQueueItem
00168fa0 r vtable for IVP_Mindist_Base
00168c10 r vtable for IVP_ov_tree_hash
00169060 r vtable for IVP_Synapse_Real
00167888 r vtable for IVP_Time_Event_D
00167898 r vtable for IVP_Time_Event_N
00168660 r vtable for IVP_U_Active_Add
001684f0 r vtable for IVP_U_Active_Int
001686a0 r vtable for IVP_U_Active_Sub
00166c28 r vtable for IVP_U_Set_Active<IVP_Real_Object>
00166ba0 r vtable for IVP_U_Set_Active<IVP_Mindist_Base>
00166bf8 r vtable for IVP_U_Set_Active<IVP_Core>
00153460 r vtable for CBuoyancyAttacher
00153540 r vtable for CFrictionSnapshot
001541d8 r vtable for CMaterialIndexOps
001520a0 r vtable for CPhysicsCollision
00151900 r vtable for CPhysicsInterface
001545c0 r vtable for CPlayerController
001546c0 r vtable for CShadowController
00151e80 r vtable for IPhysicsCollision
001678a8 r vtable for IVP_Event_Manager
0015ee30 r vtable for IVP_I_Point_VHash
00167068 r vtable for IVP_Listener_Hull
00169598 r vtable for IVP_Range_Manager
00168720 r vtable for IVP_U_Active_Mult
001685a0 r vtable for IVP_U_Active_Sine
00155990 r vtable for CDefSaveRestoreOps
00152740 r vtable for CPhysicsConstraint
001562b0 r vtable for CUtlCharConversion
00155060 r vtable for CVehicleController
00152680 r vtable for IPhysicsConstraint
001662c0 r vtable for IVP_Actuator_Extra
00166100 r vtable for IVP_Actuator_Force
00167930 r vtable for IVP_Anomaly_Limits
00155820 r vtable for IVPhysicsKeyParser
0015eda8 r vtable for IVP_I_FPoint_VHash
00165c30 r vtable for IVP_Ray_Solver_Min
00167d60 r vtable for IVP_SurfaceManager
00167878 r vtable for IVP_Time_Event_PSI
001684d8 r vtable for IVP_U_Active_Float
00168760 r vtable for IVP_U_Active_Limit
00168620 r vtable for IVP_U_Active_Pulse
001684c8 r vtable for IVP_U_Active_Value
00153900 r vtable for CIVPMaterialManager
001530e0 r vtable for CPhysicsEnvironment
00156290 r vtable for CUtlNoEscConversion
00156540 r vtable for hk_Fixed_Constraint
001565a0 r vtable for hk_Hinge_Constraint
00152d80 r vtable for IPhysicsEnvironment
00169370 r vtable for IVP_3D_Solver_PK_KK
001664a0 r vtable for IVP_Actuator_Spring
00166200 r vtable for IVP_Actuator_Torque
00167960 r vtable for IVP_Anomaly_Manager
001678d8 r vtable for IVP_Event_Manager_D
00167680 r vtable for IVP_Friction_System
00167520 r vtable for IVP_Listener_Object
00166488 r vtable for IVP_Listener_Spring
00167b60 r vtable for IVP_Material_Simple
001685e0 r vtable for IVP_U_Active_Square
001687e0 r vtable for IVP_U_Active_Switch
00151a28 r vtable for CAirboatFrictionData
001518e0 r vtable for CPhysicsCollisionSet
00152f00 r vtable for CPhysicsFrictionData
001538a0 r vtable for CPhysicsSurfaceProps
00156680 r vtable for hk_Pulley_Constraint
001518c8 r vtable for IPhysicsCollisionSet
001537c0 r vtable for IPhysicsSurfaceProps
00169390 r vtable for IVP_3D_Solver_PF_NPF
00169360 r vtable for IVP_3D_Solver_S_VALS
00166180 r vtable for IVP_Actuator_Rot_Mot
00165a68 r vtable for IVP_Collision_Filter
00169680 r vtable for IVP_Constraint_Local
001697a0 r vtable for IVP_Controller_Golem
001672c0 r vtable for IVP_Controller_VHash
00166b68 r vtable for IVP_Listener_Phantom
00167ba0 r vtable for IVP_Material_Manager
00165be8 r vtable for IVP_Ray_Hit_Listener
00167298 r vtable for IVP_Real_Object_Fast
001676b0 r vtable for IVP_Universe_Manager
00152ee8 r vtable for CPhysicsCollisionData
001562a0 r vtable for CUtlCStringConversion
001530a0 r vtable for CVPhysicsDebugOverlay
001566e0 r vtable for hk_Ragdoll_Constraint
001693a0 r vtable for IVP_3D_Solver_KK_COLL
00169330 r vtable for IVP_3D_Solver_PF_COLL
00169380 r vtable for IVP_3D_Solver_PK_COLL
00168818 r vtable for IVP_Active_Value_Hash
001662a0 r vtable for IVP_Anchor_Check_Dist
001533e8 r vtable for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00169760 r vtable for IVP_Controller_Motion
001690e0 r vtable for IVP_Mindist_Recursive
00169f20 r vtable for CPolyhedron_AllocByNew
00169f38 r vtable for CPolyhedron_TempMemory
00152ea0 r vtable for IPhysicsObjectPairHash
00166080 r vtable for IVP_Actuator_Two_Point
001679c8 r vtable for IVP_BetterDebugmanager
00166bc0 r vtable for IVP_Controller_Phantom
00167540 r vtable for IVP_Listener_Collision
00167cc0 r vtable for IVP_PerformanceCounter
00152f40 r vtable for CEmptyCollisionListener
00155260 r vtable for CPhysCollideVirtualMesh
00152700 r vtable for CPhysicsConstraintGroup
00153420 r vtable for CPhysicsFluidController
00155560 r vtable for CTraceSolverSweptObject
001559b0 r vtable for CVPhysPtrSaveRestoreOps
00156440 r vtable for hk_Breakable_Constraint
00156620 r vtable for hk_Prismatic_Constraint
001564b8 r vtable for hk_Rigid_Body_Binary_EF
001526c0 r vtable for IPhysicsConstraintGroup
001533c0 r vtable for IPhysicsFluidController
001660c0 r vtable for IVP_Actuator_Four_Point
00166300 r vtable for IVP_Actuator_Stabilizer
00166520 r vtable for IVP_Actuator_Suspension
00168c90 r vtable for IVP_Collision_Delegator
00166860 r vtable for IVP_Controller_Buoyancy
00166de0 r vtable for IVP_Friction_Sys_Energy
00166e20 r vtable for IVP_Friction_Sys_Static
00166ca8 r vtable for IVP_Listener_Constraint
00166830 r vtable for IVP_Listener_Set_Active<IVP_Core>
00165c18 r vtable for IVP_Ray_Solver_Min_Hash
00169880 r vtable for IVP_SurfaceManager_Ball
001687a0 r vtable for IVP_U_Active_Test_Range
00153488 r vtable for CLiquidSurfaceDescriptor
00153a60 r vtable for CPhysicsMotionController
001534e0 r vtable for IPhysicsFrictionSnapshot
00153a20 r vtable for IPhysicsMotionController
00154560 r vtable for IPhysicsPlayerController
00154500 r vtable for IPhysicsShadowController
00167600 r vtable for IVP_Controller_Dependent
001684a8 r vtable for IVP_U_Active_Int_Delayed
00152f80 r vtable for CPhysicsListenerCollision
001563e0 r vtable for hk_Ball_Socket_Constraint
00155000 r vtable for IPhysicsVehicleController
001693b0 r vtable for IVP_3D_Solver_KK_PARALLEL
00166140 r vtable for IVP_Actuator_Force_Active
00166740 r vtable for IVP_Constraint_Solver_Car
00165ab0 r vtable for IVP_Meta_Collision_Filter
001686e0 r vtable for IVP_U_Active_Add_Multiple
00168498 r vtable for IVP_U_Active_Int_Listener
00168560 r vtable for IVP_U_Active_Terminal_Int
00152040 r vtable for CPhysCollideCompactSurface
00153040 r vtable for CPhysicsListenerConstraint
00156360 r vtable for hk_Local_Constraint_System
00156760 r vtable for hk_Stiff_Spring_Constraint
001664e0 r vtable for IVP_Actuator_Spring_Active
00166240 r vtable for IVP_Actuator_Torque_Active
00166640 r vtable for IVP_Car_System_Real_Wheels
001675c0 r vtable for IVP_Controller_Independent
00166920 r vtable for IVP_Controller_Raycast_Car
001678c0 r vtable for IVP_Event_Manager_Standard
00167de0 r vtable for IVP_SurfaceManager_Polygon
001684b8 r vtable for IVP_U_Active_Float_Delayed
00168440 r vtable for IVP_U_Active_Value_Manager
001661c0 r vtable for IVP_Actuator_Rot_Mot_Active
00167288 r vtable for IVP_Real_Object_Fast_Static
00168488 r vtable for IVP_U_Active_Float_Listener
00153800 r vtable for IPhysicsSurfacePropsInternal
00168cc0 r vtable for IVP_Collision_Delegator_Root
00168520 r vtable for IVP_U_Active_Terminal_Double
00167a78 r vtable for IVP_Liquid_Surface_Descriptor
00166280 r vtable for IVP_Listener_Check_Dist_Event
00167d00 r vtable for IVP_PerformanceCounter_Simple
001668a0 r vtable for IVP_Attacher_To_Cores_Buoyancy
00169920 r vtable for IVP_Object_Callback_Table_Hash
001552c0 r vtable for IVP_SurfaceManager_VirtualMesh
00169340 r vtable for IVP_3D_Solver_VEC_PARALLEL_AREA
00167640 r vtable for IVP_Standard_Gravity_Controller
001559d0 r vtable for CVPhysPtrUtlVectorSaveRestoreOps
00168d60 r vtable for IVP_Collision_Callback_Table_Hash
00152820 r vtable for CPhysics_Car_System_Raycast_Wheels
00165a98 r vtable for IVP_Collision_Filter_Exclusive_Pair
00169350 r vtable for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00168fc0 r vtable for IVP_Collision_Delegator_Root_Mindist
00167a90 r vtable for IVP_Liquid_Surface_Descriptor_Simple
00155e40 r vtable for ConVar
00155d80 r vtable for IConVar
001694f0 r vtable for CFmtStrN<256, false>
00153860 r vtable for CSurface
00169868 r vtable for IVP_Ball
00155510 r vtable for CTraceIVP
00166c10 r vtable for IVP_U_Set<IVP_Real_Object>
00166b88 r vtable for IVP_U_Set<IVP_Mindist_Base>
00166be0 r vtable for IVP_U_Set<IVP_Core>
00168b18 r vtable for IVP_VHash
         U vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
001b08d0 b datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
001ad1c0 d datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::dataDesc
001aff30 b datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
001ab140 d datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::dataDesc
001b0930 b datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
001adc20 d datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::dataDesc
001b0990 b datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
001ae200 d datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::dataDesc
001b0970 b datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
001adf80 d datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
001aff10 b datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
001ab060 d datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::dataDesc
001b08f0 b datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
001ad360 d datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::dataDesc
001b0910 b datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
001ad7c0 d datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::dataDesc
001b09b0 b datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
001ae400 d datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
001b0950 b datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
001ade20 d datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::dataDesc
001b06d0 b datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
001ac300 d datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::dataDesc
001b0830 b datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
001acf20 d datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::dataDesc
001b00b0 b datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
001abb20 d datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::dataDesc
001b0090 b datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
001aba00 d datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::dataDesc
001b0030 b datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
001ab580 d datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::dataDesc
001b0050 b datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
001ab6a0 d datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::dataDesc
001b0650 b datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
001ac220 d datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::dataDesc
001afff0 b datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
001ab280 d datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::dataDesc
001b0070 b datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
001ab840 d datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::dataDesc
001b0770 b datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
001aca00 d datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
001b0110 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
001abe60 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::dataDesc
001b09d0 b datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
001ae6a0 d datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::dataDesc
001b00d0 b datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
001abbe0 d datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::dataDesc
001b00f0 b datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
001abd00 d datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::dataDesc
001b0790 b datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
001acce0 d datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::dataDesc
001b0010 b datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
001ab4c0 d datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::dataDesc
001b0130 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
001abf80 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::dataDesc
001aed40 d qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)::firstcall
001b1080 b V_pretifymem(float, int, bool)::output
001b1180 b V_pretifymem(float, int, bool)::current
001b0f60 b V_pretifynum(long long)::output
001b1060 b V_pretifynum(long long)::current
001b71e0 b p_read_first_token(_IO_FILE*)::buffer
001b7ee0 b Bias(float, float)::lastExponent
001bfd60 b pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
001bfd70 b pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszPathMatchEnabled
001afcc0 b GetTmpObjectMatrix(IVP_Real_Object*)::coreShiftMatrix
001afa80 b InitializeCharacterSets()::s_CharacterSetInitialized
001b2580 b CUtlString::GetEmptyString()::s_emptyString
001b25d0 b CUtlSymbol::Initialize()::symbolsInitialized
001b79e0 b IVP_Mindist::update_exact_mindist_events(IVP_BOOL, IVP_MINDIST_EVENT_HINT)::count
00168a38 r IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
001af5b4 d IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
001af5a0 d IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)::pm
001af5c8 d IVP_U_Min_Hash::add(void*, double)::sort_counter
001b0f20 b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
001562c0 r CThreadSpinRWLock::TryLockForWrite(unsigned int)::oldValue
001558e0 r CPhysicsEnvironment::Save(physsaveparams_t const&)::saveFuncs
001558a0 r CPhysicsEnvironment::Restore(physrestoreparams_t const&)::restoreFuncs
001b02a0 b CPhysicsEnvironment::Simulate(float)::autoMutex__
001b71a0 b IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
001aed24 d IVV_Cluster_Min_Hash::add(void*, double)::sort_counter
001b7190 b IVP_BetterStatisticsmanager::set_simulation_time(double)::time_of_last_update
001b7a80 b CFmtStrN<256, false>::sprintf(char const*, ...)::scAsserted
001aec40 d ConVarRef::Init(char const*, bool)::bFirst
001b2620 b hk_Memory::get_instance()::s_memory_instance
001aed10 d CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001ac200 d CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001aec30 d CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
